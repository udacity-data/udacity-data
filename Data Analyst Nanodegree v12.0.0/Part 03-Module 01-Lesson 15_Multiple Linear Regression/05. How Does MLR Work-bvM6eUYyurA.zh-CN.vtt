WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.779
这里我将要展示如何

00:00:03.779 --> 00:00:08.000
在多重线性回归模型中使用这里的矩阵检索系数

00:00:08.000 --> 00:00:10.410
这是上节课视频中涉及的

00:00:10.410 --> 00:00:13.849
多重线性回归模型得到的输出

00:00:13.849 --> 00:00:16.164
你可以看到系数在这里

00:00:16.164 --> 00:00:18.285
这里有四个值 截距

00:00:18.285 --> 00:00:21.135
卫生间数量 卧室数量和面积

00:00:21.135 --> 00:00:22.740
我们将要展示你如何

00:00:22.739 --> 00:00:27.704
使用这上面矩阵中的数据得到这四个值

00:00:27.704 --> 00:00:30.899
首先创建 X 矩阵

00:00:30.899 --> 00:00:34.769
其中只包含我们这里看到的输出部分

00:00:34.770 --> 00:00:36.345
所以我们需要一个表示截距

00:00:36.344 --> 00:00:39.390
一个表示卫生间 一个表示卧室 一个表示面积

00:00:39.390 --> 00:00:43.255
实际上我们只要把这部分拖放到这里

00:00:43.255 --> 00:00:49.030
然后我们称之为 X 矩阵和 y 之后作为我们的反应变量

00:00:49.030 --> 00:00:54.185
所以这里我们只需要预测价格

00:00:54.185 --> 00:00:57.145
这里可以看到闭合解

00:00:57.145 --> 00:01:01.109
这样可以说 我们通过得到 X 估算系数

00:01:01.109 --> 00:01:06.105
这称为转置矩阵 然后乘以 X

00:01:06.105 --> 00:01:09.120
通过求逆运算 我们再乘以

00:01:09.120 --> 00:01:12.840
X 转置矩阵 然后乘以反应矢量 Y

00:01:12.840 --> 00:01:18.105
这就是我们想要完成的 这里得到了我们想要的系数

00:01:18.105 --> 00:01:21.685
在矩阵乘法中 你不需要采用纯量乘法的相同方式

00:01:21.685 --> 00:01:25.620
不能使用数量积相乘

00:01:25.620 --> 00:01:29.880
我们进行 numPy 快速搜索 观察如何利用转置矩阵

00:01:29.879 --> 00:01:34.212
求逆运算和数量积计算得到

00:01:34.212 --> 00:01:41.009
这里我们可以看到 使用这个转置和 numPy 对矩阵进行变换

00:01:41.010 --> 00:01:44.359
这样进行 numPy 然后对矩阵转置

00:01:44.359 --> 00:01:47.439
然后另外我们还想做

00:01:47.439 --> 00:01:51.575
即数量积 我们可以看到这里获取的文档

00:01:51.575 --> 00:01:55.915
所以 numPy 点 然后最后进行可逆运算

00:01:55.915 --> 00:02:00.800
非常棒 这样看起来可以在线性代数部分中可以用于 numPy

00:02:00.799 --> 00:02:02.480
其次这是个倒数

00:02:02.480 --> 00:02:04.520
然后我们继续使用这些

00:02:04.519 --> 00:02:07.614
我们的公式像是这里所示

00:02:07.614 --> 00:02:13.479
我们对 X 转换 乘以这两个的数量积 X

00:02:13.479 --> 00:02:16.389
然后进行可逆运算

00:02:16.389 --> 00:02:19.669
再对转置矩阵进行数量积运算 对反应进行数量积运算

00:02:19.669 --> 00:02:22.569
这应该得出对系数的估算

00:02:22.569 --> 00:02:24.935
这样我们得到转置矩阵

00:02:24.935 --> 00:02:29.000
然后我们将之乘以 X

00:02:29.000 --> 00:02:31.460
即数量积

00:02:31.460 --> 00:02:38.835
然后再次这样相乘 数量积乘以 X 转置矩阵

00:02:38.835 --> 00:02:43.070
然后得到反应的最终数量积

00:02:43.069 --> 00:02:46.109
我们得到 X 转置率

00:02:46.110 --> 00:02:52.840
x 转置为 X 然后需要对整个这一部分求倒数

00:02:52.840 --> 00:02:56.360
我们需要使用这里的线性代数部分

00:02:56.360 --> 00:03:01.760
这里我称为 np.linalg

00:03:01.759 --> 00:03:04.969
然后得到它的倒数

00:03:04.969 --> 00:03:08.509
然后我们把它乘以转置矩阵 然后乘以反应

00:03:08.509 --> 00:03:11.495
非常好 这时你会发现

00:03:11.495 --> 00:03:16.789
截距值匹配这里 然后这个斜率

00:03:16.789 --> 00:03:20.539
与卫生间数量相关 这个斜率与

00:03:20.539 --> 00:03:25.939
卧室数量相关 这个斜率与建筑面积相关

00:03:25.939 --> 00:03:28.814
因为存在 statsmodels 这种库

00:03:28.814 --> 00:03:31.240
我们不需这样进行运算

00:03:31.240 --> 00:03:33.530
然而理解

00:03:33.530 --> 00:03:35.689
最优化技巧可以帮助你了解

00:03:35.689 --> 00:03:38.509
为什么有些运算不能起作用

00:03:38.509 --> 00:03:40.479
在接下来的的部分中

00:03:40.479 --> 00:03:42.259
我们将会看到

00:03:42.259 --> 00:03:45.139
理解这个方程式有利于理解结果的例子

