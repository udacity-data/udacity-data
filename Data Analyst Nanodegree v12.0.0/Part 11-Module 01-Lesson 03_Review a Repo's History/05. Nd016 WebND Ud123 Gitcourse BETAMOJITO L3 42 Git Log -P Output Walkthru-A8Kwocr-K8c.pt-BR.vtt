WEBVTT
Kind: captions
Language: pt-BR

00:00:00.193 --> 00:00:04.624
Vamos rodar o comando git log -p
para ver os commits

00:00:04.657 --> 00:00:07.265
mas também para incluir
as mudanças no código,

00:00:07.298 --> 00:00:10.732
ou patch, feitas nos arquivos.

00:00:10.765 --> 00:00:14.166
Esta primeira parte é igual
ao comando git log normal.

00:00:14.199 --> 00:00:16.408
Assim como a opção --stat,

00:00:16.441 --> 00:00:21.363
a opção -p, ou --patch,
adiciona informações extras

00:00:21.396 --> 00:00:24.009
abaixo das informações
de commit padrão.

00:00:24.042 --> 00:00:27.129
Este é o início
do output do patch.

00:00:27.162 --> 00:00:29.433
Admito que este output
é um pouco complicado,

00:00:29.466 --> 00:00:31.048
mas me acompanhe,

00:00:31.081 --> 00:00:33.127
porque você não vai olhar
as linhas de cima

00:00:33.160 --> 00:00:34.265
na maioria das vezes,

00:00:34.298 --> 00:00:36.129
mas é bom saber
o que elas são.

00:00:36.162 --> 00:00:39.639
Um diff e um patch
se referem à mesma coisa.

00:00:39.672 --> 00:00:43.457
O patch mostra a diferença
entre a versão original do arquivo

00:00:43.490 --> 00:00:45.855
e a versão modificada
do arquivo.

00:00:45.888 --> 00:00:48.151
Estamos olhando
para o arquivo CSS.

00:00:48.184 --> 00:00:50.275
Aqui está a primeira versão
do arquivo.

00:00:50.308 --> 00:00:54.211
Ela aparece no diretório "a",
pois é a primeira.

00:00:54.244 --> 00:00:57.128
Mas não é um diretório
que você vê no repo.

00:00:57.161 --> 00:00:58.919
E temos a segunda versão.

00:00:58.952 --> 00:01:02.670
Ela aparece em um diretório "b"
pois é a segunda.

00:01:02.703 --> 00:01:05.154
Estas duas têm o mesmo nome
porque estamos olhando

00:01:05.187 --> 00:01:07.913
para duas versões diferentes
do mesmo arquivo.

00:01:07.946 --> 00:01:10.703
Seriam diferentes
se o arquivo fosse renomeado.

00:01:10.736 --> 00:01:13.511
Sim, o Git monitora
os arquivos renomeados.

00:01:13.544 --> 00:01:16.432
Legal, né?
Bom, voltando para o output.

00:01:16.465 --> 00:01:18.200
Esta linha mostra o hash

00:01:18.233 --> 00:01:20.638
da primeira versão do arquivo
antes da mudança

00:01:20.671 --> 00:01:23.223
e o hash depois da mudança.

00:01:23.256 --> 00:01:26.353
Estes hashes são diferentes
do SHA do commit.

00:01:26.386 --> 00:01:28.576
Eu nunca olho para essa linha.

00:01:28.609 --> 00:01:31.399
Estas duas são as mesmas
que estas aqui.

00:01:31.432 --> 00:01:34.800
São as versões nova e antiga
dos arquivos.

00:01:34.833 --> 00:01:37.875
Vamos voltar para esta linha
daqui a pouco.

00:01:37.908 --> 00:01:41.283
Este é o código
do arquivo CSS.

00:01:41.316 --> 00:01:46.260
Estas linhas verdes
com o sinal de mais no início

00:01:46.293 --> 00:01:49.932
significam que foram adicionadas
neste commit.

00:01:49.965 --> 00:01:52.079
Vamos voltar
para esta linha agora.

00:01:52.112 --> 00:01:55.338
Ela está dizendo onde as edições
foram feitas no arquivo.

00:01:55.371 --> 00:01:58.598
Diz que na versão antiga
ou original do arquivo

00:01:58.631 --> 00:02:00.830
este código é da linha 38

00:02:00.863 --> 00:02:03.672
e que está mostrando
6 linhas de código.

00:02:03.705 --> 00:02:05.224
Estas 6 linhas estão aqui:

00:02:05.257 --> 00:02:10.281
uma, duas, três,
quatro, cinco, seis.

00:02:10.314 --> 00:02:13.238
Na versão nova
ou atual do arquivo,

00:02:13.271 --> 00:02:15.310
também começa na linha 38,

00:02:15.343 --> 00:02:17.732
mas agora são
11 linhas de código,

00:02:17.765 --> 00:02:20.793
as 6 originais
mais as 5 novas.

00:02:20.826 --> 00:02:23.478
Podemos ver
todas as 11 linhas aqui.

00:02:23.511 --> 00:02:26.079
Este commit só tem adições.

00:02:26.112 --> 00:02:28.333
Como ficaria se linhas
fossem removidas?

00:02:28.366 --> 00:02:29.688
Vamos dar uma olhada.

00:02:29.721 --> 00:02:31.756
Precisamos rolar
até o próximo commit.

00:02:31.789 --> 00:02:33.145
Aqui está ele.

00:02:33.178 --> 00:02:37.710
Este primeiro output de patch
é do arquivo CSS novamente.

00:02:38.184 --> 00:02:41.822
E aqui está o output de patch
do arquivo HTML.

00:02:41.855 --> 00:02:43.883
As linhas que foram
removidas pelo commit

00:02:43.916 --> 00:02:47.125
estão em vermelho
e começam com o sinal de menos.

00:02:47.158 --> 00:02:50.110
Algo para se notar aqui
que é bem importante:

00:02:50.143 --> 00:02:53.179
o Git monitora as edições
por linha.

00:02:53.212 --> 00:02:55.115
Quando edições são feitas
em linhas,

00:02:55.148 --> 00:02:58.823
ele mostra a linha sendo removida
e adicionada de novo.

00:02:58.856 --> 00:03:01.362
Por exemplo,
aqui diz que main foi apagado,

00:03:01.395 --> 00:03:04.445
mas aqui diz que main
foi adicionado de novo.

00:03:04.478 --> 00:03:06.730
O div com classe "container"
foi adicionado,

00:03:06.763 --> 00:03:09.542
e o elemento main
com seu código foi indentado,

00:03:09.575 --> 00:03:12.576
então ficou aninhado corretamente
no arquivo HTML.

00:03:12.609 --> 00:03:15.184
Endentar esta linha
mudou isso.

00:03:15.217 --> 00:03:19.344
Então, para o Git, esta linha
com uma endentação foi removida,

00:03:19.377 --> 00:03:22.520
enquanto esta aqui
com duas endentações foi adicionada.

00:03:22.553 --> 00:03:25.827
Sei que há muitas informações
no output do patch,

00:03:25.860 --> 00:03:29.416
mas algumas são redundantes
e outras podem ser ignoradas.

00:03:29.449 --> 00:03:32.295
As coisas importantes
no output do patch são

00:03:32.328 --> 00:03:34.107
o arquivo para o qual
estamos olhando,

00:03:34.140 --> 00:03:35.260
as mudanças,

00:03:35.293 --> 00:03:39.330
e às vezes é útil saber onde
as mudanças foram feitas no arquivo.

