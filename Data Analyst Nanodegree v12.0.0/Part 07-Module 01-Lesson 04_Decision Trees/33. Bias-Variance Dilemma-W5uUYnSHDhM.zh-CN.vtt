WEBVTT
Kind: captions
Language: zh-CN

00:00:00.400 --> 00:00:01.690
欢迎回到这辆无人驾驶车上

00:00:01.690 --> 00:00:04.760
Katie 刚刚让我向大家解释两个机器学习术语

00:00:04.760 --> 00:00:06.220
偏差和方差

00:00:06.220 --> 00:00:10.870
它们通常出现在偏差—方差困境中 下面是它的一些要点

00:00:10.870 --> 00:00:16.309
高偏差机器学习算法实际上会忽略训练数据

00:00:16.309 --> 00:00:20.610
它几乎没有能力学习任何数据 这被称为偏差

00:00:20.610 --> 00:00:24.120
所以 对一个有偏差的汽车进行训练

00:00:24.120 --> 00:00:26.730
无论训练通过何种方式进行 它的操作都不会有任何区别

00:00:26.730 --> 00:00:30.270
这在机器学习中通常不是好事

00:00:30.270 --> 00:00:33.090
但你可能进入另一个极端情况 也就是汽车对数据高度敏感

00:00:33.090 --> 00:00:36.490
它只能复现曾经见过的东西

00:00:36.490 --> 00:00:38.230
那样就会是一个方差极高的算法

00:00:38.230 --> 00:00:42.250
它的问题在于 对于之前未见过的情况 它的反应非常差

00:00:42.250 --> 00:00:46.260
因为没有适当的偏差让它泛化新的东西

00:00:46.260 --> 00:00:49.200
所以 你真正想要的算法是两者的折中

00:00:49.200 --> 00:00:50.790
也就是所谓的偏差—方差权衡

00:00:50.790 --> 00:00:54.120
你希望算法具有一定的泛化能力

00:00:54.120 --> 00:00:56.380
但仍然对训练数据开放 能根据数据来调整模型

00:00:56.380 --> 00:00:57.960
这往往取决于你的选择

00:00:57.960 --> 00:01:00.600
这样的算法有很多 你其实可以调整参数

00:01:00.600 --> 00:01:03.986
让算法倾向于更高的偏差 或更高的方差

00:01:03.986 --> 00:01:08.400
机器学习引人入胜的一点就是调参的艺术

