WEBVTT
Kind: captions
Language: pt-BR

00:00:00.110 --> 00:00:03.710
Para saber quais parâmetros estão disponíveis para mim,

00:00:03.710 --> 00:00:05.530
voltando à documentação do SK Learn.

00:00:05.530 --> 00:00:06.830
Bom, isto deve parecer meio familiar.

00:00:06.830 --> 00:00:08.900
Encontramos isto no Google, lembra?

00:00:08.900 --> 00:00:11.610
Vou rolar para baixo um pouco até encontrar o classificador

00:00:11.610 --> 00:00:15.010
da árvore de decisão, que está documentado aqui e

00:00:15.010 --> 00:00:16.309
vou apenas clicar neste link.

00:00:17.520 --> 00:00:20.970
E isto me leva para a página específica sobre o DecisionTreeClassifier.

00:00:20.970 --> 00:00:23.660
E esta caixa aqui é o que estou procurando.

00:00:23.660 --> 00:00:26.510
Isto aqui vai me dizer todos os parâmetros que

00:00:26.510 --> 00:00:28.880
estão disponíveis para mim para criar meu classificador.

00:00:30.010 --> 00:00:34.200
Eu posso ver que há muita coisa acontecendo aqui que eu posso ajustar.

00:00:34.200 --> 00:00:40.710
Tem o parâmetro chamado criterion, tem o splitter, tem max_depth,

00:00:40.710 --> 00:00:45.780
tem o parâmetro de mínimo de amostras na divisão, mínimo de amostras na folha e

00:00:45.780 --> 00:00:47.260
assim por diante.

00:00:47.260 --> 00:00:50.370
Estas são todas as coisas que posso tentar ajustar.

00:00:50.370 --> 00:00:51.400
Então, vou escolher um destes.

00:00:51.400 --> 00:00:54.150
Vamos dar uma olhada no min_samples_split.

00:00:54.150 --> 00:00:57.610
Podemos ver se treinando o min_samples_split,

00:00:57.610 --> 00:01:00.620
talvez possamos aliviar parte desse sobreajuste que

00:01:00.620 --> 00:01:03.380
estávamos vendo no exemplo que acabei de mostrar.

00:01:03.380 --> 00:01:06.210
Bem, isto é o que o min_sample_split faz.

00:01:06.210 --> 00:01:07.730
Eu tenho minha árvore de decisão.

00:01:08.950 --> 00:01:10.690
Começo com um monte de exemplos de treinamento,

00:01:10.690 --> 00:01:16.830
depois começo a dividi-los em subamostras menores.

00:01:16.830 --> 00:01:21.560
Em algum momento, preciso saber se vou dar continuidade à divisão.

00:01:21.560 --> 00:01:25.050
Por exemplo, se eu começar com 100 exemplos aqui,

00:01:25.050 --> 00:01:29.190
talvez eu obtenha 60 e 40.

00:01:29.190 --> 00:01:32.150
E talvez eu obtenha 40 e 20.

00:01:32.150 --> 00:01:36.820
E, talvez, este 20 se transforme em 15.

00:01:36.820 --> 00:01:39.790
E cinco e assim por diante.

00:01:39.790 --> 00:01:43.320
Então, a questão é se para cada uma destas camadas mais baixas

00:01:43.320 --> 00:01:46.750
na árvore, vou continuar a divisão,

00:01:46.750 --> 00:01:49.290
se isso parece uma boa ideia.

00:01:49.290 --> 00:01:53.070
E o que o min_samples_split controla é basicamente se eu

00:01:53.070 --> 00:01:54.270
posso continuar a dividir ou não,

00:01:54.270 --> 00:01:57.760
se há amostras suficientes disponíveis para eu continuar

00:01:57.760 --> 00:01:59.150
a dividir mais ainda.

00:01:59.150 --> 00:02:01.771
Bom, o número padrão para min_sample_split é dois.

00:02:03.040 --> 00:02:07.290
Todos os estes nós podem ser ainda mais divididos, exceto um.

00:02:07.290 --> 00:02:10.979
Então, minha pergunta para você é: qual destes nós

00:02:13.770 --> 00:02:18.400
aqui dentre as suas opções eu não poderia dividir ainda mais?

