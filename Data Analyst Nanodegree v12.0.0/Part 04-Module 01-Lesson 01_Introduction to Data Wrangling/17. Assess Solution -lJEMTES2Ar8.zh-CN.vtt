WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.899
不 该数据集并不整洁

00:00:03.899 --> 00:00:07.299
为了使数据整洁 我们需要每个变量为一列

00:00:07.299 --> 00:00:09.202
每次观察结果为一行

00:00:09.202 --> 00:00:12.459
每类观察单位为一个表格

00:00:12.460 --> 00:00:16.070
首先 我们有重复的数据

00:00:16.070 --> 00:00:18.765
这里的日期列

00:00:18.765 --> 00:00:22.105
例如 2004 年 1 月 5 日

00:00:22.105 --> 00:00:25.379
月、日和年

00:00:25.379 --> 00:00:28.945
在数据集最后又出现了 其中年和月各成一列

00:00:28.945 --> 00:00:32.105
这就是日期数据的重复表达

00:00:32.104 --> 00:00:35.669
这意味着我们有两种日期数据的表达

00:00:35.670 --> 00:00:37.875
为保证整洁 我们需要一个日数

00:00:37.875 --> 00:00:39.659
一个月份和一个年份

00:00:39.659 --> 00:00:43.464
如果我们必须对数据进行更新 我们只需在一处更新即可

00:00:43.465 --> 00:00:47.475
我还认为 此数据集中有两类观察单位

00:00:47.475 --> 00:00:50.420
即工作招聘数据和公司数据

00:00:50.420 --> 00:00:55.155
要保证数据整洁 我们还必须将它们分成两个表

00:00:55.155 --> 00:00:59.965
其一 数据集内除 AboutC 列之外全部的工作招聘数据

00:00:59.965 --> 00:01:03.330
其二 公司表格

00:01:03.329 --> 00:01:09.090
仅公司列和 AboutC 列 即 About Company (公司信息) 列

00:01:09.090 --> 00:01:12.090
现在演示中我们将要跳过

00:01:12.090 --> 00:01:15.635
记录整洁度问题这个环节 也不在清理步骤修复这个问题

00:01:15.635 --> 00:01:17.040
我想尽量节约这一课的时间

00:01:17.040 --> 00:01:21.900
也因为非整洁数据有时候也是可以用的

00:01:21.900 --> 00:01:25.650
Jeff Leek 在他关于非整洁数据的博客帖子中很好地说明了这一点

00:01:25.650 --> 00:01:29.484
暂停视频 花点时间阅读这段话

00:01:29.484 --> 00:01:32.969
在我的演示期间以及你之后创建分析和可视化时 请记住我的话

00:01:32.969 --> 00:01:36.579
非整洁格式的数据也是可以用的

