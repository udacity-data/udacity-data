WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:01.685
حسنًا، تهانينا.

00:00:01.685 --> 00:00:04.220
لقد قمت بمعالجة مجموعة البيانات بنجاح.

00:00:04.219 --> 00:00:09.399
لقد أكملت عملية المعالجة بالكامل من التجميع، إلى
التقييم

00:00:09.400 --> 00:00:12.475
مرورًا بمسح بياناتك، وهو ما يعني تحديد

00:00:12.474 --> 00:00:16.195
عمليات المسح وترميزها واختبارها.

00:00:16.195 --> 00:00:18.984
وبعد أن نكون راضين بحالة بياناتنا،

00:00:18.984 --> 00:00:21.359
ونقوم بذلك هنا بغرض المعاينة،

00:00:21.359 --> 00:00:22.765
حان الآن وقت العمل على ذلك.

00:00:22.765 --> 00:00:25.120
وهو ما يمكن أن يعني التحليل والمرئيات.

00:00:25.120 --> 00:00:26.815
وهو ما سنقوم به الآن.

00:00:26.815 --> 00:00:30.160
ما الرؤى التي نرغب في استخراجها من هذه البيانات؟

00:00:30.160 --> 00:00:31.765
إنها عن طلبات الوظائف،

00:00:31.765 --> 00:00:35.770
لذا، ربما يكون من المفيد معرفة نسبة الطلبات

00:00:35.770 --> 00:00:40.580
التي تبحث عن شخصٍ ما لاستلام الوظيفة بشكل عاجل، أي
في أسرع وقت ممكن.

00:00:40.579 --> 00:00:42.939
هذه زاوية جيدة للتحليل، لدينا الآن بيانات

00:00:42.939 --> 00:00:46.149
ممسوحة بشكل جيد لهذا الغرض، وكذلك في عمود تاريخ
البدء لدينا.

00:00:46.149 --> 00:00:50.244
ونظرًا لأن هذه الدورة التدريبية تركّز على تعارض
البيانات وليس تحليل البيانات،

00:00:50.244 --> 00:00:53.814
سأوضح لكم كيفية عمل الكود في هذا التحليل هنا.

00:00:53.814 --> 00:00:55.780
ولكن سيكون هناك Jupyter Notebook أسفل هذا الفيديو

00:00:55.780 --> 00:00:58.320
لتتمكن من القيام بذلك بنفسك إذا كنت ترغب في ذلك.

00:00:58.320 --> 00:01:00.064
وأنا أشجعك على استكشاف ذلك بنفسك.

00:01:00.064 --> 00:01:02.890
عند إجراء عمليات حسابية بسيطة كهذه،

00:01:02.890 --> 00:01:06.430
أحب كتابة البسط والمقام.

00:01:06.430 --> 00:01:08.630
حيث يساعدني ذلك في عزل المشكلة.

00:01:08.629 --> 00:01:15.084
نسبة مئوية أو كسور تحتوي على بسط ومقام.

00:01:15.084 --> 00:01:16.939
ومن جديد، نحن نبحث عن النسبة المئوية لطلبات
الوظائف

00:01:16.939 --> 00:01:18.965
التي تبحث عن شخصٍ ما لاستلام الوظيفة بشكل عاجل،

00:01:18.965 --> 00:01:22.210
أي في أسرع وقت ممكن. هيا نواصل.

00:01:22.209 --> 00:01:27.059
عدد الطلبات ذات تواريخ البدء العاجلة مقسومًا على
تواريخ البدء غير الفارغة.

00:01:27.060 --> 00:01:29.019
حسنًا، إليك كيفية عمل الكود.

00:01:29.019 --> 00:01:33.783
يمكننا استخدام دالة value_counts مرة أخرى واختيار
عدد التواريخ العاجلة هذا،

00:01:33.784 --> 00:01:38.719
وهو 6،856، والذي يجب أن نراه هنا، وها هو قد ظهر،
رائع.

00:01:38.719 --> 00:01:40.230
هذا هو البسط خاصتنا.

00:01:40.230 --> 00:01:42.030
وبالنسبة إلى الأعداد غير الفارغة،

00:01:42.030 --> 00:01:43.823
يمكننا فقط استخدام دالة العدّ.

00:01:43.822 --> 00:01:48.264
ويستثني هذا جميع مدخلات NaN، 9,675.

00:01:48.265 --> 00:01:53.560
ويجب أن تكون نفس القيمة التي نراها في دالة المعلومات،
ونعم.

00:01:53.560 --> 00:01:58.670
StartDate، 9,675، الأشياء غير الفارغة.

00:01:58.670 --> 00:02:03.254
غير خالي بمعنى غير فارغ أو non-NaN.

00:02:03.254 --> 00:02:07.459
وكل ما علينا القيام به الآن هو قسمة الاثنين، البسط
على المقام،

00:02:07.459 --> 00:02:12.259
أحسنتم، تقريبًا 71 من طلبات الوظائف التي تتضمن تواريخ
بدء عاجلة.

00:02:12.259 --> 00:02:15.000
يا إلهي، أحسنتم، هذا أفضل بكثير مما توقعت.

00:02:15.000 --> 00:02:17.509
سيكون رائعًا إذا تمكننا من إعداد مخطط يوضح

00:02:17.509 --> 00:02:20.245
توزيع تواريخ البدء في البيانات.

00:02:20.245 --> 00:02:22.740
وفي هذه المرحلة، يأتي دور المرئيات.

00:02:22.740 --> 00:02:25.340
دعونا نحوّل هذا التحليل إلى vis.

00:02:25.340 --> 00:02:28.189
سنقوم بإنشاء مخطط دائري،

00:02:28.189 --> 00:02:30.609
والمخططات الدائرية تعمل بشكل جيد أحيانًا.

00:02:30.610 --> 00:02:32.790
ومرة أخرى، سأنقلكم إلى الكود هنا

00:02:32.789 --> 00:02:35.400
لأن هذه الدورة التدريبية لا تتعلق بمؤثرات عرض
البيانات.

00:02:35.400 --> 00:02:37.230
وهنا أيضًا، ستكون هناك فرصة للترميز

00:02:37.229 --> 00:02:41.229
في Jupyter Notebook أسفل هذا الفيديو، إذا كنت ترغب
في ذلك.

00:02:41.229 --> 00:02:43.780
حسنًا، ها هو كود المرئيات.

00:02:43.780 --> 00:02:49.034
سنقوم بإرفاق دالة الرسم باستخدام دالة value_counts
الخاصة بنا.

00:02:49.034 --> 00:02:51.115
نريد مخططًا دائريًا ونضغط على shift enter،

00:02:51.115 --> 00:02:53.080
وهذا ما يجب أن تكون عليه. في الواقع، لقد كذبت.

00:02:53.080 --> 00:02:55.090
نحتاج إلى وضع هذا الجزء البسيط من الكود هنا أولًا

00:02:55.090 --> 00:02:58.015
لعرض الرسومات في دفتر الملاحظات الخاص بنا،

00:02:58.014 --> 00:02:59.619
كما يوجد مخططنا الدائري.

00:02:59.620 --> 00:03:04.090
إنه أمر سيء للغاية رغم وجود العديد من التسميات هنا

00:03:04.090 --> 00:03:09.330
التي تتناول جميع المدخلات في نتائج أعداد القيم التي
تراها هنا.

00:03:09.330 --> 00:03:12.850
هذا كثير جدًا. لذلك، سنقوم باستيراد مكتبة تسمى
numpy،

00:03:12.849 --> 00:03:15.724
أو نموذج قصير أو اسم مستعار، np.

00:03:15.724 --> 00:03:18.009
وبعد ذلك سنقوم بإنشاء مصفوفة مخصصة من

00:03:18.009 --> 00:03:22.799
التسميات، وسيكون لهذه المصفوفة نفس طول ناتج
value_counts.

00:03:22.800 --> 00:03:26.715
ستبدأ المصفوفة كمصفوفة فارغة أو أي

00:03:26.715 --> 00:03:30.094
 سلسلة فارغة هنا مع كائن النوع.

00:03:30.094 --> 00:03:32.229
ويحدث هذا في التفاصيل المهمة لـ

00:03:32.229 --> 00:03:35.424
numpy، لذا لا تتوتر إذا كان هذا غير منطقي بالنسبة
لك حاليًا.

00:03:35.425 --> 00:03:37.900
ودعونا ننشأ التسمية الأولى في تلك المصفوفة،

00:03:37.900 --> 00:03:41.950
ASAP، لأن السطر الأول هنا هو ASAP.

00:03:41.949 --> 00:03:43.844
تحقق من vis هذا.

00:03:43.844 --> 00:03:49.000
هذا كثير من طلبات الوظائف العاجلة، 71٪ تقريبًا.

