WEBVTT
Kind: captions
Language: pt-BR

00:00:00.500 --> 00:00:03.667
Agora que temos o arquivo .zip
baixado e "deszipado",

00:00:03.700 --> 00:00:06.067
devemos abrir e extrair
o arquivo csv,

00:00:06.100 --> 00:00:09.067
para podermos ver e trabalhar
com os dados dentro dele.

00:00:09.100 --> 00:00:11.767
Faremos isso importando-o
para uma tabela como estrutura

00:00:11.800 --> 00:00:16.033
no nosso Jupyter Notebook usando
uma biblioteca do Python, Pandas.

00:00:16.833 --> 00:00:20.200
Pandas, criada por West McKinney,
é uma biblioteca de código aberto

00:00:20.233 --> 00:00:23.233
que fornece alto desempenho,
estruturas de dados simples de usar,

00:00:23.267 --> 00:00:26.333
e ferramentas de análise para
a linguagem de programação Python.

00:00:26.367 --> 00:00:28.700
Usar Pandas é padrão
e é a melhor prática

00:00:28.733 --> 00:00:31.100
para análise de dados no Python
hoje em dia.

00:00:31.133 --> 00:00:33.533
No contexto da etapa de coleta
para preparação,

00:00:33.567 --> 00:00:37.133
Pandas pode importar quase
qualquer formato imaginável

00:00:37.167 --> 00:00:39.033
e também links
para bancos de dados.

00:00:39.067 --> 00:00:42.500
Aqui, veremos o básico de Pandas,
mas, se quiser saber mais,

00:00:42.533 --> 00:00:45.733
recomendo que procure o curso
de Pandas, se ainda não o fez.

00:00:45.767 --> 00:00:48.333
Tem um link para ele
nas notas abaixo deste vídeo.

00:00:48.367 --> 00:00:52.367
Pandas nos permite ver e trabalhar
com arquivos CSV em um formato

00:00:52.400 --> 00:00:55.467
simples e tabular, conhecido
como Panda Dataframe.

00:00:55.500 --> 00:00:57.533
Pense nesse dataframe
como uma planilha,

00:00:57.567 --> 00:00:59.567
porém mais fácil de manipular
usando códigos

00:00:59.600 --> 00:01:01.100
e mais potente de forma geral,

00:01:01.133 --> 00:01:03.733
mas não tão boa para navegar
por conjuntos de informação.

00:01:03.767 --> 00:01:07.767
Nossa tarefa é importar um arquivo
CSV para um Panda Dataframe.

00:01:07.800 --> 00:01:10.533
Isso é o que eu realmente faço
o tempo todo

00:01:10.567 --> 00:01:13.133
para entender como proceder.
O Google é seu amigo.

00:01:13.167 --> 00:01:18.033
Eu procuro "importar CVS Pandas",
e o primeiro resultado

00:01:18.633 --> 00:01:20.700
é "leitura_função csv".

00:01:20.733 --> 00:01:24.067
"Ler CSV, arquivo separado
por vírgulas em dataframes."

00:01:24.100 --> 00:01:26.400
Vamos copiar e colar
a descrição da função

00:01:26.433 --> 00:01:28.833
para adicionar um comentário
ao nosso código.

00:01:32.400 --> 00:01:35.333
Certo, o principal argumento aceito
é o caminho para o arquivo CSV

00:01:35.367 --> 00:01:38.167
que queremos ler dentro
do nosso Jupyter Notebook.

00:01:38.200 --> 00:01:40.133
Você pode ignorar o resto,
por ora.

00:01:40.167 --> 00:01:43.500
Se formos até o fim do texto,
veremos que a função

00:01:43.533 --> 00:01:46.033
devolve um dataframe.

00:01:46.067 --> 00:01:48.967
Certo, então vamos voltar
ao Jupyter Notebook e, primeiro,

00:01:49.000 --> 00:01:52.033
teremos que importar a livraria
do Pandas,

00:01:52.067 --> 00:01:54.000
o que habitualmente fazemos.

00:01:54.033 --> 00:01:59.000
Importar Pandas como PD
chama-se "aliasing".

00:01:59.033 --> 00:02:02.433
Neste caso, para não termos
que digitar quatro letras a mais,

00:02:02.467 --> 00:02:07.200
abreviamos "Pandas" para "PD",
um codificador mais eficiente.

00:02:07.233 --> 00:02:11.367
Processamos aquela célula,
voltamos para cá,

00:02:11.400 --> 00:02:16.333
digitamos em "pd.read csv"

00:02:16.367 --> 00:02:18.333
e nomeamos o resultado
dessa função,

00:02:18.367 --> 00:02:22.800
o fragmento de dado que retorna,
como DF, abreviatura de "dataframe".

00:02:22.833 --> 00:02:24.967
Essa é uma convenção comum.

00:02:25.000 --> 00:02:28.700
Tudo que resta agora é preencher
o parâmetro de caminho do arquivo,

00:02:28.733 --> 00:02:32.467
que você pode verificar aqui,
ou usar um novo recurso

00:02:32.500 --> 00:02:36.400
do qual ainda não falamos,
chamado "shift tab completion".

00:02:36.433 --> 00:02:39.467
Se você clicar em shift e tab aqui,
verá a assinatura da função,

00:02:39.500 --> 00:02:41.767
o caminho do arquivo
e o argumento buffer

00:02:41.800 --> 00:02:44.300
que precisamos preencher.
Então faça isso agora.

