WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:03.444
الآن حيث لدينا ملف zip الخاص بنا وقد تم تنزيله وفك
ضغطه،

00:00:03.444 --> 00:00:08.824
نحتاج أن نفتح ملف CSV بعد فك الضغط حتى يمكننا أن
نرى البيانات الموجودة بداخله ونعمل عليها.

00:00:08.824 --> 00:00:11.649
سنفعل ذلك عن طريق استيراد البيانات إلى جدول يشبه
البناء

00:00:11.650 --> 00:00:16.130
في دفتر ملاحظات Jupyter الخاص بنا، باستخدام مكتبة
python تُسمى Pandas.

00:00:16.129 --> 00:00:18.734
Pandas التي أنشأها ويست ماكيني

00:00:18.734 --> 00:00:21.704
هي مكتبة مفتوحة المصدر توفر أبنية بيانات

00:00:21.704 --> 00:00:26.084
وأدوات لتحليل البيانات عالية الأداء وسهلة الاستخدام
للغة البرمجة Python.

00:00:26.085 --> 00:00:30.795
استخدام Pandas هو إجراء قياسي وأفضل ممارسة لتحليل
البيانات في Python في الوقت الحاضر.

00:00:30.795 --> 00:00:33.609
في سياق خطوة الجمع في المعالجة الشاملة،

00:00:33.609 --> 00:00:36.975
يمكن لـ Pandas استيراد كل تنسيق للملف يجول ببالكم
إلى حدٍ كبير،

00:00:36.975 --> 00:00:39.329
إلى جانب رابط لقواعد البيانات.

00:00:39.329 --> 00:00:41.074
سأتناول أساسيات Pandas هنا؛

00:00:41.075 --> 00:00:42.450
لكن إذا أردتم معرفة المزيد

00:00:42.450 --> 00:00:45.700
فأنصحكم بمراجعة دورتنا التدريبية حول Pandas إذا لم
تكونوا قد شاهدتموها بعدُ.

00:00:45.700 --> 00:00:47.910
يوجد رابط إلى تلك الدورة التدريبية في الملاحظات أسفل
هذا الفيديو.

00:00:47.909 --> 00:00:52.079
إذًا، ستسمح لنا Pandas بعرض ملف CSV الخاص بالبيانات
والعمل عليه

00:00:52.079 --> 00:00:55.405
بتنسيق بسيط وجدولي يُعرف باسم إطار بيانات panda.

00:00:55.405 --> 00:00:57.396
انظروا إلى إطار البيانات على أنه جدول بيانات،

00:00:57.396 --> 00:01:00.759
لكن أسهل في المعالجة باستخدام الكود وأقوى بشكل
عام؛

00:01:00.759 --> 00:01:03.519
رغم كونه ليس بنفس الجودة في التصفح عبر مجموعات
البيانات.

00:01:03.520 --> 00:01:04.692
لا بأس، إذًا مهمتنا

00:01:04.691 --> 00:01:08.294
هي استيراد ملف CSV إلى إطار بيانات panda.

00:01:08.295 --> 00:01:09.989
في الواقع هذا هو ما أفعله في كل مرة

00:01:09.989 --> 00:01:12.774
لتوضيح كيفية فعل ذلك؛ Google هو صديقكم،

00:01:12.775 --> 00:01:16.785
لذا أبحث فيه عن import CSV Pandas وها هي

00:01:16.784 --> 00:01:20.109
النتيجة الأولى: الدالة read_csv.

00:01:20.109 --> 00:01:23.935
اقرؤوا ملف CSV المفصول بفاصلة داخل إطار البيانات.

00:01:23.935 --> 00:01:25.710
فلننسخ ونلصق وصف الدالة فعليًا

00:01:25.709 --> 00:01:29.729
لإضافة تعليق إلى الكود خاصتنا.

00:01:30.299 --> 00:01:34.539
لا بأس، إذًا الوسيطة والموافقة الأساسية هي المسار

00:01:34.540 --> 00:01:37.935
لملف CSV الذي ترغبون في قراءته داخل دفتر ملاحظات
Jupyter خاصتنا.

00:01:37.935 --> 00:01:39.980
يمكنكم تجاهل البقية في الوقت الحالي.

00:01:39.980 --> 00:01:42.010
إذا مرَّرنا إلى الأسفل

00:01:42.010 --> 00:01:45.960
فسنرى أن الدالة تستعيد إطار بيانات.

00:01:45.959 --> 00:01:48.949
لا بأس، إذًا فلنعُد إلى دفتر ملاحظات Jupyter خاصتنا،
وأولًا

00:01:48.950 --> 00:01:51.745
سيكون علينا في الواقع أن نستورد المكتبة Pandas؛

00:01:51.745 --> 00:01:55.075
وهو ما اعتدنا فعله هكذا.

00:01:55.075 --> 00:01:58.950
استوردوا Pandas بالاسم PD، والذي يُطلق عليه اسمًا
مستعارًا

00:01:58.950 --> 00:02:02.078
في هذه الحالة، وبالتالي لسنا مضطرين إلى كتابة أربع
حروف إضافية

00:02:02.078 --> 00:02:07.049
عن طريق اختصار Pandas إلى PD كمرمِّز للكلمة. هذا
شديد الفاعلية.

00:02:07.049 --> 00:02:10.949
ونعالج تلك الدالة، وسوف نعود إلى الأسفل هنا

00:02:10.949 --> 00:02:18.163
ونكتب pd.read csv، وسنسمِّي نتيجة هذه الدالة

00:02:18.163 --> 00:02:22.699
أن تجزئة البيانات تستعيد DF - وهو اختصار data frame
(إطار بيانات).

00:02:22.699 --> 00:02:24.599
هذا عُرف شائع.

00:02:24.599 --> 00:02:28.039
إذًا كل ما تركناه الآن يملأ معلمة مسار الملف

00:02:28.039 --> 00:02:31.019
- والتي يمكنكم مراجعتها هنا -

00:02:31.020 --> 00:02:36.230
أو يستخدم سمة جديدة لم نتحدث عنها بعدُ تُسمى إتمام
تحويل علامة التبويب.

00:02:36.229 --> 00:02:37.429
إذا نقرتم فوق shift tab هنا

00:02:37.430 --> 00:02:39.215
فسترون توقيع الدالة

00:02:39.215 --> 00:02:42.569
مسار الملف أو وسيطة المخزن التي تحتاجون ملأها.

00:02:42.569 --> 00:02:44.280
لا بأس، إذًا املؤوا هذا الآن.

