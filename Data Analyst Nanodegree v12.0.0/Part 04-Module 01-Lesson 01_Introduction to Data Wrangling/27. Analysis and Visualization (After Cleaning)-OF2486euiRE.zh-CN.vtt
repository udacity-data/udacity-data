WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.685
好的 恭喜你

00:00:01.685 --> 00:00:04.220
你已经成功整理了一个数据集

00:00:04.219 --> 00:00:09.399
你已经完成整个整理过程 从收集到评估

00:00:09.400 --> 00:00:12.475
再到清理数据 即定义

00:00:12.474 --> 00:00:16.195
编码和测试清理操作

00:00:16.195 --> 00:00:18.984
一旦我们对数据状态感到满意

00:00:18.984 --> 00:00:21.359
这也是我们演示的目的

00:00:21.359 --> 00:00:22.765
现在是时候行动了

00:00:22.765 --> 00:00:25.120
也就是分析和可视化

00:00:25.120 --> 00:00:26.815
我们马上要做的事情

00:00:26.815 --> 00:00:30.160
我们希望从这些数据中得到什么见解呢？

00:00:30.160 --> 00:00:31.765
这与工作招聘有关

00:00:31.765 --> 00:00:35.770
所以 可能我们需要知道 希望某个人立刻开始工作的百分比

00:00:35.770 --> 00:00:40.580
即 ASAP

00:00:40.579 --> 00:00:42.939
这是一个很好的分析角度 我们在 Startdate 列中

00:00:42.939 --> 00:00:46.149
有相应的很干净的数据

00:00:46.149 --> 00:00:50.244
因为本课程的重点是数据整理 而不是数据分析

00:00:50.244 --> 00:00:53.814
我即将向大家演示一下如何用代码进行分析

00:00:53.814 --> 00:00:55.780
但视频下方会有一个 Jupyter Notebook

00:00:55.780 --> 00:00:58.320
如果你想的话 就可以自己操作

00:00:58.320 --> 00:01:00.064
我建议你探究一下

00:01:00.064 --> 00:01:02.890
做这样的简单计算时

00:01:02.890 --> 00:01:06.430
我喜欢手动写下分子和分母

00:01:06.430 --> 00:01:08.630
它有助于将问题分离出来

00:01:08.629 --> 00:01:15.084
百分比或分数有分子和分母

00:01:15.084 --> 00:01:16.939
另外 希望某个人立刻开始工作

00:01:16.939 --> 00:01:18.965
的工作招聘百分比

00:01:18.965 --> 00:01:22.210
即 ASAP 我们开始吧

00:01:22.209 --> 00:01:27.059
ASAP Startdate 的数量除以非空 Startdate 的数量

00:01:27.060 --> 00:01:29.019
很好 我们来介绍下代码的工作原理

00:01:29.019 --> 00:01:33.783
我们可以再次使用 value_counts 函数 挑出这个 ASAP 计数

00:01:33.784 --> 00:01:38.719
6,856 我们应该会在这里看到 很好

00:01:38.719 --> 00:01:40.230
这就是我们的分子

00:01:40.230 --> 00:01:42.030
至于非空计数

00:01:42.030 --> 00:01:43.823
我们可以只使用计数函数

00:01:43.822 --> 00:01:48.264
这不包括所有 NaN 条目 9,675

00:01:48.265 --> 00:01:53.560
这个值应该与我们在 info 函数中见到的相同 是的

00:01:53.560 --> 00:01:58.670
StartDate 9,675 非空值对象

00:01:58.670 --> 00:02:03.254
非空值是指非空或非 NaN

00:02:03.254 --> 00:02:07.459
我们现在要做的是用分子 2 除以分母

00:02:07.459 --> 00:02:12.259
好的 约71%的招聘公告都要求立即上岗

00:02:12.259 --> 00:02:15.000
哇 好的 这一比例比我估计的要高一些

00:02:15.000 --> 00:02:17.509
如果我们可以绘制一幅图表 肯定好极了

00:02:17.509 --> 00:02:20.245
因为它可以显示数据中开始工作日期的分布

00:02:20.245 --> 00:02:22.740
这时候就需要可视化了

00:02:22.740 --> 00:02:25.340
我们现在把分析转换成可视化

00:02:25.340 --> 00:02:28.189
我们将创建一幅饼状图 是的

00:02:28.189 --> 00:02:30.609
饼状图有时候很有用

00:02:30.610 --> 00:02:32.790
另外 我将向你们详细解释下代码 因为

00:02:32.789 --> 00:02:35.400
本课程并不讨论数据可视化

00:02:35.400 --> 00:02:37.230
视频下方有 Jupyter notebook 也有机会编码

00:02:37.229 --> 00:02:41.229
如果你想这么做的话

00:02:41.229 --> 00:02:43.780
好的 这就是我们的可视化代码

00:02:43.780 --> 00:02:49.034
我们还是用的 value_counts 函数 我们附上这个 plot 函数

00:02:49.034 --> 00:02:51.115
我们想要一幅饼状图 按 Shift+Enter

00:02:51.115 --> 00:02:53.080
这样就好了 实际上 我撒谎了

00:02:53.080 --> 00:02:55.090
我们需要首先将这点代码放在这里

00:02:55.090 --> 00:02:58.015
以便在 Notebook 里显示曲线

00:02:58.014 --> 00:02:59.619
这就是我们的饼状图

00:02:59.620 --> 00:03:04.090
虽然很不美观 因为有太多的标签

00:03:04.090 --> 00:03:09.330
它们代表值计数输出结果中的每个条目 你可以在这里看到

00:03:09.330 --> 00:03:12.850
太多了 于是 我们导入一个叫 numpy 的库

00:03:12.849 --> 00:03:15.724
简写或别名叫 np

00:03:15.724 --> 00:03:18.009
然后 我们将创建一个自定义标签数组

00:03:18.009 --> 00:03:22.799
这个数组的长度将与 values_counts 输出内容相同

00:03:22.800 --> 00:03:26.715
数组将以空组起始也就是说

00:03:26.715 --> 00:03:30.094
这个带类型对象的空字符串

00:03:30.094 --> 00:03:32.229
这揭示了 numpy 的基本细节

00:03:32.229 --> 00:03:35.424
所以 如果你目前不明白 也不要紧张

00:03:35.425 --> 00:03:37.900
我们首先制作该数组中的第一个标签

00:03:37.900 --> 00:03:41.950
ASAP 因为这里的第一个条目就是 ASAP

00:03:41.949 --> 00:03:43.844
查看这幅图

00:03:43.844 --> 00:03:49.000
这表示许多紧急工作招聘 大约71%

