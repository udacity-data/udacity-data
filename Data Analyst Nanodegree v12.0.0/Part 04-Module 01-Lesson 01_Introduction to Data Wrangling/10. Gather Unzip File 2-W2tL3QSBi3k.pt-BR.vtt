WEBVTT
Kind: captions
Language: pt-BR

00:00:00.800 --> 00:00:02.800
Agora podemos
"deszipar" o arquivo.

00:00:02.833 --> 00:00:05.333
Faremos isso usando a biblioteca
de arquivos zip do Python.

00:00:05.367 --> 00:00:07.600
Usar código para tornar
o trabalho de preparação

00:00:07.633 --> 00:00:09.167
o mais reprodutível possível,

00:00:09.200 --> 00:00:11.133
é o oposto de usar
um programa externo

00:00:11.167 --> 00:00:13.033
ou clicar ou deszipar
um arquivo.

00:00:13.067 --> 00:00:16.333
Importamos a biblioteca
de arquivos .zip nessa célula,

00:00:16.367 --> 00:00:19.733
então processamos essa célula
usando shift e enter.

00:00:19.767 --> 00:00:22.633
Devemos abrir a documentação
da biblioteca zipfile

00:00:22.667 --> 00:00:26.367
para entender como ler
o conteúdo do arquivo .zip.

00:00:26.400 --> 00:00:29.300
Você pode examinar rapidamente,
mas é um pouco denso.

00:00:29.333 --> 00:00:32.000
Eu gosto de usar a ferramenta
de busca do navegador,

00:00:32.033 --> 00:00:35.633
command+F ou control+F, de acordo
com seu sistema operacional.

00:00:35.667 --> 00:00:40.067
Vamos observar para ler. Queremos
ler o conteúdo do arquivo .zip.

00:00:40.100 --> 00:00:44.267
Certo. Classe "zipfile.zipfile"
é a classe para ler e escrever

00:00:44.300 --> 00:00:46.067
em arquivos .zip.

00:00:46.100 --> 00:00:50.800
Então somos direcionados para cá,
Zipfile Objects.

00:00:50.833 --> 00:00:53.867
Se você não é especialista
em Python, não se preocupe.

00:00:53.900 --> 00:00:57.933
Isso só significa que podemos
digitar "zipfile". Zipfile

00:00:57.967 --> 00:01:01.700
com alguns parâmetros,
que juntos se chamam "construtor",

00:01:01.733 --> 00:01:04.567
para criar uma coisa
chamada de objeto,

00:01:04.600 --> 00:01:08.133
que tem habilidades de codagem,
conhecidas como métodos.

00:01:08.167 --> 00:01:11.967
Certo. Se você leu um pouco
até aqui, notou que está escrito

00:01:12.000 --> 00:01:16.133
que o parâmetro de modo devia ser
"R" para ler um arquivo existente.

00:01:16.167 --> 00:01:18.400
É o que queremos fazer.

00:01:18.433 --> 00:01:20.533
Se baixarmos mais a tela,

00:01:20.567 --> 00:01:24.967
veremos que Zipfile administra
contextos e, portanto,

00:01:25.000 --> 00:01:27.667
aceita a declaração "with".

00:01:27.700 --> 00:01:31.667
Administradores de contexto
são bem populares para ler arquivos.

00:01:31.700 --> 00:01:34.133
O ato de abrir um arquivo,
que deve ser feito

00:01:34.167 --> 00:01:37.600
para ler e escrever arquivos,
consume recursos em seu computador.

00:01:37.633 --> 00:01:39.200
E se não fechamos o arquivo,

00:01:39.233 --> 00:01:42.167
podemos nos dar mal com quedas
ou mensagens de erro.

00:01:42.200 --> 00:01:45.033
Administradores de contexto
asseguram que todos os arquivos

00:01:45.067 --> 00:01:48.167
que usamos estejam
devidamente limpos.

00:01:48.200 --> 00:01:52.067
Muito bem. Podemos, de verdade,
apenas copiar e colar esse código

00:01:52.100 --> 00:01:55.100
dentro do Jupyter Notebook,
mas não é bom copiar e colar,

00:01:55.133 --> 00:01:56.733
nem agora nem no futuro.

00:01:56.767 --> 00:01:59.100
Quando for possível,
é melhor digitar o código.

00:01:59.133 --> 00:02:01.467
Isso ajuda no aprendizado.
Mas, por praticidade,

00:02:01.500 --> 00:02:03.467
vou pegar um atalho aqui
e copiar e colar.

00:02:03.500 --> 00:02:06.400
Precisamos de mais uma coisa,
de um "zipfile.zipfile"

00:02:06.433 --> 00:02:08.100
para fazer
esse código funcionar.

00:02:08.133 --> 00:02:10.967
Mas não querermos escrever
para um arquivo .zip,

00:02:11.000 --> 00:02:13.267
com esse "w"
e esse método para escrever.

00:02:13.300 --> 00:02:17.233
Queremos extrair ou ler os arquivos
dentro do nosso arquivo "zipado".

00:02:17.267 --> 00:02:19.500
Uma busca rápida no Google
me levou a esse método

00:02:19.533 --> 00:02:21.867
dentro da documentação
de arquivos .zip:

00:02:21.900 --> 00:02:25.900
Extractall, que não precisa
de parâmetros, como se vê.

00:02:25.933 --> 00:02:29.300
"Nenhum padrão, nenhum padrão,
nenhum padrão."

00:02:29.333 --> 00:02:32.467
Em contraste com o método
de escrever, que vou tirar agora.

00:02:32.500 --> 00:02:34.033
Ok, então vamos mudar o código

00:02:34.067 --> 00:02:38.900
para "myzip.extractall",
sem parâmetros.

00:02:38.933 --> 00:02:44.900
E só nos resta mudar estes
dois parâmetros: arquivo e modo.

00:02:44.933 --> 00:02:47.233
"Arquivo" é o nome
do arquivo .zip

00:02:47.267 --> 00:02:51.333
e "modo" é o que iremos fazer
com o arquivo: ler ou escrever nele.

00:02:51.367 --> 00:02:53.100
O arquivo .zip
que queremos abrir

00:02:53.133 --> 00:02:56.167
deve estar no mesmo diretório
do seu Jupyter Notbook a esta hora.

00:02:56.200 --> 00:02:57.567
Vé em frente
e mude os parâmetros.

