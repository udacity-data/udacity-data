WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.444
既然我们已经下载并解压了 zip 文件

00:00:03.444 --> 00:00:08.824
我们需要打开提取出 CSV 文件 以便我们能看到并使用内部数据

00:00:08.824 --> 00:00:11.649
方法是 使用叫做 Pandas 的 Python 库

00:00:11.650 --> 00:00:16.130
将文件导入一个表格结构 如同 Jupyter Notebook 中的一样

00:00:16.129 --> 00:00:18.734
Pandas 由 West McKinney 创建

00:00:18.734 --> 00:00:21.704
它是一个开源库

00:00:21.704 --> 00:00:26.084
为 Python 编程语言提供易于使用的数据结构和分析工具

00:00:26.085 --> 00:00:30.795
如今 使用 Pandas 是 Python 数据分析的标准和最佳做法

00:00:30.795 --> 00:00:33.609
在整理收集步骤的背景下

00:00:33.609 --> 00:00:36.975
Pandas 可以导入你能想到的任何文件格式

00:00:36.975 --> 00:00:39.329
而且可链接到数据库

00:00:39.329 --> 00:00:41.074
这里我将讲述 Pandas 的基础知识

00:00:41.075 --> 00:00:42.450
如果你想知道更多

00:00:42.450 --> 00:00:45.700
我推荐你了解一下我们的 Pandas 课程

00:00:45.700 --> 00:00:47.910
视频下方注释中有一个链接

00:00:47.909 --> 00:00:52.079
所以 Pandas 以简单的表格格式

00:00:52.079 --> 00:00:55.405
让我们查看并使用 CSV 文件 这种格式称为 Pandas DataFrame

00:00:55.405 --> 00:00:57.396
DataFrame 就像电子表格一样

00:00:57.396 --> 00:01:00.759
但使用代码更容易操控 功能整体上更强大

00:01:00.759 --> 00:01:03.519
但浏览数据集却没那么方便

00:01:03.520 --> 00:01:04.692
好的 所以我们的任务是

00:01:04.691 --> 00:01:08.294
将一个 CSV 文件导入 Pandas 的DataFrame

00:01:08.295 --> 00:01:09.989
这就是每次以找到操作方法所做的事情

00:01:09.989 --> 00:01:12.774
Google 可以帮忙

00:01:12.775 --> 00:01:16.785
搜索 “导入 CSV pandas”

00:01:16.784 --> 00:01:20.109
第一个结果出来了 read_csv 函数

00:01:20.109 --> 00:01:23.935
将CSV (逗号分隔文件) 读入 DataFrame

00:01:23.935 --> 00:01:25.710
我们来复制和粘贴这个函数的描述文字

00:01:25.709 --> 00:01:29.729
并给我们的代码添加一个备注

00:01:30.299 --> 00:01:34.539
好的 主要结果是我们想将此 CSV 文件读入

00:01:34.540 --> 00:01:37.935
Jupyter Notebook 的CSV 文件的路径

00:01:37.935 --> 00:01:39.980
你可以暂时忽略其余内容

00:01:39.980 --> 00:01:42.010
如果我们滚动到页面底部

00:01:42.010 --> 00:01:45.960
我们将看到该函数返回一个 DataFrame

00:01:45.959 --> 00:01:48.949
好的 我们回到 Jupyter Notebook

00:01:48.950 --> 00:01:51.745
首先 我们必须导入 Pandas 库

00:01:51.745 --> 00:01:55.075
我们一向这么做

00:01:55.075 --> 00:01:58.950
导入 Pandas 为pd pd为它的别名

00:01:58.950 --> 00:02:02.078
在此种情形下 我们不必打出四个额外的字母

00:02:02.078 --> 00:02:07.049
将 Pandas 缩减为 pd 非常高效

00:02:07.049 --> 00:02:10.949
我们处理那个单元格 然后回到下面

00:02:10.949 --> 00:02:18.163
键入 pd.read_csv 并对此函数结果进行命名

00:02:18.163 --> 00:02:22.699
数据片段返回 df 即 DataFrame

00:02:22.699 --> 00:02:24.599
这是一个常见的惯例

00:02:24.599 --> 00:02:28.039
所以 现在要做的工作是填写文件路径参数

00:02:28.039 --> 00:02:31.019
你可以在这里查看

00:02:31.020 --> 00:02:36.230
或使用一个尚未讨论过的新功能 即 “shift tab completion”

00:02:36.229 --> 00:02:37.429
如果你点击 shift tab

00:02:37.430 --> 00:02:39.215
你将看到函数的署名

00:02:39.215 --> 00:02:42.569
看到我们需要填入的文件路径或缓存参数

00:02:42.569 --> 00:02:44.280
好的 现在就填入

