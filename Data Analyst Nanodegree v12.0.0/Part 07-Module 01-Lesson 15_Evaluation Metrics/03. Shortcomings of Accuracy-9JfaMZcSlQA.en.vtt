WEBVTT
Kind: captions
Language: en

00:00:00.530 --> 00:00:02.360
So here's a quiz for you.

00:00:02.360 --> 00:00:07.170
Although accuracy is a perfectly fine metric and a good place to start,

00:00:07.170 --> 00:00:10.580
it does have some shortcomings, so let's think about what those might be

00:00:10.580 --> 00:00:14.665
in the case where we want to identify persons of interest in the Enron data set.

00:00:15.800 --> 00:00:17.830
So here are a few possible shortcomings.

00:00:17.830 --> 00:00:20.980
And you check all of the ones that sound like they could be problems in

00:00:20.980 --> 00:00:22.050
our case.

00:00:22.050 --> 00:00:25.490
The first possible problem is that maybe accuracy is not ideal for

00:00:25.490 --> 00:00:27.300
skewed classes.

00:00:27.300 --> 00:00:31.220
So skewed class would be an example of where you have many data points and

00:00:31.220 --> 00:00:35.140
a few of them fall into one class and many of them fall into the other class.

00:00:35.140 --> 00:00:37.960
This is what's going on with the Enron data set because, although there were

00:00:37.960 --> 00:00:41.330
thousands of people who worked at Enron, there were only a few dozen who ended

00:00:41.330 --> 00:00:46.190
up really being pursued by the law for their involvement in, in the fraud.

00:00:46.190 --> 00:00:50.340
So accuracy might not be an ideal metric in that particular case where you

00:00:50.340 --> 00:00:53.380
have very few examples of, of one of the classes.

00:00:53.380 --> 00:00:56.680
Another possibility is that maybe, depending on exactly what you mean by

00:00:56.680 --> 00:00:59.680
identifying a person of interest, you might want to err on

00:00:59.680 --> 00:01:03.710
the side of guessing that someone is innocent when you're in doubt.

00:01:03.710 --> 00:01:09.000
That if, for example, as a result of this, that maybe you're you're machine

00:01:09.000 --> 00:01:12.680
learning algorithm is identifying people who should be thrown in jail.

00:01:12.680 --> 00:01:15.370
In that case, I would say you want to be really sure that someone is involved in

00:01:15.370 --> 00:01:19.690
the fraud before you risk putting them in jail for a long time.

00:01:19.690 --> 00:01:21.080
And that if you have any doubt at all,

00:01:21.080 --> 00:01:24.405
you should err on the side of assuming that they're innocent.

00:01:24.405 --> 00:01:28.100
That accuracy perhaps might not be particularly tailored to

00:01:28.100 --> 00:01:30.050
that outcome that you want.

00:01:30.050 --> 00:01:33.110
And a third possibility might be that accuracy isn't well tailored to

00:01:33.110 --> 00:01:35.310
the outcome that you want but in the other direction.

00:01:35.310 --> 00:01:39.250
Let's suppose that you want kind of a broad net being cast.

00:01:40.340 --> 00:01:43.170
That all the people who are identified as persons of interest just means that

00:01:43.170 --> 00:01:46.300
they're going to get a little bit of a higher level of scrutiny.

00:01:46.300 --> 00:01:48.960
And that there might be still lots of investigation going on.

00:01:48.960 --> 00:01:52.620
And so in that case, what you would want to do is make sure that you get

00:01:52.620 --> 00:01:57.660
as many people who were actually involved in the fraud as possible identified.

00:01:57.660 --> 00:02:00.430
Even if it comes to the cost of identifying some people who were

00:02:00.430 --> 00:02:01.402
probably innocent.

00:02:01.402 --> 00:02:06.080
Because those innocent people will then be investigated and cleared in later

00:02:06.080 --> 00:02:10.680
rounds of the investigation, and that accuracy might not be the right metric if

00:02:10.680 --> 00:02:15.380
that's the goal that you're going for in trying to identify persons of interest.

00:02:15.380 --> 00:02:20.000
So check any of these boxes that you think could be a little bit of a problem if

00:02:20.000 --> 00:02:23.140
all you're doing is trying to maximize the accuracy of your classifier.

