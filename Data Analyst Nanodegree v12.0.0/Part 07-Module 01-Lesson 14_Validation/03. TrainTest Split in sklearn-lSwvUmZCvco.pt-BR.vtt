WEBVTT
Kind: captions
Language: pt-BR

00:00:00.500 --> 00:00:03.460
Até agora, falamos muito sobre dividir seus dados entre treinamento e

00:00:03.460 --> 00:00:05.660
conjuntos de testes nesta aula.

00:00:05.660 --> 00:00:08.370
O que desejo fazer agora é mostrar como você pode realmente fazer

00:00:08.370 --> 00:00:10.850
isso de maneira muito simples usando as mesmas ferramentas no sklearn.

00:00:10.850 --> 00:00:13.610
É claro que você não precisa do sklearn para fazer isso.

00:00:13.610 --> 00:00:16.690
Você precisa apenas poder dividir seus dados, mas o sklearn tem algumas

00:00:16.690 --> 00:00:20.920
funções que transformam isso realmente em um problema do tipo de uma ou duas linhas de código.

00:00:20.920 --> 00:00:24.190
Se você quiser fazer um treinamento para testar a divisão no sklearn, procure

00:00:24.190 --> 00:00:28.730
um grupo de funções que estão sob o título geral de validação cruzada.

00:00:28.730 --> 00:00:31.550
Nesta página da documentação, eles têm um pouco de aquecimento,

00:00:31.550 --> 00:00:34.730
a ideia da validação cruzada, porque você deve fazer isso.

00:00:34.730 --> 00:00:36.810
Mas essas são coisas com as quais você já está familiarizado porque

00:00:36.810 --> 00:00:39.070
falamos muito sobre elas nesta aula.

00:00:39.070 --> 00:00:42.150
O que desejo fazer agora é pular para este código de exemplo bem aqui e

00:00:42.150 --> 00:00:44.440
mostrar como isso pode ser realmente implantado no código.

00:00:44.440 --> 00:00:47.290
A saída disso será quatro conjuntos de dados.

00:00:47.290 --> 00:00:50.630
Os dois primeiros serão os recursos para os dados de treinamento e

00:00:50.630 --> 00:00:51.800
de testes.

00:00:51.800 --> 00:00:55.320
Os dois segundos serão os rótulos para os dados de treinamento e de testes.

00:00:55.320 --> 00:00:59.600
Portanto, neste exemplo há duas linhas que investigam quantos eventos caem em

00:00:59.600 --> 00:01:02.880
cada um deste dois conjuntos de dados, o treinamento e os testes.

00:01:02.880 --> 00:01:05.860
E aqui em baixo, você pode ver que há realmente um SVM que agora está

00:01:05.860 --> 00:01:07.805
sendo treinado nos dados de treinamento,

00:01:07.805 --> 00:01:12.510
os recursos e os rótulos ou, como eles chamam isso, X_train e Y_train.

00:01:12.510 --> 00:01:15.450
E então podemos fazer uma avaliação do conjunto de testes.

00:01:15.450 --> 00:01:17.830
Isto está olhando para algo chamado a posição do classificador.

00:01:17.830 --> 00:01:20.190
Isto está de forma relacionado à precisão.

00:01:20.190 --> 00:01:23.860
Portanto, isso é algo que você quer avaliar em seus dados de teste.

00:01:23.860 --> 00:01:27.310
Agora, uma das coisas que talvez você tenha observado em alguns dos miniprojetos,

00:01:27.310 --> 00:01:29.460
se estava prestando bastante atenção,

00:01:29.460 --> 00:01:32.340
é que nós realmente estávamos implantado este código durante todo o tempo.

00:01:32.340 --> 00:01:36.660
Portanto, em todos os, por exemplo, exercícios de treinamento de classificador que você

00:01:36.660 --> 00:01:39.970
fez, havia uma linha de código que era muito semelhante a esta,

00:01:39.970 --> 00:01:43.760
onde eu estava dividindo os dados em uma divisão de treinamento e testes para você.

00:01:43.760 --> 00:01:48.270
Portanto, o que vou pedir a você agora é, na forma de um teste de programação,

00:01:48.270 --> 00:01:52.150
vou pedir a você para implantar realmente uma linha de código como esta por conta própria para

00:01:52.150 --> 00:01:53.980
que você pratique fazer isso.

00:01:53.980 --> 00:01:56.850
Fornecerei a você um conjunto de dados que está sendo lido com todos os recursos e

00:01:56.850 --> 00:01:58.190
todos os rótulos.

00:01:58.190 --> 00:02:00.940
E o que eu quero que você faça é inserir uma linha de código aqui que o divida

00:02:00.940 --> 00:02:03.170
nos conjuntos de treinamento e de testes.

00:02:03.170 --> 00:02:04.280
Em seguida, usarei esses conjuntos de

00:02:04.280 --> 00:02:09.210
treinamento e de testes e farei previsões usando um classificador.

00:02:09.210 --> 00:02:12.540
Portanto, sua tarefa é só praticas a implantação de uma linha de código como esta.

00:02:12.540 --> 00:02:15.290
A divisão de treinamento e testes no sklearn.

00:02:15.290 --> 00:02:17.450
De forma que este código irá ser executado corretamente.

00:02:17.450 --> 00:02:18.120
Portanto, faça uma tentativa.

