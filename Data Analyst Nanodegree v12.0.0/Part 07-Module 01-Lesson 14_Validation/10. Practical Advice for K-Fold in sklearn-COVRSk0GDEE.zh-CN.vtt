WEBVTT
Kind: captions
Language: zh-CN

00:00:00.430 --> 00:00:03.280
我有两个折 因此我应该有

00:00:03.280 --> 00:00:05.090
两组训练时间、预测时间和精确度

00:00:05.090 --> 00:00:08.010
进行训练和预测只用了几秒钟时间

00:00:08.010 --> 00:00:13.150
但精确度则问题很严重

00:00:13.150 --> 00:00:15.410
第一折不到 1% 第二折只有 15%

00:00:15.410 --> 00:00:18.130
那么这里到底发生了什么？

00:00:18.130 --> 00:00:21.590
为帮助弄清楚原因 我将在此处添加几个打印语句

00:00:21.590 --> 00:00:24.010
我要做的第一件事就是

00:00:24.010 --> 00:00:28.840
查看训练数据集中的所有事件的指数是否

00:00:28.840 --> 00:00:32.512
存在着这种情况

00:00:32.512 --> 00:00:33.968
即所有某一特定的事件类型最后都属于训练数据集

00:00:33.968 --> 00:00:37.653
而所有另一特定的事件类型最后都属于测试数据集？

00:00:37.653 --> 00:00:41.271
因为如果存在着这种情况 我不会认为

00:00:41.271 --> 00:00:45.810
针对一种类型事件的训练会帮助我成功地对另一种类型的事件进行分类

00:00:45.810 --> 00:00:48.350
另一件我要做的事情是

00:00:48.350 --> 00:00:52.030
打印出训练数据集中所有事件的标签

00:00:52.030 --> 00:00:54.310
这样会重复某些相似的信息

00:00:54.310 --> 00:00:56.410
但现在我就可以直接查看标签了

00:00:56.410 --> 00:00:59.490
最后 我要打印出测试数据集里的作者

00:00:59.490 --> 00:01:02.290
来查看训练数据集和测试数据集中的事件

00:01:02.290 --> 00:01:04.510
是否有某些重要的区别

00:01:06.040 --> 00:01:11.010
这样我们会获得大量输出 因为我有数千个事件

00:01:11.010 --> 00:01:12.780
我要返回到第一行

00:01:12.780 --> 00:01:15.940
该行显示我的训练数据集中

00:01:15.940 --> 00:01:17.720
所有数据的指数

00:01:17.720 --> 00:01:21.380
而且我发现它的作用仅仅是按顺序计数

00:01:21.380 --> 00:01:26.385
也就是说 从 8,789 到数据集末尾的 17,577

00:01:26.385 --> 00:01:31.330
都将进入训练数据集

00:01:31.330 --> 00:01:34.658
从 1 到 8,789 的另一半则会

00:01:34.658 --> 00:01:38.290
全部进入测试数据集

00:01:38.290 --> 00:01:40.830
换句话说 我根本没有把事件顺序打乱

00:01:40.830 --> 00:01:42.720
我没有做任何随机化

00:01:42.720 --> 00:01:46.750
我只是将我的数据集从中间分成两部分

00:01:46.750 --> 00:01:51.860
刚巧我的数据集中有一种模式会把结果搞乱

00:01:51.860 --> 00:01:56.724
这种模式是

00:01:56.724 --> 00:01:57.796
Sarah 发给我的所有电子邮件都在数据集的第一部分

00:01:57.796 --> 00:02:01.140
而 Chris 发给我的所有电子邮件都在数据集的第二部分

00:02:01.140 --> 00:02:03.855
当我查看测试和训练数据集上显示的标签时

00:02:03.855 --> 00:02:06.310
立即就发现了这一情况

00:02:06.310 --> 00:02:08.900
所有这些都是

00:02:08.900 --> 00:02:10.830
训练数据集中项目的标签

00:02:10.830 --> 00:02:13.523
你会发现 训练数据集中的所有内容都属于类别 1

00:02:13.523 --> 00:02:14.626
然后我开始创建第二个列表

00:02:14.626 --> 00:02:18.121
这是测试数据集中所有项目的标签

00:02:18.121 --> 00:02:21.327
我发现测试数据集中的所有内容标签都是 0

00:02:21.327 --> 00:02:24.460
然后可能在最后有若干个 1

00:02:24.460 --> 00:02:27.740
实际情况就是 我通过一个人发来的电子邮件进行各项训练

00:02:27.740 --> 00:02:30.620
然后利用这些信息对第二个人发来的电子邮件进行分类

00:02:30.620 --> 00:02:34.692
这就好像训练机器学习算法开车

00:02:34.692 --> 00:02:36.986
然后要求它做早饭

00:02:36.986 --> 00:02:38.148
这样是不行的

00:02:38.148 --> 00:02:40.868
我觉得这是

00:02:40.868 --> 00:02:44.120
sklearn KFold 算法的工作原理

00:02:44.120 --> 00:02:48.550
只是将数据划分为大小相同的两部分

00:02:49.740 --> 00:02:52.580
不会对事件进行任何类型的乱排序

00:02:52.580 --> 00:02:56.460
如果你的数据里的表现方式上 尤其是类别上 存在某些模式

00:02:56.460 --> 00:03:00.050
然后这些模式会反映在大量特定的标签中

00:03:00.050 --> 00:03:05.120
最终会体现在验证的特定折上

00:03:05.120 --> 00:03:06.400
这可能不是你想看到的

