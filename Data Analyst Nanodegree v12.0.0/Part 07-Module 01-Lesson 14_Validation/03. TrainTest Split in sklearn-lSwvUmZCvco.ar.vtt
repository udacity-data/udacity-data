WEBVTT
Kind: captions
Language: ar

00:00:00.500 --> 00:00:03.460
لقد تحدثنا عن تقسيم البيانات بين مجموعات التدريب

00:00:03.460 --> 00:00:05.660
.والاختبار في هذا الدرس حتى الآن

00:00:05.660 --> 00:00:08.370
ما أريد القيام به هو أن أوضح لك كيف يمكنك القيام

00:00:08.370 --> 00:00:10.850
.بذلك بالفعل بسهولة بالغة باستخدام بعض الأدوات في sklearn

00:00:10.850 --> 00:00:13.610
.وبالطبع، لا تحتاج إلى sklearn للقيام بذلك

00:00:13.610 --> 00:00:16.690
لا تحتاج إلا إلى أن تتمكن من تقسيم البيانات، لكن تتضمن sklearn

00:00:16.690 --> 00:00:20.920
.بعض الدوال التي تحول ذلك بالفعل إلى سطر أو سطرين لمشكلة نوع التعليمة البرمجية

00:00:20.920 --> 00:00:24.190
إذا أردنا إجراء تقسيم اختبار تدريب في sklearn، فنحن بحاجة إلى البحث عن

00:00:24.190 --> 00:00:28.730
.مجموعة من الدوال التي توجد ضمن العنوان العام للتحقق المقطعي

00:00:28.730 --> 00:00:31.550
في صفحة الوثائق هذه، تتضمن قدرًا قليلاً من التمرينات

00:00:31.550 --> 00:00:34.730
.وفكرة التحقق المقطعي والسبب في احتمال قيامك بذلك

00:00:34.730 --> 00:00:36.810
لكن هذه أشياء مألوفة بالنسبة لك نظرًا لأننا

00:00:36.810 --> 00:00:39.070
.تحدثنا عنها كثيرًا في هذا الدرس

00:00:39.070 --> 00:00:42.150
ما أريد القيام به هو الانتقال إلى مثال التعليمة البرمجية هذا هنا

00:00:42.150 --> 00:00:44.440
.وأن أوضح لك كيف يمكن توزيع ذلك بالفعل في التعليمة البرمجية

00:00:44.440 --> 00:00:47.290
.وستكون نتيجة ذلك هي أربع مجموعات بيانات

00:00:47.290 --> 00:00:50.630
أول مجموعتين ستكونان هما ميزات التدريب

00:00:50.630 --> 00:00:51.800
.وبيانات الاختبار

00:00:51.800 --> 00:00:55.320
.وثاني مجموعتين ستكونان هما تسميات التدريب وبيانات الاختبار

00:00:55.320 --> 00:00:59.600
لذا في هذا المثال يوجد سطران يتحققان من كيفية وجود العديد من الأحداث ضمن

00:00:59.600 --> 00:01:02.880
.كل مجموعة من مجموعتي البيانات هاتين، التدريب والاختبار

00:01:02.880 --> 00:01:05.860
وهنا يمكنك رؤية أنه يوجد بالفعل جهاز متجه الدعم الذي يتم

00:01:05.860 --> 00:01:07.805
تدريبه على بيانات التدريب

00:01:07.805 --> 00:01:12.510
.أو الميزات الموجودة في التسميات أو كما يطلقون عليها X_train وY_train

00:01:12.510 --> 00:01:15.450
.وعندئذٍ يمكننا إجراء تقييم استنادًا إلى مجموعة الاختبار

00:01:15.450 --> 00:01:17.830
.لذا فإن ذلك يتطلع إلى شيء يسمى نتيجة المصنف

00:01:17.830 --> 00:01:20.190
.هذا نوع يتعلق بالدقة

00:01:20.190 --> 00:01:23.860
.لذا فهذا شيء تريد تقييمه استنادًا إلى بيانات الاختبار

00:01:23.860 --> 00:01:27.310
،والآن أحد الأشياء التي ربما لاحظتها على بعض المشاريع الصغيرة

00:01:27.310 --> 00:01:29.460
،إذا كنت تعير انتباهًا بالغًا

00:01:29.460 --> 00:01:32.340
.وهو أننا كنا نقوم بتوزيع هذه التعليمة البرمجية دومًا بالفعل

00:01:32.340 --> 00:01:36.660
لذا ففي جميع تمارين تدريب المصنف، على سبيل المثال، التي قمت

00:01:36.660 --> 00:01:39.970
،بها، كان هناك سطر تعليمة برمجية مماثل لهذا السطر إلى حدٍ كبير

00:01:39.970 --> 00:01:43.760
.حيث كنت أقسّم البيانات إلى قسم تدريب واختبار لك

00:01:43.760 --> 00:01:48.270
،والآن ما سأطلب منك القيام به هو، في شكل اختبار برمجي

00:01:48.270 --> 00:01:52.150
هو توزيع سطر تعليمة برمجية مثل هذا السطر بالفعل بنفسك بحيث

00:01:52.150 --> 00:01:53.980
.تكون لديك خبرة عملية في إجراء ذلك

00:01:53.980 --> 00:01:56.850
سأقدم لك مجموعة بيانات يتم تخزينها مع جميع الميزات

00:01:56.850 --> 00:01:58.190
.وجميع التسميات

00:01:58.190 --> 00:02:00.940
وما أريد منك القيام به هو إدراج سطر من التعليمة البرمجية هنا من شأنه تقسيمها

00:02:00.940 --> 00:02:03.170
.إلى مجموعات تدريب واختبار

00:02:03.170 --> 00:02:04.280
ثم سآخذ مجموعات التدريب

00:02:04.280 --> 00:02:09.210
.والاختبار هذه ثم أقوم بالتدريب وإجراء التوقعات باستخدام المصنف

00:02:09.210 --> 00:02:12.540
.لذا ستكمن مهمتك في إجراء توزيع سطر تعليمة برمجية مثل هذا السطر وحسب

00:02:12.540 --> 00:02:15.290
.تقسيم اختبار التدريب في sklearn

00:02:15.290 --> 00:02:17.450
.لذا سيتم تنفيذ هذه التعليمة البرمجية على النحو الصحيح

00:02:17.450 --> 00:02:18.120
.إذًا، دعنا نجرّب ذلك

