WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.459
为了更高效地分析数据

00:00:02.459 --> 00:00:06.540
我们来把红葡萄酒和白葡萄酒的数据集合并成一个 DataFrame

00:00:06.540 --> 00:00:09.839
在进行这一步操作之前 我们需要添加一个新特征 也就是新列

00:00:09.839 --> 00:00:14.160
给每个 DataFrame 说明葡萄酒是红的还是白的

00:00:14.160 --> 00:00:16.289
这么做我们就将两个样本的颜色特征保留下来

00:00:16.289 --> 00:00:19.309
不会因为合并 DataFrame 就丢失

00:00:19.309 --> 00:00:22.125
方法之一是用 NumPy 创建一个数组

00:00:22.125 --> 00:00:25.850
把数组作为新列分别添加到两个 DataFrame 中

00:00:25.850 --> 00:00:28.922
我们来讲讲 NumPy 和相关操作

00:00:28.922 --> 00:00:35.270
NumPy 是 Numerical Python 的简称 用于进行高效的科学计算

00:00:35.270 --> 00:00:37.650
其底层代码是 C 编程语言

00:00:37.649 --> 00:00:40.350
该语言为更接近计算机语言的级别

00:00:40.350 --> 00:00:42.570
想知道这对提高代码速度有何意义

00:00:42.570 --> 00:00:44.320
可以看讲师注释里的链接

00:00:44.320 --> 00:00:47.831
Pandas 的底层使用了 NumPy

00:00:47.831 --> 00:00:52.710
才能这么快地进行函数计算 如 describe 函数

00:00:52.710 --> 00:00:57.780
如果你想在纯 Python 环境下进行这些计算 那会慢很多

00:00:57.780 --> 00:01:02.890
来看这个例子 计算 1 亿个值的数组的平均值

00:01:02.890 --> 00:01:07.790
这会产生一个数组 由 1 亿个在 0 和 1 之间的浮点型随机数组成

00:01:07.790 --> 00:01:11.090
我们也可以输入 1e8 来实现这一点

00:01:11.090 --> 00:01:14.760
看起来这样给出的是浮点型数据 而函数需要传入的是整数型参数

00:01:14.760 --> 00:01:18.035
让我们来看看标准 Python 要花多长时间来计算这个数组的平均数

00:01:18.034 --> 00:01:24.129
所以是 9 秒多一点

00:01:24.129 --> 00:01:25.899
现在来看看 NumPy 需要多久

00:01:25.900 --> 00:01:30.165
几乎是立刻

00:01:30.165 --> 00:01:32.609
酷不酷？试想一下 如果计算量大了许多

00:01:32.609 --> 00:01:35.579
这能提高多少运算速度啊

00:01:35.579 --> 00:01:37.590
比如 假设我们在创建一个全新的特征

00:01:37.590 --> 00:01:40.320
也就是一个新列

00:01:40.319 --> 00:01:42.059
需要计算两列每行的值的乘积

00:01:42.060 --> 00:01:46.025
再除以另一列每行的值

00:01:46.025 --> 00:01:48.525
不像 NumPy

00:01:48.525 --> 00:01:53.359
纯 Python 环境需要一个特别长的循环来囊括所有行 才能计算出每行的新值

00:01:53.359 --> 00:01:55.769
而我们在 NumPy 中会用到的主要对象

00:01:55.769 --> 00:01:59.599
是一个多维数组 其中所有值都有相同的数据类型

00:01:59.599 --> 00:02:01.989
这些数组加上许多实用的 NumPy 函数

00:02:01.989 --> 00:02:06.054
能够优化并简化数据操作

00:02:06.055 --> 00:02:08.310
稍后你会学到更多有关 NumPy 数组的知识

00:02:08.310 --> 00:02:09.735
在下一部分中

00:02:09.735 --> 00:02:11.520
你将使用 NumPy 来创建一个数组

00:02:11.520 --> 00:02:14.040
为红葡萄酒和白葡萄酒的 DataFrame 各添加一个 color 列

