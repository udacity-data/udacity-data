WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.125
虽然从这个可视化可以看出

00:00:02.125 --> 00:00:05.679
白葡萄酒样本的平均质量评分更高一点

00:00:05.679 --> 00:00:09.870
但如果我们能够加入更多具体细节 那就更好了

00:00:09.869 --> 00:00:11.594
我们来创建一个更具体的柱形图

00:00:11.595 --> 00:00:14.280
分别统计不同颜色的质量评分

00:00:14.279 --> 00:00:18.649
我们可以用 groupby 函数对质量和颜色进行分组 进而实现这一点

00:00:19.839 --> 00:00:23.009
由于这些是计数 (count)

00:00:23.010 --> 00:00:25.600
所以所有列的值都是一样的

00:00:25.600 --> 00:00:29.340
我们随机选一个就好

00:00:30.489 --> 00:00:35.820
差不多了 但这个图表还有几点可以优化

00:00:35.820 --> 00:00:38.939
首先白葡萄酒样本明显要比红的样本多

00:00:38.939 --> 00:00:41.414
所以要根据计数结果公平地进行比较的话 并不容易

00:00:41.414 --> 00:00:42.615
为了平衡这一点

00:00:42.615 --> 00:00:48.135
我们把每种颜色的每项计数除以总计数 也就是用比例来表示

00:00:48.134 --> 00:00:50.924
现在看起来好多了

00:00:50.924 --> 00:00:53.684
我们可以看到质量评分低的 也就是三、四、五组

00:00:53.685 --> 00:00:55.775
红葡萄酒样本占的比例较大

00:00:55.774 --> 00:00:57.579
而质量评分高的组 即六、七、八、九组

00:00:57.579 --> 00:01:00.829
白葡萄酒样本比例更高

00:01:00.829 --> 00:01:02.314
现在数据看起来很棒了

00:01:02.314 --> 00:01:05.054
但 x 轴的刻度值看起来一团乱

00:01:05.055 --> 00:01:09.425
如果能让每种质量评分的红白柱形相邻 那就更好了

00:01:09.424 --> 00:01:13.159
另外 质量评分为 9 的红色样本处有空缺

00:01:13.159 --> 00:01:14.685
虽然那里的样本数为 0

00:01:14.685 --> 00:01:16.674
但这也得体现出来

00:01:16.674 --> 00:01:19.448
看起来还有很多个性化调整需要实施

00:01:19.448 --> 00:01:22.939
所以直接在 Matplotlib 里创建图形会比用 Pandas 更好

00:01:22.939 --> 00:01:26.000
因此 在往下讲之前 我们先来进一步了解 Matplotlib

