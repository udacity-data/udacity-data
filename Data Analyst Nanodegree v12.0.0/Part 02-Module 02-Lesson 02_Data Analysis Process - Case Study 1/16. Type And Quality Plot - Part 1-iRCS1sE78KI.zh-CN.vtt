WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.100
我们已经得出了一些结论

00:00:02.100 --> 00:00:05.280
现在可以来创建可视化界面 展示我们的发现了

00:00:05.280 --> 00:00:09.455
即葡萄酒质量与不同葡萄酒性质之间的关系

00:00:09.455 --> 00:00:13.435
我已经导入了 Pandas 并加载了我们处理好的葡萄酒质量数据

00:00:13.435 --> 00:00:19.070
使用 % matplotlib inline 语句 在 Notebook 里查看图形

00:00:19.070 --> 00:00:23.100
我们来创建可视化界面 这能帮我们理解葡萄酒的类型

00:00:23.100 --> 00:00:26.190
也就是红葡萄酒还是白葡萄酒 是否与质量高低有关

00:00:26.190 --> 00:00:27.595
上一节中

00:00:27.594 --> 00:00:31.094
我们使用 groupby 语句找出了每种颜色的葡萄酒质量平均值

00:00:31.094 --> 00:00:34.494
现在我们要用这个结果来创建可视化界面

00:00:34.494 --> 00:00:38.969
要实现该操作 我们需要在 groupby 语句后面加上 plot

00:00:38.969 --> 00:00:41.449
也可以用参数说明柱形图的标题、

00:00:41.450 --> 00:00:46.060
颜色和透明度

00:00:46.289 --> 00:00:53.159
我们重起一行写明颜色参数吧 这样看起来更清楚些

00:00:53.780 --> 00:01:00.335
如果你绘制的图形有多种颜色 你又需要多次绘图 这么做能让代码更简洁明了

00:01:00.335 --> 00:01:02.870
最后一个可视化操作

00:01:02.869 --> 00:01:06.109
我们得给 x 和 y 轴创建合适的标签

00:01:06.109 --> 00:01:09.584
我们不想让白色的柱形和白色的背景融合起来

00:01:09.584 --> 00:01:13.254
但只用 pandas 是无计可施的

00:01:13.254 --> 00:01:18.699
让我们导入 matplotlib pyplot 是 matplotlib 的一个模块 可用于绘制图表

00:01:18.700 --> 00:01:23.045
标准做法是把它导入进来 并赋予别名 plt

00:01:23.045 --> 00:01:25.280
再导入 seaborn

00:01:25.280 --> 00:01:28.635
seaborn 的标准别名为 sns

00:01:28.635 --> 00:01:30.550
哪怕我们不直接使用 seaborn

00:01:30.549 --> 00:01:33.129
它也能够为我们的图表增加额外的样式

00:01:33.129 --> 00:01:36.399
比起标准 matplotlib seaborn 能让图形更赏心悦目

00:01:36.400 --> 00:01:39.995
更多有关 seaborn 的信息请查看下方

00:01:39.995 --> 00:01:45.750
现在我们有了 matplotlib 我们可以像这样设定 x 和 y 轴的标签了

00:01:47.900 --> 00:01:53.520
现在我们的图形更好看了 白色的部分也不会融合到背景中了

00:01:53.519 --> 00:01:58.269
这么做虽然奏效 但第一行代码特别长 很难读

00:01:58.269 --> 00:02:01.567
所以我们要把 groupby 语句分配给一个新对象

00:02:01.567 --> 00:02:03.393
这样既不会改变可视化界面本身

00:02:03.393 --> 00:02:05.000
又能让我们更方便地工作

