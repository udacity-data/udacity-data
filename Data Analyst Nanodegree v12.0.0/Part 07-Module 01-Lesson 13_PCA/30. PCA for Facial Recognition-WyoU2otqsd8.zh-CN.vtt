WEBVTT
Kind: captions
Language: zh-CN

00:00:00.170 --> 00:00:03.150
我认为前两个答案都比较准确

00:00:03.150 --> 00:00:05.520
人们的头像必然有很多像素

00:00:05.520 --> 00:00:08.645
就一百万像素的相机而言 如果是在原始的输入空间

00:00:08.645 --> 00:00:10.780
那就有一百万个输入特征

00:00:10.780 --> 00:00:14.395
所以 在这种情况下 缩减非常重要

00:00:14.395 --> 00:00:18.340
因为 SVM 很难处理一百万个特征

00:00:18.340 --> 00:00:21.330
第二个答案也是对的

00:00:21.330 --> 00:00:24.700
头像中有一些潜在模式很适合用 PCA 来分析

00:00:24.700 --> 00:00:28.540
我们已知这里存在潜在变量

00:00:28.540 --> 00:00:30.900
以一百万像素的图片举例

00:00:30.900 --> 00:00:34.770
在两张头像中 并不是一百万个点都存在差异

00:00:34.770 --> 00:00:38.190
而是只有几个主要的差异点

00:00:38.190 --> 00:00:43.860
我们或许可以用 PCA 挑选出这些点并发挥它们的最大作用

00:00:43.860 --> 00:00:47.190
第三项 也就是利用机器学习进行面部识别是很简单的

00:00:47.190 --> 00:00:49.010
这一项是错误的

00:00:49.010 --> 00:00:52.181
比如 很难用决策树来实现

00:00:52.181 --> 00:00:53.220
面部识别

00:00:53.220 --> 00:00:57.322
在接下来的代码示例中 你会看到

00:00:57.322 --> 00:01:00.230
PCA 和 SVM 在同时使用时是非常强大的

00:01:00.230 --> 00:01:03.070
总体来说 虽然这是人类可以轻易做到的

00:01:03.070 --> 00:01:07.060
识别他人是我们大脑的一大长项

00:01:07.060 --> 00:01:09.110
这是我们的进化优势

00:01:09.110 --> 00:01:12.920
但电脑本身不具备这种能力

00:01:12.920 --> 00:01:15.050
所以说

00:01:15.050 --> 00:01:18.590
虽然目前这个问题已经得到了很好的解决

00:01:18.590 --> 00:01:21.340
但用机器学习进行面部识别可能比你想象中的要困难

