WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:02.990
So if this red line is our principle component,

00:00:02.990 --> 00:00:06.390
then the information loss is going to be something like the sum of all

00:00:06.390 --> 00:00:08.480
these distances that I'm drawing in here.

00:00:08.480 --> 00:00:10.530
The distance between the points and

00:00:10.530 --> 00:00:14.820
their new projected spots on the new feature on the line.

00:00:14.820 --> 00:00:17.560
And we can sum this up over all the points, we'll get some number.

00:00:17.560 --> 00:00:18.890
And here's the key insight.

00:00:18.890 --> 00:00:22.690
Let me draw in another principle component that we could have hypothesised as,

00:00:22.690 --> 00:00:25.460
as the first principle component, as the one we wanted to use.

00:00:25.460 --> 00:00:27.130
Let's suppose that instead of the red line,

00:00:27.130 --> 00:00:29.680
we were looking at this purple line instead.

00:00:29.680 --> 00:00:32.049
Then we can ask the same question of the purple line,

00:00:32.049 --> 00:00:35.120
what's the information loss when we project all of the points down onto it.

00:00:35.120 --> 00:00:37.270
And we'll start to get something that looks like this.

00:00:37.270 --> 00:00:38.790
I know it's a little bit cluttered, but

00:00:38.790 --> 00:00:41.710
I hope what you can see is that on average these purple lines are all

00:00:41.710 --> 00:00:45.950
going to be significantly longer than the red lines.

00:00:45.950 --> 00:00:48.380
For any given point that might not be true, but for

00:00:48.380 --> 00:00:50.620
the points in aggregate, it will be true.

00:00:50.620 --> 00:00:54.330
Then when we maximize the variance, we're actually minimizing the distance

00:00:54.330 --> 00:00:57.110
between the points, and their new spot on the line.

00:00:57.110 --> 00:01:01.450
In other words, it's a mathematical fact that when we do this projection onto

00:01:01.450 --> 00:01:05.680
the direction of maximal variance, and only onto that direction, we'll be

00:01:05.680 --> 00:01:10.550
minimizing the distance from the old point to the new transformed point.

00:01:10.550 --> 00:01:14.123
And what this is necessarily doing is minimizing the information loss.

