WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:02.590
The principal components analysis that I'm doing happens to live in

00:00:02.590 --> 00:00:03.880
this function called doPCA.

00:00:03.880 --> 00:00:07.090
And it looks very familiar to a lot of the stuff we've done

00:00:07.090 --> 00:00:08.540
before in scikit-learn.

00:00:08.540 --> 00:00:09.770
You have an import statement where you

00:00:09.770 --> 00:00:12.630
actually get the module out that has the code that you want.

00:00:12.630 --> 00:00:15.910
You create, in this case, the principal components analysis.

00:00:15.910 --> 00:00:16.820
You fit it.

00:00:16.820 --> 00:00:18.350
And then you can return that as an object.

00:00:18.350 --> 00:00:23.490
And so what I do is I, I get my principal components that, analysis that way.

00:00:23.490 --> 00:00:25.060
And I can ask some very interesting,

00:00:25.060 --> 00:00:28.750
some very important questions of it by accessing the attributes.

00:00:28.750 --> 00:00:30.540
So let's explain these three lines.

00:00:30.540 --> 00:00:34.420
This is how I actually get the information out of my PCA object.

00:00:34.420 --> 00:00:38.910
The first, the explained variance ratio is actually where the eigenvalues live.

00:00:38.910 --> 00:00:41.220
So by printing out this, this line here.

00:00:41.220 --> 00:00:44.230
This is the way that I know that the first principle component has about 90,

00:00:44.230 --> 00:00:48.100
91 percent of the variation in the data, and the second one has about 9, or

00:00:48.100 --> 00:00:49.200
10 percent.

00:00:49.200 --> 00:00:50.720
Those numbers come from this statement.

00:00:50.720 --> 00:00:54.190
And then the second thing that I do is I look at the first and

00:00:54.190 --> 00:00:56.040
second principle components.

00:00:56.040 --> 00:00:59.770
I get these out of the components attribute of my PCA object.

00:00:59.770 --> 00:01:02.290
So the components is going to be a list,

00:01:02.290 --> 00:01:05.870
a Python list that has as many principle components in it.

00:01:05.870 --> 00:01:08.850
As I ask for as a parameter.

00:01:08.850 --> 00:01:11.930
So in that case, I have two principal components that I'm getting.

00:01:11.930 --> 00:01:13.320
So I name them the first and second pc.

00:01:13.320 --> 00:01:15.390
So in previous quizzes where we were talking about,

00:01:15.390 --> 00:01:21.020
what's the direction in of, say, x prime in the xy original feature space,

00:01:21.020 --> 00:01:25.290
we came up with two numbers that were sort of packaged together into a vector.

00:01:25.290 --> 00:01:29.210
You can access that directional information through these components.

00:01:29.210 --> 00:01:32.260
Once I've fit my principle components analysis I have to,

00:01:32.260 --> 00:01:36.150
in order to do anything, perform something like a transformation of the data.

00:01:36.150 --> 00:01:39.990
And this code I will just give you in the starter code for the quiz.

00:01:39.990 --> 00:01:42.600
What I'm doing here is, I'm visualizing it.

00:01:42.600 --> 00:01:44.010
The first line is in red.

00:01:44.010 --> 00:01:47.050
I'll be plotting the first principle component,

00:01:47.050 --> 00:01:50.450
the locations of all the points along that principle component.

00:01:50.450 --> 00:01:53.650
As well as the direction of the principle components.

00:01:53.650 --> 00:01:58.940
I'm accessing that information by using the elements of the first PC vector.

00:01:58.940 --> 00:02:02.370
Then in Cyan or kind of a teal color, I'll be accessing the second

00:02:02.370 --> 00:02:05.670
principle component, and in blue I have the original data.

00:02:05.670 --> 00:02:06.760
So let me show you what this looks like,

00:02:06.760 --> 00:02:08.830
and then you give it a try yourself in the quiz.

00:02:08.830 --> 00:02:13.130
The first thing that you get is that you print out the eigenvalues.

00:02:13.130 --> 00:02:15.770
Remember that's this explained variance ratio information.

00:02:15.770 --> 00:02:18.180
And then the second thing is that you'll get a scatter plot.

00:02:18.180 --> 00:02:20.250
And it should look something like this.

00:02:20.250 --> 00:02:24.130
So you remember the red was the direction of our first principle component.

00:02:24.130 --> 00:02:27.040
And that's hopefully exactly where you guessed it was.

00:02:27.040 --> 00:02:29.600
Certainly intuitively seems like it's in the right place.

00:02:29.600 --> 00:02:32.220
The cyan is perpendicular to that.

00:02:32.220 --> 00:02:34.360
And then the blue is the original data points.

00:02:34.360 --> 00:02:37.300
One thing that I'll add is that it looks to the eye like the red and

00:02:37.300 --> 00:02:39.750
the cyan are not perfectly orthogonal.

00:02:39.750 --> 00:02:42.470
This doesn't quite look like a 90 degree angle.

00:02:42.470 --> 00:02:44.870
But remember that our axis have different scales.

00:02:44.870 --> 00:02:46.850
That this one goes all the way out to ten million,

00:02:46.850 --> 00:02:50.650
the y axis only goes out to less than half of that, about four million.

00:02:50.650 --> 00:02:54.010
So, in reality, if we were to plot everything proportionally,

00:02:54.010 --> 00:02:57.050
this graph should be twice as long as it is tall.

00:02:57.050 --> 00:03:00.430
And if we were to visualize it in exactly that way, they would be orthogonal

