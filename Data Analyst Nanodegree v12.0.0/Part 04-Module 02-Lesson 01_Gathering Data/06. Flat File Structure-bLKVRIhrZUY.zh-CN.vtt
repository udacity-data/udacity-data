WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.000
平面文件这个术语包含众多

00:00:03.000 --> 00:00:06.419
具有相似核心特质但又稍有差异的文件

00:00:06.419 --> 00:00:08.315
我们从核心特质开始讲起

00:00:08.316 --> 00:00:12.660
平面文件包含纯文本格式的表格数据

00:00:12.660 --> 00:00:17.429
每行一个数据记录 每个记录或每行有一个或多个字段

00:00:17.429 --> 00:00:19.823
这些字段用分隔符隔开

00:00:19.824 --> 00:00:21.547
比如逗号

00:00:21.547 --> 00:00:23.585
正如你在页面左侧见到的

00:00:23.585 --> 00:00:27.560
Pandas 等软件或 Google Sheets 等电子表格应用

00:00:27.559 --> 00:00:29.849
页面右侧可见

00:00:29.850 --> 00:00:32.520
利用数据中的这些线索 了解如何

00:00:32.520 --> 00:00:35.655
表达各自程序内部的数据

00:00:35.655 --> 00:00:37.500
所以页面两侧实际上

00:00:37.500 --> 00:00:40.049
是相同的文件 只不过是在不同的程序中打开而已

00:00:40.049 --> 00:00:42.119
即文本编辑器和电子表格程序

00:00:42.119 --> 00:00:44.039
由于它们是纯文本格式

00:00:44.039 --> 00:00:46.085
人们可以自行阅读平面文件

00:00:46.085 --> 00:00:48.218
所以 重复一遍 纯文本

00:00:48.218 --> 00:00:49.485
每行一条记录

00:00:49.484 --> 00:00:51.341
每行都有若干字段

00:00:51.341 --> 00:00:53.160
每个字段用分隔符隔开

00:00:53.159 --> 00:00:55.559
继续谈谈细微差别

00:00:55.560 --> 00:00:58.425
首先 分隔符各不相同

00:00:58.424 --> 00:01:00.704
逗号是最常用的

00:01:00.704 --> 00:01:02.445
被称为 CSV 文件

00:01:02.445 --> 00:01:04.275
或逗号分隔值

00:01:04.275 --> 00:01:06.592
像左侧的这个文件一样

00:01:06.591 --> 00:01:09.730
有时候 也会用到其他分隔符 比如

00:01:09.730 --> 00:01:13.765
TSV 或 制表符分隔值文件中的制表符 你可以在这里见到

00:01:13.765 --> 00:01:17.049
这就是你们将在这堂课中用到的平面文件

00:01:17.049 --> 00:01:23.280
有时候 分隔符是空格 甚至是分号

00:01:23.280 --> 00:01:26.326
但所有这些文件都是以相同方式显示在电子表格程序中的

00:01:26.325 --> 00:01:28.564
比如右侧的 Google Sheets

00:01:28.564 --> 00:01:32.939
整个平面文件中并没有遵循的标准

00:01:32.939 --> 00:01:35.424
甚至在个别文件类型内也是如此

00:01:35.424 --> 00:01:37.744
还有许多奇怪的点

00:01:37.745 --> 00:01:39.700
主要的一个就是有些文件

00:01:39.700 --> 00:01:43.765
在每个字段条目有单引号或双引号 就像这样

00:01:43.765 --> 00:01:46.155
在这里 使用的是双引号

00:01:46.155 --> 00:01:48.840
好的 我们来谈谈具体的文件类型

00:01:48.840 --> 00:01:51.563
CSV 和 TSV 文件

00:01:51.563 --> 00:01:54.653
如果具有有效结构 那就始终是平面文件

00:01:54.653 --> 00:01:55.795
CSV 文件在左侧

00:01:55.795 --> 00:01:59.055
TSV 文件在右侧 .txt 文件

00:01:59.055 --> 00:02:02.565
正如你在标题顶部见到的 .txt

00:02:02.564 --> 00:02:04.454
也可以是平面文件

00:02:04.454 --> 00:02:09.484
如果它们遵循平面文件的制表规则 每行一条记录用分隔符隔开的话

00:02:09.485 --> 00:02:12.965
但文本文件不一定是平面文件

00:02:12.965 --> 00:02:15.689
它们只是像文本的 blob

00:02:15.689 --> 00:02:19.743
Roger Ebert 对影片《卡萨布兰卡》的影评文本

00:02:19.743 --> 00:02:24.150
本课后面你将会见到 .txt 版本

00:02:24.150 --> 00:02:28.689
相比之下 属于表格文件的 Excel 文件并非平面文件

00:02:28.689 --> 00:02:33.750
Excel 将这些数据放在一个压缩的 XML 文件集中 这是另一种文件格式

00:02:33.750 --> 00:02:36.504
在一个原始压缩格式的 Excel 文件中

00:02:36.504 --> 00:02:37.995
人们是不可能自己读懂的

00:02:37.995 --> 00:02:40.439
但一旦解压缩 XML 就是可以读懂的

00:02:40.439 --> 00:02:43.634
但肯定不像平面文件那样轻松

00:02:43.634 --> 00:02:47.414
所以 平面文件有利有弊

00:02:47.414 --> 00:02:50.459
它们很简单 人们读的懂

00:02:50.460 --> 00:02:54.135
而且很多软件能够读写属于平面文件的文本文件

00:02:54.134 --> 00:02:57.504
像 sublime 这样的简单的文本编辑器就是一个很好的例子

00:02:57.504 --> 00:03:00.074
缺点包括我们缺乏标准

00:03:00.074 --> 00:03:03.929
缺乏完整度 有时候 还包括大量数据冗余

00:03:03.930 --> 00:03:08.000
当我们在本课后面介绍其他文件类型时 这些缺点就会更加明显了

