WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.179
API 的大部分数据都是 JSON 或 XML 格式

00:00:06.179 --> 00:00:12.024
左边是 W3Schools 提供的 JSON 教程 右边是 XML 教程

00:00:12.025 --> 00:00:19.644
JSON (Javascript Object Notation) 顾名思义 JavaScript 对象标记 而 XML 代表可延伸标记语言

00:00:19.644 --> 00:00:22.024
这两种格式都有各自的用例

00:00:22.024 --> 00:00:24.904
但在本节课中 我们重点讲 JSON

00:00:24.905 --> 00:00:29.900
很多情况下 能用列表数据体现的内容有限

00:00:29.899 --> 00:00:33.185
有时 数据字段具有多个条目

00:00:33.185 --> 00:00:37.785
比如 Produce by 中就有 Kathleen Kennedy 和 Steven Spielberg 这两个数据

00:00:37.784 --> 00:00:41.074
有时 字段具有子字段 比如 Release date

00:00:41.075 --> 00:00:44.465
包含一个日期和发布地点

00:00:44.465 --> 00:00:48.475
例如 1992 年 5 月 26 日 (戛纳)

00:00:48.475 --> 00:00:51.865
再者 1982 年 6 月 11 日 (美国)

00:00:51.865 --> 00:00:55.624
Release date 实际上具有多个条目和字段

00:00:55.624 --> 00:00:59.484
用列表显示此数据将会很奇怪

00:00:59.484 --> 00:01:01.844
我们需要这个东西

00:01:01.844 --> 00:01:04.164
它很不自然

00:01:04.165 --> 00:01:07.840
暂停视频看看这有多奇怪

00:01:07.840 --> 00:01:11.079
正如此处所示

00:01:11.079 --> 00:01:14.409
JSON 对于展现和读取具有复杂结构的数据特别有用

00:01:14.409 --> 00:01:16.795
比如维基百科信息框

00:01:16.795 --> 00:01:18.140
我们来看看这个结构

00:01:18.140 --> 00:01:21.269
所以 JSON 建立在两个关键结构之上

00:01:21.269 --> 00:01:23.229
第一个是 JSON 对象

00:01:23.230 --> 00:01:26.189
它是一批键值对

00:01:26.188 --> 00:01:28.589
对象放在花括号内

00:01:28.590 --> 00:01:31.439
所以 这一整块代码是一个对象

00:01:31.439 --> 00:01:32.524
如右侧所示

00:01:32.525 --> 00:01:35.410
屏幕左侧显示的是 JSON 代码

00:01:35.409 --> 00:01:39.084
右侧是对本代码的可折叠解释

00:01:39.084 --> 00:01:40.909
我们可以折叠此处的对象

00:01:40.909 --> 00:01:44.454
回到 JSON 对象的键值对

00:01:44.454 --> 00:01:49.314
Directed by 是一个键 Steven Spielberg 是该键的值

00:01:49.314 --> 00:01:53.004
在 Spielberg 后有一个逗号隔开键值对

00:01:53.004 --> 00:01:55.599
在 Python 语言中 JSON 对象被解释为用户可以访问的字典

00:01:55.599 --> 00:01:59.299
就像标准的 Python 字典

00:01:59.299 --> 00:02:02.734
结构的第二个键被称为 JSON 数组

00:02:02.734 --> 00:02:04.685
即含有值的有序列表

00:02:04.685 --> 00:02:07.870
这是制片人 (Produced by) 键的数组

00:02:07.870 --> 00:02:10.090
方括号表示一个数组

00:02:10.090 --> 00:02:11.930
可以说得通 因为在 Python 语言下

00:02:11.930 --> 00:02:16.405
JSON 数组被解释为列表 它们可以以列表形式访问

00:02:16.405 --> 00:02:18.675
如果你熟悉其他它编程语言

00:02:18.675 --> 00:02:24.448
JSON 对象的模拟数据结构体可能是对象记录结构体

00:02:24.448 --> 00:02:27.965
哈希表、键列表或相联数组

00:02:27.965 --> 00:02:29.485
对于 JSON 数组

00:02:29.485 --> 00:02:32.395
模拟数据结构体可能是一个数组

00:02:32.395 --> 00:02:34.335
矢量或序列

00:02:34.335 --> 00:02:37.507
然而 JSON 对象键必须是字符串

00:02:37.507 --> 00:02:41.879
你会注意到左侧的每个键都是一个字符串

00:02:41.879 --> 00:02:46.889
JSON 对象和数组的值可以是任何有效的 JSON 数据类型

00:02:46.889 --> 00:02:48.904
所以一个字符串、数字

00:02:48.905 --> 00:02:52.150
对象、数组、布尔值或空值

00:02:52.150 --> 00:02:55.770
这有一个字符串 还是 “Steven Spielberg” 还有一个数字

00:02:55.770 --> 00:03:00.650
按美元计算的票房 (Box office) 或是按分钟计算的片长(Running time)

00:03:00.650 --> 00:03:04.835
这里就是 JSON 数组 作为主演 (Starring) 键

00:03:04.835 --> 00:03:06.594
我们来看看这里的发布 (Release) 键

00:03:06.594 --> 00:03:08.060
我们将字符串 “Release” 作为一个键

00:03:08.060 --> 00:03:11.525
然后把包含两个 JSON 对象的 JSON 数组也作为键

00:03:11.525 --> 00:03:14.049
当对象和数组像这样合并后

00:03:14.049 --> 00:03:15.310
就称为嵌套

