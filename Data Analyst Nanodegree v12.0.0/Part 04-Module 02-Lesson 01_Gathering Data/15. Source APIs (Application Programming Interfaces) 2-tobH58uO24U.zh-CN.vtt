WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.585
本节课的目标是以某种方法收集这些电影的海报图片

00:00:03.585 --> 00:00:06.474
此处显示的便是《ET 外星人》的海报

00:00:06.474 --> 00:00:13.739
所以 烂番茄网的确有一个 API 且提供观众评分

00:00:13.740 --> 00:00:17.100
这表示我们本能够通过 API

00:00:17.100 --> 00:00:20.750
而非从本课早先提到的 Rotten Tomatoes 网页上采集数据

00:00:20.750 --> 00:00:24.990
但很不幸的是 这个 API 不提供海报和图片

00:00:24.989 --> 00:00:28.629
即使提供

00:00:28.629 --> 00:00:33.295
此 API 要求在使用前 首先得通过申请表申请访问

00:00:33.295 --> 00:00:35.015
这种做法很常见

00:00:35.015 --> 00:00:39.475
这个 API 的扩展性无法满足本课程中的使用

00:00:39.475 --> 00:00:44.005
如果可以选择 按照经验我们一定会选用 API 而非数据采集

00:00:44.005 --> 00:00:46.790
正如 Stack Overflow 网页上的答案所建议

00:00:46.789 --> 00:00:50.494
如果感兴趣 你可以暂停视频 花一点时间读读这个建议

00:00:50.494 --> 00:00:53.299
采集操作易出错而且与重设网页布局分裂

00:00:53.299 --> 00:00:57.919
因为潜在的 HTML 发生了改变

00:00:57.920 --> 00:01:01.870
假如我们已访问到 Rotten Tomatoes 网站的 API

00:01:01.869 --> 00:01:05.694
左边是 API 及其访问库

00:01:05.694 --> 00:01:08.179
右侧为库的范例

00:01:08.180 --> 00:01:11.870
它允许程序员以超简单方式访问数据

00:01:11.870 --> 00:01:16.344
你很快就会明白 API 和 访问库之间的差异

00:01:16.344 --> 00:01:18.829
首先看一个例子

00:01:18.829 --> 00:01:21.079
看看使用 Rotten Tomatoes API 获取观众评分数据有多容易

00:01:21.079 --> 00:01:28.054
这个 API 访问库称为 rtsimple

00:01:28.055 --> 00:01:34.120
正如此处所写 rtsimple 是用 Python 为 Rotten Tomatoes API 编写的装饰器

00:01:34.120 --> 00:01:40.859
首先 我们导入 rtsimple 库为别名 rt 然后设置 API 密钥

00:01:40.859 --> 00:01:45.194
这就是 Rotten Tomatoes 隐藏在申请表审批程序后的内容

00:01:45.194 --> 00:01:48.199
我们用一句简单代码和 电影 ID 创建这个电影对象

00:01:48.200 --> 00:01:51.858
对 《ET 外星人》 而言

00:01:51.858 --> 00:01:54.950
ID 是 10489

00:01:54.950 --> 00:01:59.314
然后我们用 .ratings 和 括号中的 audience_score 访问观众评分

00:01:59.314 --> 00:02:02.254
如果我们有一个 API 秘钥 并运行此单元格

00:02:02.254 --> 00:02:07.039
《ET 外星人》 的观众评分 72 分将于下方打印出来

00:02:07.040 --> 00:02:09.770
与采集数据相比 这个操作不易出错

00:02:09.770 --> 00:02:13.960
尽管用 Beautiful Soup 操作相当简单 但我认为这是一个更直观的代码

00:02:13.960 --> 00:02:17.466
由于我们在本节课中不能使用烂番茄的 API

00:02:17.466 --> 00:02:21.080
请进入维基百科 具体说是 MediaWiki

00:02:21.080 --> 00:02:25.370
MediaWiki 是存储维基百科所有数据的 API

00:02:25.370 --> 00:02:28.460
接下来 你会熟悉 API 在使用 MediaWiki 的包装下如何运作

00:02:28.460 --> 00:02:32.000
以及在 Python 常见访问库下如何运作

