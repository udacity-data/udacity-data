WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.145
拟合逻辑回归模型

00:00:02.145 --> 00:00:05.140
实际上与上节课中

00:00:05.139 --> 00:00:07.094
拟合线性回归模型非常类似

00:00:07.094 --> 00:00:11.734
我们再次使用 statsmodels 对数据集进行逻辑回归

00:00:11.734 --> 00:00:15.855
首先我们加载必要的库和数据 正如你这里看到的

00:00:15.855 --> 00:00:17.414
与线性回归类似

00:00:17.414 --> 00:00:18.989
对于任何分类变量

00:00:18.989 --> 00:00:21.164
我们想要改为虚拟变量

00:00:21.164 --> 00:00:24.125
所以在这个数据集中

00:00:24.125 --> 00:00:25.980
一些日期标记为工作日或周末

00:00:25.980 --> 00:00:29.565
诈骗要么为真 要么为假

00:00:29.565 --> 00:00:32.414
所以我们把这些改为虚拟变量

00:00:32.414 --> 00:00:36.420
然后我们填充缺失值 诸如此类

00:00:36.420 --> 00:00:39.780
虽然我认为这个数据集中存在这种情况

00:00:39.780 --> 00:00:43.240
正如你看到的 这里没有缺失值

00:00:43.240 --> 00:00:49.285
所以我们应当创建虚拟变量

00:00:49.284 --> 00:00:53.549
这里我将要虚设诈骗 (fraud) 变量

00:00:53.549 --> 00:00:57.269
我们使用时长预测变量

00:00:57.270 --> 00:00:59.415
也会增加一个截距

00:00:59.414 --> 00:01:03.174
所以这里你看到我们创建了这些虚拟变量

00:01:03.174 --> 00:01:08.099
我使用 0 表示这里的假

00:01:08.099 --> 00:01:10.909
如果这一列为真 使用 1 表示

00:01:10.909 --> 00:01:14.950
所以实际上不需要最后一个 我们可以删除

00:01:14.950 --> 00:01:23.085
这样就得到我的DataFrame 现在可以继续使用 statsmodels

00:01:23.084 --> 00:01:25.659
对于逻辑回归

00:01:25.659 --> 00:01:28.109
我们不使用普通最小二乘法

00:01:28.109 --> 00:01:30.200
而是使用评定 (Logit) 模型

00:01:30.200 --> 00:01:34.019
我们需要传递的第一个参数值是反应变量

00:01:34.019 --> 00:01:36.920
所以我们即将完成

00:01:36.921 --> 00:01:45.320
所以我将要传递这组fraud数据 且应创造截距

00:01:45.319 --> 00:01:48.179
实际上这与上节课内容相似

00:01:48.180 --> 00:01:50.520
我们要传递截距

00:01:50.519 --> 00:01:53.823
我不知道为什么不能再使用高亮颜色了

00:01:53.823 --> 00:01:57.045
那么说我们要使用时长

00:01:57.045 --> 00:01:59.335
所以那样创建模型

00:01:59.334 --> 00:02:06.349
我们再次得到一个摘要

00:02:06.349 --> 00:02:10.944
我们需要进行拟合 然后存储起来 很棒

00:02:10.944 --> 00:02:14.139
所以进行最优化 你会发现

00:02:14.139 --> 00:02:17.000
我们得到的输出结果与上节课你见到的很相似

