WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:03.430
So, as a reminder, this is what our training data looked like.

00:00:03.430 --> 00:00:06.210
It's the same terrain data that we had in the last one.

00:00:06.210 --> 00:00:08.710
And we're trying to figure out whether you can go fast or

00:00:08.710 --> 00:00:10.890
you have to go slow on this terrain.

00:00:10.890 --> 00:00:13.480
So with that, I'm going to head back over to Google.

00:00:13.480 --> 00:00:17.400
I know that I want to use scikit-learn and support vector machine.

00:00:17.400 --> 00:00:20.520
All right, so we have lots of options here.

00:00:20.520 --> 00:00:21.288
Let's just jump right in.

00:00:21.288 --> 00:00:22.890
We'll click on the first one.

00:00:22.890 --> 00:00:25.650
Okay, so support vector machines, scrolling through a little bit,

00:00:25.650 --> 00:00:27.800
the first thing that I see is there's some advantages and

00:00:27.800 --> 00:00:30.170
disadvantages to support vector machines.

00:00:30.170 --> 00:00:31.380
So, that's pretty interesting.

00:00:31.380 --> 00:00:35.490
Those might be points that we'll revisit a little bit later in the class,

00:00:35.490 --> 00:00:38.640
but I am impatient and I want to start coding.

00:00:38.640 --> 00:00:41.220
So, the first thing it gives me, classification.

00:00:41.220 --> 00:00:46.080
Fantastic, and I can see that there is already example code that's ready to go.

00:00:46.080 --> 00:00:47.420
So, let's find this example code.

00:00:48.950 --> 00:00:50.800
Okay, this is starting to look a little bit familiar now.

00:00:50.800 --> 00:00:57.810
So, I have my import statement, I have my training features,

00:00:57.810 --> 00:01:02.119
and I have my training labels, like I did in a last example with Naive Bayes.

00:01:03.160 --> 00:01:05.160
I create my classifier.

00:01:05.160 --> 00:01:11.040
I fit it using my, my training features and my training labels, and

00:01:11.040 --> 00:01:14.770
then down here, they have us they show us how to do a prediction.

00:01:14.770 --> 00:01:20.130
So as you can see, it's actually exactly the same few lines of code.

00:01:20.130 --> 00:01:23.020
Only instead of now saying Gaussian Naive Bayes or

00:01:23.020 --> 00:01:24.860
whatever, I'm calling it an SVC.

00:01:24.860 --> 00:01:28.690
And this is one of the things that's really nice about scikit-learn,

00:01:28.690 --> 00:01:31.640
is that basically all the classifiers that we'll be looking at and

00:01:31.640 --> 00:01:35.610
all the classifiers that you might use sort of on your own in the future

00:01:35.610 --> 00:01:40.510
will follow this same pattern, where you import it, you create it,

00:01:40.510 --> 00:01:42.140
you fit it, and you make predictions.

00:01:42.140 --> 00:01:43.840
And it's always going to be the same syntax.

