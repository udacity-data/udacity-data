WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:04.030
So what does the SVM γ parameter actually do?

00:00:04.030 --> 00:00:06.760
Well, on the sklearn documentation, it tells me

00:00:06.760 --> 00:00:12.280
that γ defines how far the influence of a single training example reaches.

00:00:12.280 --> 00:00:17.230
If γ has a low value, then that means that every point has a far reach.

00:00:17.230 --> 00:00:20.930
And conversely, high values means that each training example only

00:00:20.930 --> 00:00:22.590
has a close reach.

00:00:22.590 --> 00:00:27.600
So what does this actually mean when we're fitting our support vector machine?

00:00:27.600 --> 00:00:29.492
Well, suppose my data looks like this.

00:00:29.492 --> 00:00:32.070
All right, I think we all agree that the decision boundary is going to

00:00:32.070 --> 00:00:34.200
cut through the data something like this.

00:00:34.200 --> 00:00:37.736
The question is just exactly what this boundary is going to look like.

00:00:37.736 --> 00:00:39.392
So if I have a high value of γ,

00:00:39.392 --> 00:00:42.883
the decision boundary, the exact details of the decision boundary,

00:00:42.883 --> 00:00:46.628
are just going to be dependent on the points that are the very closest to it.

00:00:46.628 --> 00:00:48.724
So these points that are very nearby,

00:00:48.724 --> 00:00:52.854
which leaves it sort of effectively ignoring some of these points that fall

00:00:52.854 --> 00:00:57.670
a little bit further away from the from the decision boundary itself.

00:00:57.670 --> 00:01:00.690
On the other hand, if this is my decision boundary and

00:01:00.690 --> 00:01:06.070
I have a low value of γ, then even the faraway points get taken into

00:01:06.070 --> 00:01:09.240
consideration when I'm actually deciding where to draw the decision boundary.

00:01:10.290 --> 00:01:13.340
Now, the reason why this matters, as you saw, is that, especially for

00:01:13.340 --> 00:01:18.640
high values of γ, you can end up with a fairly wiggly decision boundary.

00:01:18.640 --> 00:01:20.610
So recall that when we had a high value of γ,

00:01:20.610 --> 00:01:24.940
we got a decision boundary that might look something like this because, for

00:01:24.940 --> 00:01:28.160
example, this particular point is going to be very nearby the decision boundary.

00:01:28.160 --> 00:01:30.550
And so, it carries a lot of weight.

00:01:30.550 --> 00:01:33.240
It can pull the decision boundary all the way over so

00:01:33.240 --> 00:01:35.410
that it ends up on the correct side.

00:01:35.410 --> 00:01:37.780
On the other hand, if we have a low value of γ,

00:01:37.780 --> 00:01:41.810
then these points that are near the decision boundary have a,

00:01:41.810 --> 00:01:45.780
a relatively low weight when you compare them to the fact there's all these

00:01:45.780 --> 00:01:49.600
other faraway points that also influence the decision boundary.

00:01:49.600 --> 00:01:53.510
So as we saw in this particular example, that ends up making the decision

00:01:53.510 --> 00:01:58.480
boundary a little more linear, a little bit smoother, a little bit less jagged.

