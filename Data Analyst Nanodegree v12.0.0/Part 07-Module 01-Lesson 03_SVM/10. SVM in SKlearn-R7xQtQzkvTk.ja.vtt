WEBVTT
Kind: captions
Language: ja

00:00:00.110 --> 00:00:03.430
覚えていますか。これは学習用データです。

00:00:03.430 --> 00:00:06.210
前のレッスンで使ったのと同じ、地形データです。

00:00:06.210 --> 00:00:08.710
これを使って、スピードを出して良い地形かどうか

00:00:08.710 --> 00:00:10.890
判定しようとしています。

00:00:10.890 --> 00:00:13.480
それを行うために、まずはGoogle検索に戻りましょう。

00:00:13.480 --> 00:00:17.400
scikit-learnのSVMを使えば良いことはわかっています。

00:00:17.400 --> 00:00:20.310
出ました、たくさんのオプションがありますね。

00:00:20.310 --> 00:00:21.558
このページに行きましょう。

00:00:21.558 --> 00:00:22.890
最初のリンクをクリックします。

00:00:22.890 --> 00:00:25.650
OK、SVMのページです。スクロールすると

00:00:25.650 --> 00:00:27.800
SVMの強みと弱みについての

00:00:27.800 --> 00:00:30.170
解説文があります。

00:00:30.170 --> 00:00:31.380
興味深いですね。

00:00:31.380 --> 00:00:35.490
あとで戻って読んでみたいですね。

00:00:35.490 --> 00:00:38.640
でも私はせっかちで、早くコーディングを始めたいです。

00:00:38.640 --> 00:00:41.220
最初に分類のセクションがありました。

00:00:41.220 --> 00:00:46.080
素晴らしいですね。直ぐに実行できるサンプルコードを見つけました。

00:00:46.080 --> 00:00:48.950
このサンプルコードを読んでみましょう。

00:00:48.950 --> 00:00:51.650
このコードは前のレッスンのコードと似ています。

00:00:51.650 --> 00:00:57.810
import文があり、学習用のfeatureがあり

00:00:57.810 --> 00:01:02.800
学習用のラベルがあり、NaiveBayesでやったのと似ています。

00:01:02.800 --> 00:01:05.160
分類器を作って

00:01:05.160 --> 00:01:11.040
それをfitします。使うのは学習用のfeatureとlabelです。

00:01:11.040 --> 00:01:14.770
下に進むと推定を行う部分があります。

00:01:14.770 --> 00:01:20.130
お気づきの通り、この数行のコードは全く同じです。

00:01:20.130 --> 00:01:23.020
GaussianNaiveBayesをインポートする代わりに

00:01:23.020 --> 00:01:24.860
SVMをインポートしているだけです。

00:01:24.860 --> 00:01:28.690
これがscikit-learnの本当に素敵なところです。

00:01:28.690 --> 00:01:31.640
このあと見ていく、そしてあなたが使うであろう全ての分類器が

00:01:31.640 --> 00:01:35.610
基本的に同じパターンで使うことができます。

00:01:35.610 --> 00:01:40.000
importをして、分類器を作成し

00:01:40.000 --> 00:01:42.140
fitして、推定する。

00:01:42.140 --> 00:01:44.501
全て同じ構文で実行できるのです。

