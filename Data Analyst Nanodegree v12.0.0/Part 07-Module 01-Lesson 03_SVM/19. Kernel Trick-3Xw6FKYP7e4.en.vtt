WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:03.350
&gt;&gt; So Sebastian, this sounds really useful but really difficult.

00:00:03.350 --> 00:00:06.610
Are you telling me I have to write a bunch of new features?

00:00:06.610 --> 00:00:09.820
&gt;&gt; The cool thing about support vector machines is that you don't.

00:00:09.820 --> 00:00:12.950
There's something called the kernel trick.

00:00:12.950 --> 00:00:15.330
&gt;&gt; So are you going to explain the kernel trick to us?

00:00:15.330 --> 00:00:19.030
I bet you are. &gt;&gt; No won't really, I'll just give you the gist of it.

00:00:19.030 --> 00:00:23.140
There are functions that take a low dimensional input space or

00:00:23.140 --> 00:00:28.670
feature space, and map it to a very high dimensional space.

00:00:28.670 --> 00:00:33.470
So that what's used to be not linear separable and

00:00:33.470 --> 00:00:35.040
turn this into a separable problem.

00:00:36.180 --> 00:00:40.390
And without going into any detail, these functions are called kernels.

00:00:40.390 --> 00:00:43.856
And I encourage you to check out in this, these aren't just functions with

00:00:43.856 --> 00:00:47.810
a feature space, these are functions over two inputs.

00:00:47.810 --> 00:00:51.170
And when you apply the kernel trick to change your input space from x,y

00:00:51.170 --> 00:00:56.400
to a much larger input space, separate the data point using support

00:00:56.400 --> 00:01:01.909
vector machines, and then take the solution and go back to the original space.

00:01:03.110 --> 00:01:05.180
You now have a non linear separation.

00:01:06.180 --> 00:01:09.900
And this is the really cool thing about support vector machines.

00:01:09.900 --> 00:01:14.610
You can take a very simple idea of finding the best linear separator, or

00:01:14.610 --> 00:01:18.750
linear line between different classes, apply what's called the kernel trick

00:01:20.940 --> 00:01:26.440
in a higher dimensional space, and what you effectively get is a very, very powerful

00:01:27.520 --> 00:01:33.260
system to set datasets apart where the division line might be nonlinear.

00:01:33.260 --> 00:01:34.300
That is really cool,

00:01:34.300 --> 00:01:37.450
and one of the most central tricks in all of machine learning

