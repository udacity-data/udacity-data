WEBVTT
Kind: captions
Language: ja

00:00:00.120 --> 00:00:02.840
OK、次にみなさんにお願いすることが何か、もうお分かりですね？

00:00:02.840 --> 00:00:05.130
皆さん自身の手でコードを実装してください。

00:00:05.130 --> 00:00:07.110
皆さんの予想は正解です（笑）。

00:00:07.110 --> 00:00:09.730
最初に私がやったことを説明しましょう。

00:00:09.730 --> 00:00:14.050
そうすれば、同じようにみなさんもSVMを使えるようになるはずです。

00:00:14.050 --> 00:00:17.220
最初にGoogleで検索をして

00:00:17.220 --> 00:00:23.370
scikit-learnの Support Vector Machinesのドキュメントを見つけました。

00:00:23.370 --> 00:00:26.400
覚えていますね？少しスクロールすると

00:00:26.400 --> 00:00:29.350
"Classification"のセクションがあります。

00:00:29.350 --> 00:00:35.480
さらに下へ行くと、私のコード内でも使った、サンプルコードがあります。

00:00:35.480 --> 00:00:39.810
このコードを、ちょっとずつ理解して行きましょう。

00:00:39.820 --> 00:00:44.200
このコードで分類器を作成しています。

00:00:44.200 --> 00:00:47.950
ですから、私のコードにはこの行と

00:00:47.960 --> 00:00:50.350
この行を追加します。

00:00:50.350 --> 00:00:51.960
私のコードの書き方と

00:00:51.960 --> 00:00:53.320
違うことに気づいたでしょうか。

00:00:53.320 --> 00:00:55.827
これについては次のビデオで詳しく説明します。

00:00:55.827 --> 00:01:02.128
そして分類器を使って fit を行い、そして推定をおこなっています。

00:01:02.128 --> 00:01:04.689
そして最後にやってもらいたいのは

00:01:04.689 --> 00:01:08.430
推定の精度を出力することです。NaieBayesでやった時と同じようにです。

00:01:08.430 --> 00:01:12.532
覚えていますか？NaiveBayesの精度は約88.4％でした。

00:01:12.532 --> 00:01:15.594
では、ここで興味深い質問です。

00:01:15.594 --> 00:01:18.123
SVMとNaiveBayes

00:01:18.123 --> 00:01:22.030
例題である地形の分類に、適していたのはどちらでしょう？

