WEBVTT
Kind: captions
Language: en

00:00:00.440 --> 00:00:03.310
Okay, so now that we know all about kernels, let's go back to

00:00:03.310 --> 00:00:08.310
the sklearn documentation and see how kernels are supported in the actual code.

00:00:08.310 --> 00:00:11.840
See if there's different kernels that we could give a try and

00:00:11.840 --> 00:00:15.650
see how those affect the decision boundary that our SVM gives us.

00:00:15.650 --> 00:00:19.430
So okay I'm back at the page where we were a few videos ago.

00:00:19.430 --> 00:00:20.870
Now I'm looking at these

00:00:20.870 --> 00:00:23.580
some of these points a little bit more carefully and one of the things that

00:00:23.580 --> 00:00:26.940
I notice is that there are different kernel functions that can be specified for

00:00:26.940 --> 00:00:27.680
the decision function.

00:00:29.050 --> 00:00:31.720
So there's common kernels that I can use straight out of the box.

00:00:31.720 --> 00:00:32.500
Great!

00:00:32.500 --> 00:00:34.270
And there's also the option for

00:00:34.270 --> 00:00:36.670
custom kernels if I want to get really fancy.

00:00:36.670 --> 00:00:39.030
We'll be just using the common kernels that you can just use out of the box.

00:00:39.030 --> 00:00:40.470
But that might be really interesting things to

00:00:40.470 --> 00:00:42.530
play around with is to write your own kernel.

00:00:42.530 --> 00:00:46.760
So there's several different SVMs within scikit-learn that you could use.

00:00:46.760 --> 00:00:51.650
The one that we're using is SVC, the support vector classifier.

00:00:51.650 --> 00:00:55.890
Okay, and that takes me to another documentation page of the support vector

00:00:55.890 --> 00:00:57.990
classifier and I have this box at the top.

00:00:57.990 --> 00:01:01.110
This might be a little bit reminding you of what we were seeing in

00:01:01.110 --> 00:01:02.740
the Naive Bayes documentation earlier.

00:01:03.820 --> 00:01:07.790
So we have this whole complicated thing here

00:01:07.790 --> 00:01:11.380
that tells me how I can create my SVC.

00:01:11.380 --> 00:01:13.660
And I notice that there's all sorts of arguments,

00:01:13.660 --> 00:01:17.950
all sorts of parameters that I can pass when I'm creating it.

00:01:17.950 --> 00:01:20.280
One of these happens to be the kernel.

00:01:20.280 --> 00:01:22.470
Now let me take you back to the code that we wrote.

00:01:22.470 --> 00:01:24.850
You might recognize this from our last quiz.

00:01:24.850 --> 00:01:27.930
And one of the lines of code that I gave you, that I said we would explain

00:01:27.930 --> 00:01:32.250
later, was this line right here where I'm creating the classifier.

00:01:32.250 --> 00:01:37.630
So this line of code would work if these parentheses were just empty inside,

00:01:37.630 --> 00:01:38.220
but they're not.

00:01:38.220 --> 00:01:40.540
What I've done is I've specified a kernel.

00:01:40.540 --> 00:01:44.150
So the first example where we had that straight line decision boundary,

00:01:44.150 --> 00:01:46.740
this is using a linear kernel.

00:01:46.740 --> 00:01:47.670
Makes sense.

00:01:47.670 --> 00:01:48.940
So now I have a quiz for you.

00:01:48.940 --> 00:01:52.060
This is a little bit of a tough quiz because I haven't shown you exactly how to

00:01:52.060 --> 00:01:55.690
answer this question yet, but I've given you a big hint.

00:01:55.690 --> 00:01:59.520
The answer is on this page right here of the documentation.

00:01:59.520 --> 00:02:00.586
And the question for

00:02:00.586 --> 00:02:04.510
you is which of the following are SVC kernels that we can use?

00:02:04.510 --> 00:02:12.490
Your options are linear, poly, rbf, sigmoid, or all of these options plus more.

00:02:12.490 --> 00:02:15.190
So which of these kernels are available to you when you're

00:02:15.190 --> 00:02:16.525
using the sklearn SVC?

