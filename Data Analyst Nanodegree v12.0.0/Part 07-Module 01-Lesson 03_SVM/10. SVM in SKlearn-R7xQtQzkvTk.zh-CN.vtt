WEBVTT
Kind: captions
Language: zh-CN

00:00:00.110 --> 00:00:03.430
回顾一下 我们的训练数据看上去是这样的

00:00:03.430 --> 00:00:06.210
这就是上节课中的地形数据

00:00:06.210 --> 00:00:08.710
我们现在想知道

00:00:08.710 --> 00:00:10.890
这个地形可以快速行驶 还是需要减速行驶

00:00:10.890 --> 00:00:13.480
重新回到 Google

00:00:13.480 --> 00:00:17.400
我知道我想要使用 scikit-learn 和支持向量机

00:00:17.400 --> 00:00:20.520
好的 这里提供了多个选项

00:00:20.520 --> 00:00:21.288
我们选一个进去吧

00:00:21.288 --> 00:00:22.890
我点了第一项

00:00:22.890 --> 00:00:25.650
好的 支持向量机 往后面看

00:00:25.650 --> 00:00:27.800
我看到的第一项内容

00:00:27.800 --> 00:00:30.170
是支持向量机的优缺点

00:00:30.170 --> 00:00:31.380
这很有意思

00:00:31.380 --> 00:00:35.490
我们会在后续课程再查看这几个要点

00:00:35.490 --> 00:00:38.640
我已经等不及了 想马上开始写代码

00:00:38.640 --> 00:00:41.220
文档的代码部分提供的第一项内容是分类

00:00:41.220 --> 00:00:46.080
太棒了 我看到这里已经有可以直接使用的示例代码

00:00:46.080 --> 00:00:47.420
让我们来看看这些代码

00:00:48.950 --> 00:00:50.800
是不是感觉有点熟悉了？

00:00:50.800 --> 00:00:57.810
这里有 import 导入语句 训练特征 还有训练标签

00:00:57.810 --> 00:01:02.119
和之前的朴素贝叶斯分类器的示例中一样

00:01:03.160 --> 00:01:05.160
我创建一个分类器

00:01:05.160 --> 00:01:11.040
并使用训练特征和训练标签进行拟合

00:01:11.040 --> 00:01:14.770
然后到了这里 这行代码演示了如何进行预测

00:01:14.770 --> 00:01:20.130
正如你所见 其实和上节课的例子一样 总共只有几行代码

00:01:20.130 --> 00:01:23.020
只是它的名字不再是高斯朴素贝叶斯

00:01:23.020 --> 00:01:24.860
而是 SVC

00:01:24.860 --> 00:01:28.690
这是 scikit-learn 的优点之一

00:01:28.690 --> 00:01:31.640
基本上 我们可能用到的所有分类器

00:01:31.640 --> 00:01:35.610
以及未来你自行定义的所有分类器

00:01:35.610 --> 00:01:40.510
都会遵循这一代码编写方式 即导入库 创建分类器

00:01:40.510 --> 00:01:42.140
对分类器进行拟合（训练） 最后进行预测

00:01:42.140 --> 00:01:43.840
使用的语法也是相同的

