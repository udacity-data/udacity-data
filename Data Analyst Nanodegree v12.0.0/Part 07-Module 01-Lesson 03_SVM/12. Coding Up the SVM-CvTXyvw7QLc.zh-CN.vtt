WEBVTT
Kind: captions
Language: zh-CN

00:00:00.310 --> 00:00:02.840
现在你肯定知道我打算让你做什么了

00:00:02.840 --> 00:00:05.130
是时候自己写一些代码了

00:00:05.130 --> 00:00:07.110
如果你猜到了 那么恭喜

00:00:07.110 --> 00:00:09.730
下面来演示一下我的做法

00:00:09.730 --> 00:00:13.600
然后你们就可以自己写一个支持向量机了

00:00:13.600 --> 00:00:17.220
我的建议是 返回 Google 页面

00:00:17.220 --> 00:00:23.330
从 scikit-learn 网站中找到这个 Support Vector Machines（支持向量机）的文档

00:00:23.330 --> 00:00:25.380
如果你往下面看

00:00:25.380 --> 00:00:29.350
你就会找到 “分类” 这一节

00:00:29.350 --> 00:00:35.480
往后面看到这里 我用这些示例代码编写了我自己的代码

00:00:35.480 --> 00:00:38.800
在创造分类器时

00:00:39.820 --> 00:00:43.740
需要注意一点

00:00:43.740 --> 00:00:47.060
你们真正需要做的是

00:00:47.060 --> 00:00:49.340
从这一行和这一行开始写

00:00:49.340 --> 00:00:51.680
你们会发现 这与我写代码的方式

00:00:51.680 --> 00:00:52.300
有些不同

00:00:52.300 --> 00:00:55.827
我们会在后面几个视频中讨论相关内容

00:00:55.827 --> 00:01:01.468
现在 轮到你来拟合分类器 并进行预测

00:01:01.468 --> 00:01:05.319
你们要做的最后一件事就是 输出分类器的准确率

00:01:05.319 --> 00:01:08.430
我们在朴素贝叶斯中也计算过准确率

00:01:08.430 --> 00:01:12.532
朴素贝叶斯方法对这组测试数据的准确率约为 88.4%

00:01:12.532 --> 00:01:15.594
一个有趣的问题是

00:01:15.594 --> 00:01:16.353
支持向量机和朴素贝叶斯

00:01:16.353 --> 00:01:20.770
哪种方法对这组地形数据的分类更好？

