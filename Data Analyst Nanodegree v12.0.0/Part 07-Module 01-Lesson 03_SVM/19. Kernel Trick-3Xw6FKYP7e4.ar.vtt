WEBVTT
Kind: captions
Language: ar

00:00:00.120 --> 00:00:03.350
‫حسنًا Sebastian، هذا يبدو مفيدًا جدًا ولكنه صعب جدًا.

00:00:03.350 --> 00:00:06.610
‫فهل تعني أنه يجب علي كتابة مجموعة جديدة من الميزات؟

00:00:06.610 --> 00:00:09.820
‫&gt;&gt; الأمر الرائع بشأن أجهزة متجهات الدعم هو أنك لستِ مضطرة إلى ذلك.

00:00:09.820 --> 00:00:12.950
‫فهناك ما يسمى بحيلة kernel.

00:00:12.950 --> 00:00:15.330
‫&gt;&gt; هل ستشرح لنا حيلة kernel؟

00:00:15.330 --> 00:00:19.030
‫أعتقد أنك ستفعل ذلك. &gt;&gt; ليس بالضبط، سأعطيكم لمحة عنها فحسب.

00:00:19.030 --> 00:00:23.140
‫توجد دالات تأخذ مساحة إدخال أو مساحة ميزات قليلة الأبعاد،

00:00:23.140 --> 00:00:28.670
‫وتحولها إلى مساحة ذات أبعاد كثيرة جدًا.

00:00:28.670 --> 00:00:33.470
‫بحيث يتحول ما كان غير قابل للفصل خطيًا

00:00:33.470 --> 00:00:35.040
‫إلى مسألة قابلة للفصل.

00:00:36.180 --> 00:00:40.390
‫ودون الخوض في أية تفاصيل، هذه الدالات تسمى دالات kernel.

00:00:40.390 --> 00:00:43.856
‫وأنا أحثكم على الاطلاع عليها، فهي ليست مجرد دالات

00:00:43.856 --> 00:00:47.810
‫ذات مساحة ميزات فحسب، بل هي دالات لها إدخالان.

00:00:47.810 --> 00:00:51.170
‫وعندما تقومون بتطبيق حيلة kernel لتغيير مساحة الإدخال من x،y

00:00:51.170 --> 00:00:56.400
‫إلى مساحة إدخال أكبر بكثير، وفصل نقاط البيانات باستخدام

00:00:56.400 --> 00:01:01.909
‫أجهزة متجهات الدعم، ثم تأخذون الحل وتعودون إلى المساحة الأصلية،

00:01:03.110 --> 00:01:05.180
‫يصبح لديكم الآن فصل غير خطي.

00:01:06.180 --> 00:01:09.900
‫وهذا هو الأمر الرائع حقًا بشأن أجهزة متجهات الدعم.

00:01:09.900 --> 00:01:14.610
‫حيث يمكنكم أخذ فكرة بسيطة جدًا لإيجاد أفضل فصل خطي، أو

00:01:14.610 --> 00:01:18.750
‫خط خطي بين الفئات المختلفة، وتطبيق ما يسمى بحيلة kernel عليها

00:01:20.940 --> 00:01:26.440
‫في مساحة كثيرة الأبعاد، وما ستحصلون عليه عمليًا هو نظام قوى جدًا

00:01:27.520 --> 00:01:33.260
‫للفصل بين مجموعات البيانات عندما يحتمل أن يكون خط الفصل غير خطي.

00:01:33.260 --> 00:01:34.300
‫وهذا أمر رائع حقًا،

00:01:34.300 --> 00:01:37.450
‫وهو أحد أهم الحيل الأساسية في التعلم الآلي كله.

