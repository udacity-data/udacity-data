WEBVTT
Kind: captions
Language: ar

00:00:00.440 --> 00:00:03.310
حسنًا، إننا نعرف الآن كل شيء عن دوال kernel، دعونا نعود إلى

00:00:03.310 --> 00:00:08.310
.وثائق SK Learn ونرى كيف يتم دعم دوال kernel في التعليمة البرمجية الفعلية

00:00:08.310 --> 00:00:11.840
ونرى إذا كانت هناك دوال kernel مختلفة يمكن أن نجربها

00:00:11.840 --> 00:00:15.650
.ونرى كيف تؤثر على حد القرار الذي تعطيه لنا خوارزمية أجهزة متجهات الدعم

00:00:15.650 --> 00:00:19.430
.حسنًا، لقد عدت مرة أخرى إلى الصفحة التي كنا عليها قبل عدة مقاطع فيديو سابقة

00:00:19.430 --> 00:00:20.870
والآن، أتفحص بعض هذه النقاط

00:00:20.870 --> 00:00:23.580
بعناية أكثر قليلاً ويُعد أحد الأشياء التي

00:00:23.580 --> 00:00:26.940
ألاحظها هو أن هناك وظائف مختلفة لدوال kernel والتي يمكن أن تكون محددة

00:00:26.940 --> 00:00:27.680
.لوظيفة القرار

00:00:29.050 --> 00:00:31.720
.لذلك، هناك دوال kernel مشتركة يمكنني استخدامها مباشرة بشكل إبداعي

00:00:31.720 --> 00:00:32.500
!رائع

00:00:32.500 --> 00:00:34.270
هناك أيضًا خيار لاستخدام

00:00:34.270 --> 00:00:36.670
.دوال kernel المخصصة إذا أردتم الاستمتاع بتخصص حقيقي

00:00:36.670 --> 00:00:39.030
.سنستخدم دوال kernel المشتركة التي يمكنكم استخدامها بشكل إبداعي

00:00:39.030 --> 00:00:40.470
ولكن قد يكون من المثير للاهتمام حقًا

00:00:40.470 --> 00:00:42.530
.كتابة دالة kernel الخاصة بكم

00:00:42.530 --> 00:00:46.760
.إذن، يوجد العديد من خوارزميات &rlm;‫أجهزة متجهات الدعم في scikit-learn التي يمكن استخدامها

00:00:46.760 --> 00:00:51.650
.(والتي نستخدمها هنا هي مصنف متجهات الدعم (SVC

00:00:51.650 --> 00:00:55.890
حسنًا، وهذا ينقلني إلى صفحة وثائق أخرى من

00:00:55.890 --> 00:00:57.990
.مصنف متجهات الدعم ولدي هذا المربع في الأعلى

00:00:57.990 --> 00:01:01.110
وهذا قد يذكركم قليلاً بما كنا نراه في

00:01:01.110 --> 00:01:02.740
.وثائق مصنِّف بايز المبسط في وقت سابق

00:01:03.820 --> 00:01:07.790
إذن، لدينا هذا الشيء المعقد بأكمله هنا

00:01:07.790 --> 00:01:11.380
.والذي يخبرني بكيفية إنشاء مصنف متجهات الدعم

00:01:11.380 --> 00:01:13.660
،وألاحظ أن هناك كل أنواع الوسائط

00:01:13.660 --> 00:01:17.950
.جميع أنواع المعلمات التي يمكنني تخطيها عند إنشائه

00:01:17.950 --> 00:01:20.280
.وأحدها هو دالة kernel

00:01:20.280 --> 00:01:22.470
.والآن اسمحوا لي بالرجوع إلى التعليمة البرمجية التي كتبناها

00:01:22.470 --> 00:01:24.850
.يمكنكم التعرف عليها من اختبارنا الأخير

00:01:24.850 --> 00:01:27.930
وقد كان أحد أسطر التعليمة البرمجية التي أعطيتكم إياها والذي قلت أني سأفسره لاحقًا

00:01:27.930 --> 00:01:32.250
.هذا السطر هنا الذي أقوم فيه بإنشاء المصنف

00:01:32.250 --> 00:01:37.630
،إذن، سيعمل هذا السطر من التعليمة البرمجية إذا كانت هذه الأقواس فارغة من الداخل

00:01:37.630 --> 00:01:38.220
.ولكنها ليست كذلك

00:01:38.220 --> 00:01:40.540
ما قمت به هو تحديد دالة kernel.‬

00:01:40.540 --> 00:01:44.150
،لذلك، يوجد المثال الأول حيثما يوجد حد القرار لهذا الخط الثابت

00:01:44.150 --> 00:01:46.740
.وهذا يحدث باستخدام نواة خطية

00:01:46.740 --> 00:01:47.670
.يبدو هذا منطقيًا

00:01:47.670 --> 00:01:48.940
.والآن لدي اختبار لكم

00:01:48.940 --> 00:01:52.060
إنه اختبار صعب قليلاً لأنني لم أوضح لكم بالضبط كيفية

00:01:52.060 --> 00:01:55.690
.الإجابة على هذا السؤال بعد، ولكنني أعطيتكم تلميحًا كبيرًا

00:01:55.690 --> 00:01:59.520
.والإجابة توجد على هذه الصفحة من الوثائق

00:01:59.520 --> 00:02:00.586
،والسؤال هو

00:02:00.586 --> 00:02:04.510
أي مما يلي يمثل نواة مصنف متجهات الدعم التي يمكننا استخدامها؟

00:02:04.510 --> 00:02:12.490
.خياراتكم هي linear أو poly أو rbf أو sigmoid أو جميع هذه الخيارات بالإضافة للمزيد

00:02:12.490 --> 00:02:15.190
إذن، أي من هذه الدوال الخاصة بنواة kernel متاحة لكم عند استخدام

00:02:15.190 --> 00:02:16.525
.مصنف متجهات الدعم SK Learn

