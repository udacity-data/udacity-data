WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.129
Earlier in this lesson, you saw how violin and box plots could be used to

00:00:04.129 --> 00:00:08.365
depict the relationship between one quantitative and one qualitative variable.

00:00:08.365 --> 00:00:11.949
In this video, we'll use an alternative strategy faceting

00:00:11.949 --> 00:00:16.484
histograms of the quantitative variable against the qualitative subsets of the data.

00:00:16.484 --> 00:00:22.015
To perform faceting, we're going to make use of Seaborn's Facet Grid Object Class.

00:00:22.015 --> 00:00:25.870
I'm going to set two parameters for creating the facet grid object.

00:00:25.870 --> 00:00:30.520
The fuel_econ data frame is assigned to data like before,

00:00:30.519 --> 00:00:34.244
and then we assign VClass column to the col parameter.

00:00:34.244 --> 00:00:37.524
What this means that for whatever plot we facet with,

00:00:37.524 --> 00:00:41.854
there will be one of that plot made for each level of vehicle class.

00:00:41.854 --> 00:00:45.500
Now, we need to say what kind of plot we want to generate for each of

00:00:45.500 --> 00:00:49.560
the facets using the map function of facet grid objects.

00:00:49.560 --> 00:00:52.035
The first argument is the plotting function.

00:00:52.034 --> 00:00:53.974
In this case hist.

00:00:53.975 --> 00:00:57.939
The following argument is the variable to be plotted on the x axis.

00:00:57.939 --> 00:01:00.019
In this case comb.

00:01:00.020 --> 00:01:03.515
It's important that you don't set x equals in this,

00:01:03.515 --> 00:01:06.579
or the faceting by subgroups won't work correctly.

00:01:06.579 --> 00:01:10.349
You can see that all of the data is plotted using the default ten bins for

00:01:10.349 --> 00:01:14.434
the hist function but the axis limits are the same for each facet.

00:01:14.435 --> 00:01:17.490
This is useful for comparing the frequency of each group on

00:01:17.489 --> 00:01:21.924
the faceted variable and the values within each group for the plotted variable.

00:01:21.924 --> 00:01:24.289
Let's do a little tweaking to the plots.

00:01:24.290 --> 00:01:27.165
First, I'll add a bins parameter to the map function,

00:01:27.165 --> 00:01:30.010
so that the bins across each facet are the same.

00:01:30.010 --> 00:01:33.609
Next, I'll add the col_wrap parameter

00:01:33.609 --> 00:01:36.969
to limit the number of facets that can be placed side by side.

00:01:36.969 --> 00:01:40.129
This isn't vital for this particular data set but it can be

00:01:40.129 --> 00:01:43.774
useful if you have a lot more levels in your faceted variable.

00:01:43.775 --> 00:01:46.560
Lastly, I want to demonstrate what happens if you

00:01:46.560 --> 00:01:49.875
don't fix the same axis limits across facets.

00:01:49.875 --> 00:01:53.590
By setting share y equals false in the facet grid col,

00:01:53.590 --> 00:01:57.090
each facet can have its own y axis limits.

00:01:57.090 --> 00:02:01.335
It's a little easier this way to see the change in distributions across levels,

00:02:01.334 --> 00:02:05.289
but you also lose out on seeing the overall frequency of each group.

00:02:05.290 --> 00:02:06.920
If you're not paying attention,

00:02:06.920 --> 00:02:09.530
you might think that each class has a similar number of

00:02:09.530 --> 00:02:13.400
cars when in fact they're not exactly the same

