WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.904
Let's plot the relationship between two qualitative variables,

00:00:03.904 --> 00:00:07.244
vehicle class and type of vehicle transmission.

00:00:07.245 --> 00:00:10.780
To simplify things, I'm only going to look at the main type division.

00:00:10.779 --> 00:00:16.339
Automatic or manual, which has been stored in the trans_type column.

00:00:16.339 --> 00:00:18.190
One way of depicting this,

00:00:18.190 --> 00:00:20.589
could be with the heatmap like we saw before.

00:00:20.589 --> 00:00:22.859
There's actually a Seaborn function for

00:00:22.859 --> 00:00:26.579
this categorical type of heatmap, the heatmap function.

00:00:26.579 --> 00:00:29.379
However, this function takes as an argument

00:00:29.379 --> 00:00:33.234
a 2D array or DataFrame with the values to be depicted.

00:00:33.234 --> 00:00:35.929
That means that we need to do some summarization

00:00:35.929 --> 00:00:38.820
work ourselves before we can create our plot.

00:00:38.820 --> 00:00:42.890
First, I use the groupby and size functions to get the number of cars

00:00:42.890 --> 00:00:47.399
and each combination of the two variables levels as a panda series.

00:00:47.399 --> 00:00:53.074
Then, I use reset index to convert the series into a DataFrame.

00:00:53.075 --> 00:00:58.415
Finally, I use pivot to rearrange the data so that I have vehicle class on rows,

00:00:58.414 --> 00:01:00.185
transmission types on columns,

00:01:00.185 --> 00:01:02.164
and values in the cells.

00:01:02.164 --> 00:01:04.420
Now, we're ready to plot.

00:01:04.420 --> 00:01:07.045
This is actually kind of disappointing.

00:01:07.045 --> 00:01:09.670
It's actually really hard to compare the counts and

00:01:09.670 --> 00:01:12.439
transmission ratios from the colors alone.

00:01:12.439 --> 00:01:15.745
You can see that manual is less popular than automatic.

00:01:15.745 --> 00:01:18.704
But beyond that, it's kind of hard to tell.

00:01:18.704 --> 00:01:21.719
One option we have is to add annotations with counts to

00:01:21.719 --> 00:01:25.575
the cells which makes the representation more tabular in nature.

00:01:25.575 --> 00:01:28.650
The fm 't' parameter set to 'd'

00:01:28.650 --> 00:01:32.395
ensures that of all the counts are listed as decimal values.

00:01:32.394 --> 00:01:34.719
An alternative way of showing the distribution and

00:01:34.719 --> 00:01:37.700
counts is through the use of a clustered bar chart.

00:01:37.700 --> 00:01:39.850
In the last lesson, you saw how to use

00:01:39.849 --> 00:01:44.459
Seaborn's count plot function to generate a bar chart of one variable.

00:01:44.459 --> 00:01:47.140
To divide each of the individual bars into

00:01:47.140 --> 00:01:49.885
multiple bars for the different transmission types,

00:01:49.885 --> 00:01:55.050
we just need to add a hue parameter pointing to the trans_type variable.

00:01:55.049 --> 00:01:56.629
With the cluster bar chart,

00:01:56.629 --> 00:01:59.170
we can see clearly that mini compact cars have

00:01:59.170 --> 00:02:02.405
the closest ratio between automatic and manual transmissions,

00:02:02.405 --> 00:02:05.670
while large cars had the most distant ratio.

