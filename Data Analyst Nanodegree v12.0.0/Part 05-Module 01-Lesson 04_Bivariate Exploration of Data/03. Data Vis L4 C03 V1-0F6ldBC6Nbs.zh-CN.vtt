WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.790
我们来探索一下燃油效率

00:00:02.790 --> 00:00:05.780
与另一个变量 (生产年份) 的相关性

00:00:05.780 --> 00:00:10.074
随着科技进步 人们对环境的关注日益加强

00:00:10.074 --> 00:00:14.504
促使常规燃料汽车近来不断提高燃油效率

00:00:14.505 --> 00:00:16.710
我们先来看一个散点图：

00:00:16.710 --> 00:00:20.519
燃油效率 vs 生产年份 创建方式和之前一样

00:00:20.519 --> 00:00:24.960
从拟合回归线可看出 效率有小幅提高的趋势

00:00:24.960 --> 00:00:27.164
但从数据来看 这点并不明确

00:00:27.164 --> 00:00:31.855
可以明确辨认出的 是在 42 英里每加仑 (mpg) 以上的那些点

00:00:31.855 --> 00:00:36.390
很显然 我们得调整透明度和抖动设置

00:00:36.390 --> 00:00:37.869
先来设置抖动

00:00:37.869 --> 00:00:39.979
因为我们想抖动 x 的值

00:00:39.979 --> 00:00:42.239
所以得添加参数 x_jitter

00:00:42.240 --> 00:00:46.050
参数值设为 0.3 也就是每个 x 值

00:00:46.049 --> 00:00:50.299
随机抖动范围在 ± 0.3 之间

00:00:50.299 --> 00:00:52.539
注意 该设置只能用在

00:00:52.539 --> 00:00:56.534
seaborn 的 regplot 函数中 不能对 matplotlib 的scatter 函数使用
则不能

00:00:56.534 --> 00:00:59.409
现在数据点呈宽带状

00:00:59.409 --> 00:01:01.209
而不是线状

00:01:01.210 --> 00:01:05.960
但这样还是看不出 35 以下的数据分布

00:01:05.959 --> 00:01:08.359
所以要进行透明度设置

00:01:08.359 --> 00:01:11.189
如果用的是 matplotlib 的函数 scatter

00:01:11.189 --> 00:01:14.709
那我们可以直接在调用函数里添加 alpha 参数

00:01:14.709 --> 00:01:17.529
而用 regplot 函数的话 我们得先把这个参数写为字典形式

00:01:17.530 --> 00:01:21.695
然后将这个字典赋给 scatter_kws 参数

00:01:21.694 --> 00:01:26.789
alpha 会在 0 和 1 之间取值 从而指定数据点的不透明度

00:01:26.790 --> 00:01:30.475
0 是完全透明 1 是完全不透明

00:01:30.474 --> 00:01:33.259
我们先试着把 alpha 设为 1/5

00:01:33.260 --> 00:01:34.829
挺好的

00:01:34.829 --> 00:01:38.254
但中间的目标区域趋势还是难以辨别

00:01:38.254 --> 00:01:40.765
我们试着把 alpha 设为 1/20

00:01:40.765 --> 00:01:43.825
这下可以比较清楚地看出数据点的趋势了

00:01:43.825 --> 00:01:48.570
有一定透明度的数据点重叠 会形成颜色较深的区域

00:01:48.569 --> 00:01:52.014
这些区域随着年份增长 稍有上升

00:01:52.015 --> 00:01:53.890
注意 这一系列操作

00:01:53.890 --> 00:01:56.150
并不会改变回归线

00:01:56.150 --> 00:01:58.450
抖动和透明度设置

00:01:58.450 --> 00:02:02.075
不会影响形成拟合回归线的基础值

00:02:02.075 --> 00:02:05.159
如果你对这样的结果还不满意

00:02:05.159 --> 00:02:08.174
那还可以用别的办法来绘制数据

00:02:08.175 --> 00:02:10.655
比如 既然年份是离散的

00:02:10.655 --> 00:02:13.069
那我们大可以将其看作分类变量

00:02:13.069 --> 00:02:15.799
绘制成另一种图表 下个视频见

