WEBVTT
Kind: captions
Language: zh-CN

00:00:04.700 --> 00:00:09.300
你可以把分组条形图的数据

00:00:09.300 --> 00:00:13.839
拆成多个子集来看 将其想成是一系列并排放置的单变量条形图

00:00:13.839 --> 00:00:17.594
这种把数据分成多个子集并用

00:00:17.594 --> 00:00:21.899
同一种图表分别绘制的技术称为分面

00:00:21.899 --> 00:00:24.574
分面可用于任意类型的图表

00:00:24.574 --> 00:00:26.384
而不止局限于条形图

00:00:26.385 --> 00:00:29.920
比如 小提琴图可以看作是

00:00:29.920 --> 00:00:34.094
一组按分类变量类型进行分面的直方图

00:00:34.094 --> 00:00:36.254
作为一种通用技术

00:00:36.255 --> 00:00:41.605
分面擅长将可能很复杂的模式分解成多个较小的部分

00:00:41.604 --> 00:00:46.894
如果分类变量有很多类别 分面会格外实用

00:00:46.895 --> 00:00:50.609
比如 此图按月份对用户注册日期进行了分面

00:00:50.609 --> 00:00:54.700
从而形成了一个三乘四的网格

00:00:54.700 --> 00:00:58.050
将数据从一个冗长的条形图

00:00:58.049 --> 00:01:01.049
拆分成多个条形图 我们就能更轻易地发现

00:01:01.049 --> 00:01:05.263
注册信息为一月一号的异常值

00:01:05.263 --> 00:01:08.640
使用分面时

00:01:08.640 --> 00:01:12.950
要注意每个子图的坐标轴刻度和范围应当保持一致

00:01:12.950 --> 00:01:17.150
子图坐标轴范围不同

00:01:17.150 --> 00:01:22.850
观察时就很容易误读各数据子集的总频率或值范围

00:01:22.849 --> 00:01:25.954
以这两个图为例

00:01:25.954 --> 00:01:30.349
左图两组的频率和范围看似差不多

00:01:30.349 --> 00:01:34.750
但如果你仔细研究坐标轴的范围 就会发现其实是有区别的

00:01:34.750 --> 00:01:39.989
右图将两个子图的轴范围进行了对齐

00:01:39.989 --> 00:01:42.309
从中可看出 B 类的数据点更多

00:01:42.310 --> 00:01:45.760
而且 B 类数据点的值基本都比 A 类大

