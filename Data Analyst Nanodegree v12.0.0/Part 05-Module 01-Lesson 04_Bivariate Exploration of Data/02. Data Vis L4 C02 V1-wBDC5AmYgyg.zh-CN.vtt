WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.149
本课将借助这个燃油效率数据集

00:00:02.149 --> 00:00:06.699
来探索双变量可视化

00:00:06.700 --> 00:00:09.644
这里记录了 3900 辆轿车的数据

00:00:09.644 --> 00:00:12.853
生产年份处于 2013 到 2018 年之间

00:00:12.853 --> 00:00:15.739
只考虑常规燃料

00:00:15.740 --> 00:00:19.765
我们先来研究两个数值变量之间的关系

00:00:19.765 --> 00:00:21.644
一个变量为发动机排量 单位为升

00:00:21.644 --> 00:00:24.460
另一个为燃油里程 单位为英里每加仑 (mpg)

00:00:24.460 --> 00:00:28.855
发动机排量越大 燃油效率是越高还是越低呢？

00:00:28.855 --> 00:00:32.575
我们可以用散点图来研究这一关系

00:00:32.575 --> 00:00:37.000
创建散点图的方法之一是使用 Matplotlib 的 scatter 函数

00:00:37.000 --> 00:00:40.359
函数参数的设定和之前相似

00:00:40.359 --> 00:00:44.070
但现在要同时指明 x 和 y 轴的变量

00:00:44.070 --> 00:00:47.340
设参数 data 为 fuel_econ

00:00:47.340 --> 00:00:49.905
设 x 为 displ 设 y 为 comb

00:00:49.905 --> 00:00:52.454
即综合燃油效率 (combined fuel efficiency)

00:00:52.454 --> 00:00:55.049
我还要用函数 xlabel

00:00:55.049 --> 00:00:59.424
和 ylabel 来创建标签 表明各轴上的变量分别是什么

00:00:59.424 --> 00:01:02.519
从图中可看出

00:01:02.520 --> 00:01:05.189
发动机排量大小和燃油效率基本是负相关的

00:01:05.189 --> 00:01:07.259
但小排量的变化幅度

00:01:07.260 --> 00:01:10.275
要比大排量大

00:01:10.275 --> 00:01:15.390
创建散点图还可以用 seaborn 的 regplot 函数

00:01:15.390 --> 00:01:17.489
该函数创建出来的散点图

00:01:17.489 --> 00:01:20.774
还带有数据的拟合回归线

00:01:20.775 --> 00:01:26.505
使用该函数时 我们只需将 plt.scatter 改为 sb.regplot 即可

00:01:26.504 --> 00:01:30.064
观察这根回归线 不难发现小排量、高燃效的汽车

00:01:30.064 --> 00:01:33.424
拉高了线的左侧

00:01:33.424 --> 00:01:35.599
你也可以取消回归线

00:01:35.599 --> 00:01:38.219
只需将 fit_reg 设为 False 即可

00:01:38.219 --> 00:01:41.534
观察这个散点图 你可能会产生一些疑问

00:01:41.534 --> 00:01:45.494
图中排量只精确到 0.1 升

00:01:45.495 --> 00:01:47.810
而要绘制的数据实在太多了

00:01:47.810 --> 00:01:49.960
这就可能会有很多重叠的数据点

00:01:49.959 --> 00:01:54.250
导致我们无法看出变量之间的真正关系 无法看清足够的细节

00:01:54.250 --> 00:01:58.129
问题的解决办法请见下一个视频

