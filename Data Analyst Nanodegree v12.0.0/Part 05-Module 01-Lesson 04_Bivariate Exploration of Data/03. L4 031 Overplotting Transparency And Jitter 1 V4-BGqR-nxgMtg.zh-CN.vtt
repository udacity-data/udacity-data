WEBVTT
Kind: captions
Language: zh-CN

00:00:04.290 --> 00:00:07.390
在某些特定情况下你可能会发现

00:00:07.389 --> 00:00:10.214
绘制出来的散点图很难解读

00:00:10.214 --> 00:00:15.064
有时可能因为数据量太庞大 在标准散点图中绘制出来

00:00:15.064 --> 00:00:19.920
就成了细节不明的大斑点 有时可能因为数值数据是离散型的

00:00:19.920 --> 00:00:23.120
很难观察数据分布

00:00:23.120 --> 00:00:27.984
你能从这两个图中看出什么信息吗？我是不行的

00:00:27.984 --> 00:00:30.939
像这种小范围内挤着太多数据点的情况

00:00:30.940 --> 00:00:34.140
叫做数据点重叠

00:00:34.140 --> 00:00:38.409
这种情况下 抽样、透明度调整和抖动等技术

00:00:38.409 --> 00:00:41.204
可以帮助你处理散点图

00:00:41.204 --> 00:00:45.250
以更好地检测数据模式和相关性

00:00:45.259 --> 00:00:49.199
以此图为例 图中的 1 万个数据点

00:00:49.200 --> 00:00:52.885
是由两个二元正态分布生成的

00:00:52.884 --> 00:00:56.189
我们很难根据分布峰值来确定密度下降的位置

00:00:56.189 --> 00:00:59.839
和下降幅度

00:00:59.840 --> 00:01:05.030
一种解决方案是随机抽样 减少绘制的数据点

00:01:05.030 --> 00:01:07.025
比如抽样 800 个数据点

00:01:07.025 --> 00:01:11.425
数据点少了 就可以清楚地看到峰值之间的间隙了

00:01:11.424 --> 00:01:14.149
对数据点进行随机抽样

00:01:14.150 --> 00:01:17.375
并没有影响我们观察数据的总体分布

00:01:17.375 --> 00:01:19.400
另外一种解决方案

00:01:19.400 --> 00:01:21.820
我们可以仍然保留原来的一万个数据点

00:01:21.819 --> 00:01:25.704
只是修改各数据点的透明度

00:01:25.704 --> 00:01:30.185
这样每个点的颜色都会变浅 数据点重叠的区域

00:01:30.185 --> 00:01:32.715
颜色则会较深

00:01:32.715 --> 00:01:35.930
这两个颜色最深的区域数据点最多

00:01:35.930 --> 00:01:39.740
意味着这是分布的峰值

00:01:39.739 --> 00:01:43.769
因为密度高会导致颜色变深

00:01:43.769 --> 00:01:45.789
所以我们可以间接地

00:01:45.790 --> 00:01:51.185
借助颜色来增强只用位置无法突出的重点

00:01:51.185 --> 00:01:55.250
但如果其中一个变量 甚至两个变量都是离散型的呢？

00:01:55.250 --> 00:02:00.704
此时抽样方法不再适用 因为无论有多少数据点重叠 看起来都一样

00:02:00.704 --> 00:02:04.000
虽然我们可以调整透明度 根据颜色研究密度

00:02:04.000 --> 00:02:08.969
但这样会损失一些位置信息

00:02:08.969 --> 00:02:12.990
此时就是应用抖动技术的时机

00:02:12.990 --> 00:02:17.540
抖动会给各点的位置增加一点随机噪声

00:02:17.539 --> 00:02:23.125
在小范围内将值相同的多个数据点抖散

00:02:23.125 --> 00:02:28.419
只要各离散值的抖动范围不重合

00:02:28.419 --> 00:02:33.479
我们就能借助抖动方便地找出并解读数据趋势

