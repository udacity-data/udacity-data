WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.370
在接下来的视频中

00:00:02.370 --> 00:00:04.890
我们将重新采用精灵宝可梦数据集

00:00:04.889 --> 00:00:08.189
表格中最后 6 列是宝可梦的战斗统计数据 

00:00:08.189 --> 00:00:13.214
假设我们要探索这 6 个变量之间的两两关系

00:00:13.214 --> 00:00:15.839
不用再一个一个绘制散点图

00:00:15.839 --> 00:00:19.725
我们可以使用图表矩阵 一次性画出所有变量之间的关系

00:00:19.725 --> 00:00:22.755
这个可以通过 Seaborn 的 PairGrid 函数实现

00:00:22.754 --> 00:00:25.919
首先我们将数据集传入 data 参数

00:00:25.920 --> 00:00:29.220
将感兴趣的六个变量传入 vars 参数中

00:00:29.219 --> 00:00:31.229
如果没有指定 vars 参数

00:00:31.230 --> 00:00:34.770
会默认绘制出数据里的所有数值变量

00:00:34.770 --> 00:00:36.630
尽管只用了六个变量

00:00:36.630 --> 00:00:39.910
你可以看到这个图表矩阵还是很占位置的

00:00:39.909 --> 00:00:44.734
每一行代表依次表示 hp 到 special-defense 变量

00:00:44.734 --> 00:00:47.945
每列所代表的变量顺序也是一样的

00:00:47.945 --> 00:00:51.079
现在让我们给这个矩阵填入图表

00:00:51.079 --> 00:00:53.320
因为所有的变量都是数值型的

00:00:53.320 --> 00:00:55.605
所以我们在每一个单元格里放入散点图

00:00:55.604 --> 00:00:58.074
与 FacetGrid 类似 使用 map 方法

00:00:58.075 --> 00:01:00.635
添加对散点图的调用

00:01:00.634 --> 00:01:04.399
你可以看到每个单元格里 都画上了散点图

00:01:04.400 --> 00:01:06.395
包括对角线上的图形

00:01:06.394 --> 00:01:11.119
但这些对角线上的图表只是一条直线 因为这些图表的行和列是同一个变量

00:01:11.120 --> 00:01:15.650
让我们用 map_diag 方法把直方图放在对角线上

00:01:15.650 --> 00:01:21.550
并且将 map 改为 map_offdiag 将散点图画在对角线之外的单元格上

00:01:21.549 --> 00:01:23.359
让我们来看一下这个图表矩阵

00:01:23.359 --> 00:01:27.290
我们可以看到 hp 和 attack 之间、attack 和 defense 之间

00:01:27.290 --> 00:01:31.490
special-attack 和 special-defense 之间有着很强的相关性

00:01:31.489 --> 00:01:33.859
让我们再来看一下变量之间的相关系数

00:01:33.859 --> 00:01:36.679
并把它们用热图画出来

00:01:36.680 --> 00:01:39.380
corr 函数返回一个包含

00:01:39.379 --> 00:01:42.349
所选变量相互之间相关系数的矩阵

00:01:42.349 --> 00:01:46.834
把这个数据放入 heatmap 函数中就可以得到我们想要看到的热图

00:01:46.834 --> 00:01:49.369
让我们在热图中加入一些参数

00:01:49.370 --> 00:01:52.400
通过 cmap 参数修改调色板 

00:01:52.400 --> 00:01:56.120
通过 annot 参数使每个单元格显示出数值 保留两位小数

00:01:56.120 --> 00:02:00.710
看上去似乎只有 defense 和 speed 这两个变量之间是负相关的

00:02:00.709 --> 00:02:02.375
因为它约等于零

00:02:02.375 --> 00:02:06.935
所以我们可以设置 vmin 参数将 colormap的下限值设为 0 

00:02:06.935 --> 00:02:11.240
这个相关系数热图符合我们从图表矩阵里得到的结果

00:02:11.240 --> 00:02:15.475
我们看到 hp 和 attack 之间、attack 和 defense 之间

00:02:15.474 --> 00:02:19.125
以及 special-attack  和 special-defense 的相关性很高

00:02:19.125 --> 00:02:21.620
但是 defense 和 special-defense 之间的相关性似乎

00:02:21.620 --> 00:02:24.025
出乎意料得高

00:02:24.025 --> 00:02:25.930
重新再去看图表矩阵

00:02:25.930 --> 00:02:29.525
有可能右上方的异常值把整体统计数据拉高了

00:02:29.525 --> 00:02:33.789
这个点值得进一步深入调查

