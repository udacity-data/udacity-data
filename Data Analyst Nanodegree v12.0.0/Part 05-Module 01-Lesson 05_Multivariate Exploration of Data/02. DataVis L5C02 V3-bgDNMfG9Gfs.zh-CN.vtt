WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.180
在这一章节的课程中

00:00:03.180 --> 00:00:06.595
我们将继续使用之前课上用到的两个数据集

00:00:06.594 --> 00:00:10.859
一个是精灵宝可梦系列游戏里的角色数据

00:00:10.859 --> 00:00:15.199
另一个是 2013 年到 2018 年生产的汽车燃油效率

00:00:15.199 --> 00:00:17.704
我们从这个汽车数据集开始

00:00:17.704 --> 00:00:20.399
在这个视频中 我们来看一下如何在散点图中

00:00:20.399 --> 00:00:23.824
使用形状和大小编码第三个变量

00:00:23.824 --> 00:00:25.285
在上一章节

00:00:25.285 --> 00:00:28.829
我们创建了有关燃油里程和发动机排量大小的散点图

00:00:28.829 --> 00:00:31.799
我随机选取了 200 辆车的子数据集

00:00:31.800 --> 00:00:35.990
来避免图表的重叠 并且添加了一些水平抖动

00:00:35.990 --> 00:00:39.410
在燃油效率和发动机大小方面

00:00:39.409 --> 00:00:42.884
自动档和手动档的车辆之间存在差异吗？

00:00:42.884 --> 00:00:45.614
因为变速器类型属于分类变量

00:00:45.615 --> 00:00:47.829
形状是一个比较好的编码方式

00:00:47.829 --> 00:00:50.144
不管在 regplot 还是 scatter 函数里

00:00:50.145 --> 00:00:53.965
都可以用 marker 参数来设定数据点的形状

00:00:53.965 --> 00:00:56.095
可惜的是 在两个函数里

00:00:56.094 --> 00:00:58.554
该参数都只能是单个字符串

00:00:58.554 --> 00:01:03.784
这意味着 我们需要创建一个循环来逐一绘制每个类别的数据

00:01:03.784 --> 00:01:05.269
首先 我创建了

00:01:05.269 --> 00:01:10.515
一个列表组成的列表 ttype_markers 其中每个列表包含类别及其对应的符号

00:01:10.515 --> 00:01:13.879
自动档将由 o 代表的圆圈表示

00:01:13.879 --> 00:01:19.129
手动挡将由 ^ 代表的三角型来表示

00:01:19.129 --> 00:01:22.459
我用了一个列表的列表 而不是字典

00:01:22.459 --> 00:01:26.194
这样我就可以更好地控制绘制的顺序了

00:01:26.194 --> 00:01:29.309
现在我将遍历列表里的每一个元素

00:01:29.310 --> 00:01:32.269
我用 ttype 变量来筛选符合该变速器类型的数据

00:01:32.269 --> 00:01:36.689
然后在 regplot 函数中设置 marker 参数

00:01:38.680 --> 00:01:41.390
结果是这张图

00:01:41.390 --> 00:01:44.349
值得一提的是 重复调用 regplot 函数

00:01:44.349 --> 00:01:47.109
每一次都将绘制在同一个坐标系中

00:01:47.109 --> 00:01:50.215
并且每一次调用会自动设置为不同的颜色

00:01:50.215 --> 00:01:54.200
这样刚好 因为两种变速器类别的数据有很多重叠

00:01:54.200 --> 00:01:57.880
图中可以看到两种类别车辆最大的不同是

00:01:57.879 --> 00:02:01.479
燃油效率最高的汽车都是自动档的

00:02:01.480 --> 00:02:05.655
我们可以使用 Matplotlib 里的 legend 函数绘制图例

00:02:05.655 --> 00:02:07.510
作为函数的参数

00:02:07.510 --> 00:02:10.000
我们传入一个包含类别名称的列表

00:02:10.000 --> 00:02:12.800
与调用 regplot 函数的顺序一致

00:02:13.090 --> 00:02:15.610
除了变速器类型

00:02:15.610 --> 00:02:19.340
如果我们想要把二氧化碳排放量作为第三个变量呢？

00:02:19.340 --> 00:02:21.528
因为该变量是数值类型的

00:02:21.528 --> 00:02:24.405
我们可以使用大小作为编码类型

00:02:24.405 --> 00:02:26.610
在 Matplotlib 的 scatter 函数中

00:02:26.610 --> 00:02:29.065
我们可以用 s 这个参数来设置大小

00:02:29.064 --> 00:02:32.960
把它设为我们想要可视化的列名 co2

00:02:32.960 --> 00:02:35.719
但是 因为我用的是 regplot

00:02:35.719 --> 00:02:38.569
我需要将该参数写入 scatter_kws

00:02:38.569 --> 00:02:41.209
这个 scatter 的关键字参数字典中

00:02:41.210 --> 00:02:44.510
而且要将其修改为 Series 数据 而不仅仅是列名

00:02:44.509 --> 00:02:46.879
这里的趋势似乎很明显了

00:02:46.879 --> 00:02:50.960
但是让我们再缩小下圆圈的大小 这样我们能够看到更多的数据点

00:02:50.960 --> 00:02:53.490
从图上似乎能得出这样的结论：随着发动机大小的增大

00:02:53.490 --> 00:02:55.930
二氧化碳的排放量也在增大

00:02:55.930 --> 00:03:00.069
而且 即使汽车具有同等大小的发动机 其燃油效率越低 

00:03:00.069 --> 00:03:02.039
其二氧化碳的排放量也越大

00:03:02.039 --> 00:03:06.669
Matplotlib 会自动将变量的数值大小映射到点的面积上

00:03:06.669 --> 00:03:09.604
但说到图例 我们这里遇到一个小的问题

00:03:09.604 --> 00:03:11.829
我们这里只画出了一个 Series 数据

00:03:11.830 --> 00:03:14.225
所以图例只给了我们一个单独的点 

00:03:14.224 --> 00:03:16.009
要解决这个问题 我们可以添加

00:03:16.009 --> 00:03:19.174
虚拟散点图序列来构建图例

00:03:19.175 --> 00:03:21.900
当我们调用 Matplotlib 和 Seaborn 里的绘图函数

00:03:21.900 --> 00:03:24.034
实际上会返回图表对象

00:03:24.034 --> 00:03:27.259
目前为止 我们并没有存储这些对象 因为并不需要

00:03:27.259 --> 00:03:29.349
但现在 我们就需要用到它了

00:03:29.349 --> 00:03:31.280
让我们创建一个循环 

00:03:31.280 --> 00:03:35.344
遍历三个我们想要用来作为co2 参考图例的值

00:03:35.344 --> 00:03:39.574
在循环里面 使用 scatter 函数来创建 scatter 图表对象

00:03:39.574 --> 00:03:42.134
并传入想要的大小

00:03:42.134 --> 00:03:45.620
前两个关于 x 和 y 位置的参数是空列表

00:03:45.620 --> 00:03:47.525
所以它们实际没有绘制任何点

00:03:47.525 --> 00:03:52.435
我还添加了一个颜色参数 使得所有的 Series 数据都使用同一个颜色

00:03:52.435 --> 00:03:57.224
最后 我们将设置一个列表来存储所有的虚拟散点图对象

00:03:57.224 --> 00:03:58.879
在 legend 函数中

00:03:58.879 --> 00:04:00.169
如果只传入一个参数

00:04:00.169 --> 00:04:03.469
那这个参数代表的就每一类别的标签

00:04:03.469 --> 00:04:06.710
如果传入两个参数 第一个参数代表的是图例要代表的对象列表

00:04:06.710 --> 00:04:10.655
第二个则是名称标签的列表

00:04:10.655 --> 00:04:15.569
我还使用了 title 这个参数 給图例的数值标明单位

