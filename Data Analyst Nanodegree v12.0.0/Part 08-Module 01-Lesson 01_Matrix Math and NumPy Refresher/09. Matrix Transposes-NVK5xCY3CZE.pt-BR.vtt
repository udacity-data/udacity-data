WEBVTT
Kind: captions
Language: pt-BR

00:00:00.003 --> 00:00:01.921
Agora que você sabe
os formatos da matriz

00:00:01.954 --> 00:00:03.644
e como eles afetam
seus cálculos,

00:00:03.677 --> 00:00:05.935
há algo importante
que você precisa saber:

00:00:05.968 --> 00:00:07.818
a matriz transposta.

00:00:07.851 --> 00:00:11.624
A transposta de uma matriz
tem os mesmos valores da original,

00:00:11.657 --> 00:00:14.144
mas as linhas e as colunas
são trocadas.

00:00:14.177 --> 00:00:16.398
Então a transposta
desta matriz quadrada

00:00:16.431 --> 00:00:17.708
é esta matriz.

00:00:17.741 --> 00:00:22.014
Veja que os valores da 1ª linha
da matriz original, 1, 2 e 3,

00:00:22.047 --> 00:00:25.170
agora são os valores da 1ª coluna
na transposta.

00:00:25.203 --> 00:00:28.257
O mesmo acontece na 2ª
e na 3ª linhas da matriz original,

00:00:28.290 --> 00:00:30.936
que agora são a 2ª e a 3ª colunas
na transposta.

00:00:30.969 --> 00:00:33.215
Isso também vale
para matrizes não quadradas.

00:00:33.248 --> 00:00:35.649
A transposta desta matriz
é esta.

00:00:35.682 --> 00:00:39.627
Novamente, as linhas na original
agora são as colunas na transposta.

00:00:39.660 --> 00:00:41.768
Estamos só trocando
as linhas e as colunas,

00:00:41.801 --> 00:00:44.141
mas a transposta tem
duas propriedades relevantes.

00:00:44.174 --> 00:00:47.482
Primeiro, se a matriz original
não for uma matriz quadrada,

00:00:47.515 --> 00:00:51.523
a transposta terá um novo formato,
com a ordem da original trocada.

00:00:51.556 --> 00:00:55.625
Então a transposta da matriz 2x4
é a matriz 4x2.

00:00:55.658 --> 00:00:57.602
Isso pode ser útil,
por exemplo,

00:00:57.635 --> 00:00:59.773
quando você precisa
multiplicar matrizes

00:00:59.806 --> 00:01:02.485
que tenham formatos
incompatíveis.

00:01:02.518 --> 00:01:05.732
A segunda coisa importante é
que os dados contidos na transposta

00:01:05.765 --> 00:01:08.615
não estão dispostos do mesmo modo
como na matriz original.

00:01:08.648 --> 00:01:11.056
Se a matriz original representar
linhas de dados,

00:01:11.089 --> 00:01:13.595
a transposta
vai representar colunas.

00:01:13.628 --> 00:01:15.588
E se a original
for disposta em colunas,

00:01:15.621 --> 00:01:17.828
a transposta
será disposta em linhas.

00:01:17.861 --> 00:01:19.368
Se isso parece
muito abstrato,

00:01:19.401 --> 00:01:23.844
veja um exemplo do que são dados
dispostos em linhas ou colunas.

00:01:23.877 --> 00:01:25.677
Imagine uma matriz
que armazene

00:01:25.710 --> 00:01:28.187
a altura, o peso e a idade
de 3 pessoas.

00:01:28.220 --> 00:01:31.530
Podemos armazenar os dados
de cada pessoa em uma única linha

00:01:31.563 --> 00:01:33.221
ou em uma única coluna.

00:01:33.254 --> 00:01:34.362
Se escolhermos linhas,

00:01:34.395 --> 00:01:37.001
cada coluna vai representar
um atributo específico

00:01:37.034 --> 00:01:39.994
de todas as pessoas,
como altura, peso ou idade.

00:01:40.027 --> 00:01:42.639
Mas, se guardarmos os dados
de cada pessoa em colunas,

00:01:42.672 --> 00:01:46.073
cada linha conterá todos os valores
de um atributo específico.

00:01:46.106 --> 00:01:49.027
Agora imagine que estamos
olhando para a transposta.

00:01:49.060 --> 00:01:52.140
O que era linha virou coluna,
e vice-versa.

00:01:52.173 --> 00:01:53.962
Já mencionei isso várias vezes.

00:01:53.995 --> 00:01:57.484
Mas, numa multiplicação, você lida
com as linhas da matriz à esquerda

00:01:57.517 --> 00:01:59.054
e as colunas à direita.

00:01:59.087 --> 00:02:01.576
É por isso que esta discussão
é tão importante.

00:02:01.609 --> 00:02:02.987
Em um problema matemático,

00:02:03.020 --> 00:02:05.455
trabalhar com todos os atributos
de uma pessoa

00:02:05.488 --> 00:02:08.069
é diferente de trabalhar
com um único atributo

00:02:08.102 --> 00:02:09.424
de todas as pessoas.

00:02:09.457 --> 00:02:12.864
E, normalmente,
você só quer uma dessas opções.

00:02:12.897 --> 00:02:16.111
Essa questão vai surgir quando
você construir suas redes neurais.

00:02:16.144 --> 00:02:19.040
Às vezes algumas operações
matriciais não vão dar certo

00:02:19.073 --> 00:02:21.131
porque os formatos
não se alinham direito.

00:02:21.164 --> 00:02:24.289
Mas você notará que daria certo
se usasse uma transposta.

00:02:24.322 --> 00:02:28.582
Suponha que você queira multiplicar
estas matrizes, 3x2 e 4x2.

00:02:28.615 --> 00:02:30.421
Nas aulas
de multiplicação matricial,

00:02:30.454 --> 00:02:33.573
você aprendeu que não dá certo
porque as ordens são incompatíveis.

00:02:33.606 --> 00:02:36.521
Lembre-se: estes dois números
de dentro têm que ser iguais,

00:02:36.554 --> 00:02:38.767
mas aqui temos um 2 e um 4.

00:02:38.800 --> 00:02:42.070
Mas se você pegar a transposta
da matriz 4x2,

00:02:42.103 --> 00:02:43.808
você terá a matriz 2x4,

00:02:43.841 --> 00:02:47.503
e aí, sim, você poderia multiplicar
as matrizes 3x2 e 2x4.

00:02:47.536 --> 00:02:49.943
Ou melhor, vamos voltar
e considerar outra opção.

00:02:49.976 --> 00:02:52.664
Você poderia pegar a transposta
de uma matriz 3x2

00:02:52.697 --> 00:02:54.968
para obter uma matriz 2x3.

00:02:55.001 --> 00:02:57.064
Depois é só trocar as ordens

00:02:57.097 --> 00:03:00.412
e multiplicar a matriz 4x2
pela matriz 2x3.

00:03:00.445 --> 00:03:02.924
Matematicamente,
as duas soluções funcionam.

00:03:02.957 --> 00:03:05.864
Mas a questão é: quando estamos
numa situação dessas,

00:03:05.897 --> 00:03:08.817
será que devemos mesmo
fazer uma dessas duas coisas?

00:03:08.850 --> 00:03:10.831
A resposta é: às vezes.

00:03:10.864 --> 00:03:12.435
Só precisamos saber quando.

00:03:12.468 --> 00:03:15.129
Vamos voltar e tentar multiplicar
estas duas matrizes,

00:03:15.162 --> 00:03:16.969
uma 3x2 e uma 4x2.

00:03:17.002 --> 00:03:19.819
Já mostramos como fazer
para essa multiplicação dar certo

00:03:19.852 --> 00:03:22.020
de dois jeitos diferentes,
usando transpostas.

00:03:22.053 --> 00:03:24.560
Mas vamos ver quando isso
é ou não é uma boa ideia.

00:03:24.593 --> 00:03:27.669
Se as duas matrizes
contêm dados dispostos em linhas,

00:03:27.702 --> 00:03:29.693
ambas as soluções
vão funcionar.

00:03:29.726 --> 00:03:32.200
Se usarmos a transposta
da segunda matriz,

00:03:32.233 --> 00:03:34.201
obtemos
linhas vezes colunas,

00:03:34.234 --> 00:03:37.142
e é exatamente isso que queremos
para multiplicar matrizes.

00:03:37.175 --> 00:03:39.772
A resposta vai ser
esta matriz 3x4.

00:03:39.805 --> 00:03:40.947
A segunda opção,

00:03:40.980 --> 00:03:44.391
em que pegamos a transposta
da 1ª matriz e trocamos as ordens,

00:03:44.424 --> 00:03:46.885
também nos dá
linhas vezes colunas.

00:03:46.918 --> 00:03:50.491
Desta vez a resposta será
esta matriz 4x3. Isso é ótimo.

00:03:50.524 --> 00:03:53.070
Se as duas matrizes originais
têm dados em linhas,

00:03:53.103 --> 00:03:54.465
é seguro usar a transposta.

00:03:54.498 --> 00:03:56.053
E talvez
você não tenha notado,

00:03:56.086 --> 00:03:58.213
mas as respostas
das duas multiplicações

00:03:58.246 --> 00:04:00.391
são transpostas entre si.

00:04:00.424 --> 00:04:02.926
Então dos dois jeitos
você obtém os mesmos números,

00:04:02.959 --> 00:04:04.413
com formatos diferentes.

00:04:04.446 --> 00:04:06.282
Então você pode escolher
a melhor opção

00:04:06.315 --> 00:04:08.515
com base na ordem que quer
no seu resultado.

00:04:08.548 --> 00:04:11.575
Tudo bem, isso deu certo,
mas e se as matrizes originais

00:04:11.608 --> 00:04:13.784
tiverem dados dispostos
em colunas?

00:04:13.817 --> 00:04:16.084
Neste caso, nenhuma das opções
vai funcionar.

00:04:16.117 --> 00:04:17.363
Vamos ver por que não.

00:04:17.396 --> 00:04:19.631
Se usarmos a transposta
da segunda matriz,

00:04:19.664 --> 00:04:22.620
combinaremos os elementos errados
com os produtos escalares.

00:04:22.653 --> 00:04:25.006
Veja, se olharmos
para esta linha e esta coluna,

00:04:25.039 --> 00:04:27.873
acabamos multiplicando
o 1 e o 0,

00:04:27.906 --> 00:04:31.159
que são dos primeiros itens de dados
da matriz original.

00:04:31.192 --> 00:04:35.546
Mas, depois, nós os adicionaríamos
ao produto do 2 e do 3,

00:04:35.579 --> 00:04:38.343
que são valores
dos segundos itens de dados.

00:04:38.376 --> 00:04:41.734
Então cada escalar que você pegar
ao multiplicar essas duas matrizes

00:04:41.767 --> 00:04:44.676
vai acabar combinando valores
de todos os itens de dados,

00:04:44.709 --> 00:04:47.236
em vez de combinar elementos
de itens relacionados,

00:04:47.269 --> 00:04:49.066
como era a nossa intenção.

00:04:49.099 --> 00:04:50.797
É como eu descrevi antes:

00:04:50.830 --> 00:04:53.821
talvez agora estejamos vendo
a altura de todas as pessoas,

00:04:53.854 --> 00:04:56.935
em vez de todos os dados
de uma única pessoa.

00:04:56.968 --> 00:04:59.431
Quer dizer que usar a transposta
de uma matriz 4x2

00:04:59.464 --> 00:05:01.169
não trará a resposta
que queremos.

00:05:01.202 --> 00:05:03.001
Mas e a segunda opção?

00:05:03.034 --> 00:05:06.142
Aqui, usamos a transposta
da 1ª matriz e as trocamos.

00:05:06.175 --> 00:05:08.278
Mas nos deparamos
com o mesmo problema:

00:05:08.311 --> 00:05:10.164
dados dispostos
em colunas à esquerda

00:05:10.197 --> 00:05:11.572
e em linhas à direita.

00:05:11.605 --> 00:05:15.345
E se a matriz original 3x2
fosse disposta em linhas

00:05:15.378 --> 00:05:17.856
e a matriz 4x2
fosse disposta em colunas?

00:05:17.889 --> 00:05:19.003
Isso faz sentido,

00:05:19.036 --> 00:05:21.956
já que tentávamos fazer
essa multiplicação desde o início.

00:05:21.989 --> 00:05:24.857
Infelizmente, nenhuma das soluções
funciona aqui tampouco.

00:05:24.905 --> 00:05:27.117
A primeira resultará
em linhas vezes linhas,

00:05:27.150 --> 00:05:29.850
e a segunda resultará
em colunas vezes colunas.

00:05:29.883 --> 00:05:31.417
E a possibilidade final,

00:05:31.450 --> 00:05:35.158
em que a matriz original 3x2
era disposta em colunas,

00:05:35.191 --> 00:05:37.199
e a matriz 4x2
era disposta em linhas?

00:05:37.232 --> 00:05:39.899
Assim teremos
colunas vezes colunas

00:05:39.932 --> 00:05:41.616
ou linhas vezes linhas.

00:05:41.649 --> 00:05:44.215
De todo modo, não teremos
a resposta que queremos.

00:05:44.248 --> 00:05:46.759
Então só podemos usar
uma transposta com segurança

00:05:46.792 --> 00:05:48.347
numa multiplicação matricial

00:05:48.380 --> 00:05:50.696
quando os dados
das duas matrizes originais

00:05:50.729 --> 00:05:52.260
são dispostos em linhas.

00:05:52.293 --> 00:05:55.658
Não estou dizendo que você sempre
deve armazenar dados em linhas.

00:05:55.691 --> 00:05:57.884
Às vezes é melhor
armazená-los em colunas.

00:05:57.917 --> 00:06:00.074
Mas lembre-se:
se você estiver numa situação

00:06:00.107 --> 00:06:03.275
em que usar uma transposta
vai ajudar a resolver um problema -

00:06:03.308 --> 00:06:05.518
e você certamente
passará por essa situação -

00:06:05.551 --> 00:06:09.016
você precisa parar e pensar bem
no que há dentro de cada matriz.

00:06:09.049 --> 00:06:12.471
Verifique quais linhas e colunas
terão que interagir entre si.

00:06:12.504 --> 00:06:16.194
E então só use transpostas
se elas não bagunçarem nada disso.

