WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:03.819
دعونا نستكشف طرقًا لإصلاح بعض المشكلات الشائعة في
البيانات.

00:00:03.819 --> 00:00:07.344
هنا مجموعة بيانات اللعبة التي أنشأتها لهذا الدرس.

00:00:07.344 --> 00:00:09.240
إنها تتضمن 11 مثيلًا

00:00:09.240 --> 00:00:15.378
لتفاعلات منتج المستخدم التي تسجل ما إذا كان المنتج
قد أعجب المستخدم،

00:00:15.378 --> 00:00:17.565
ومدة مشاهدته للمنتج،

00:00:17.565 --> 00:00:21.214
وما إذا كان ذلك عبر موقع ويب أو تطبيق هاتف محمول،

00:00:21.214 --> 00:00:24.890
ووقت بدء مشاهدة المنتج.

00:00:24.890 --> 00:00:30.524
أوقف الفيديو مؤقتًا وشاهد ما إذا كان يمكنك اكتشاف
أي مشكلات محتملة في هذه البيانات.

00:00:30.524 --> 00:00:37.125
دعونا نضبط ثلاث مشكلات في مجموعة البيانات هذه، وهي
منتشرة في العالم الحقيقي.

00:00:37.125 --> 00:00:42.465
تتمثل الأولى في البيانات المفقودة التي نجدها في عمود
view_duration.

00:00:42.465 --> 00:00:46.734
يوجد 11 إدخال أو صف بصورة إجمالية في مجموعة البيانات
هذه،

00:00:46.734 --> 00:00:50.759
ولكن هناك 8 منها بقيم غير خالية في view_duration.

00:00:50.759 --> 00:00:55.125
وهذا يعني أن هناك ثلاث قيم خالية يمكننا رؤيتها
هنا.

00:00:55.125 --> 00:00:57.323
هذه مجموعة بيانات لعبة صغيرة،

00:00:57.323 --> 00:00:59.640
ومن ثم يمكننا رؤية القيم الخالية هنا.

00:00:59.640 --> 00:01:04.795
ولكن بشكل طبيعي، يمكنك التحقق من هذه القيم لمجموعات
البيانات الأكبر.

00:01:04.795 --> 00:01:10.200
تتمثل المشكلة الثانية التي سنعالجها في التكرارات
التي نجدها في الصفين ثلاثة وأربعة.

00:01:10.200 --> 00:01:15.555
مرة أخرى، نلاحظ هذه المشكلة فقط هنا لأن هذه عبارة
عن مجموعة بيانات لعبة صغيرة.

00:01:15.555 --> 00:01:19.595
سأوضح لكم طريقة أفضل للبحث عن التكرارات بعد قليل.

00:01:19.594 --> 00:01:22.804
أما المشكلة الثالثة فهي أنواع البيانات غير
الصحيحة.

00:01:22.805 --> 00:01:27.810
هنا، يتم تمثيل الطابع الزمني كسلسلة حيث يجب أن يتم

00:01:27.810 --> 00:01:30.579
تمثيلها على نحو مثالي ككائن datetime.

00:01:30.579 --> 00:01:33.299
تذكر، إنه يقوك كائن بدلًا من سلسلة هنا لأن

00:01:33.299 --> 00:01:37.534
pandas تخزن المؤشرات من خلال السلاسل بدلًا من السلاسل
نفسها.

00:01:37.534 --> 00:01:42.215
حسنًا، دعونا نبدأ بالمشكلة الأولى، وهي البيانات
المفقودة.

00:01:42.215 --> 00:01:45.880
البيانات المفقودة عبارة عن مشكلة تجب معالجتها بشكل
مختلف اعتمادًا على

00:01:45.879 --> 00:01:48.789
عدة عوامل مثل سبب فقدان هذه القيم

00:01:48.790 --> 00:01:52.775
وما إذا كانت الأحداث تبدو عشوائية.

00:01:52.775 --> 00:01:56.140
من طرق التعامل معها هي نسبتها إلى المتوسط.

00:01:56.140 --> 00:02:00.640
يمكنك القيام بذلك بسرعة وكفاءة من خلال دالة مريحة
من pandas.

00:02:00.640 --> 00:02:05.114
أولًا، لنحصل على متوسط العمود view_duration.

00:02:05.114 --> 00:02:10.079
الآن، دعونا نستخدم دالة pandas' fillna لملء القيم
الخالية بهذا المتوسط.

00:02:10.080 --> 00:02:12.697
ألق نظرة على إطار البيانات الآن.

00:02:12.697 --> 00:02:14.375
هل هذا يصلح المشكلة؟

00:02:14.375 --> 00:02:17.657
بدلًا من إجراء تغييرات على العمود الأصلي،

00:02:17.657 --> 00:02:22.215
فقد أعاد بالفعل عمودًا جديدًا بالتغييرات التي لم
نخزنها في أي مكان.

00:02:22.215 --> 00:02:23.676
للاحتفاظ بالتغييرات،

00:02:23.675 --> 00:02:27.789
تأكد من تعيينها إلى الأصل مثل هذا.

00:02:27.789 --> 00:02:30.118
بدلًا من ذلك، يمكنك استخدام معلمة تسمى

00:02:30.118 --> 00:02:34.990
inplace لإجراء التغييرات، في مكانها الصحيح.

00:02:34.990 --> 00:02:37.990
رائع. لقد أصلحنا فقط مشكلة البيانات المفقودة
لدينا.

00:02:37.990 --> 00:02:41.625
بعد ذلك، دعونا نتعامل مع مشكلة البيانات المكررة.

00:02:41.625 --> 00:02:44.824
هناك العديد من الأسباب التي قد تؤدي في النهاية إلى
تكرار البيانات،

00:02:44.824 --> 00:02:48.459
مثل مصادر البيانات المدمجة، أو الخطأ البشري.

00:02:48.460 --> 00:02:51.020
هذا سيناريو بسيط يحتوي على صفين وثلاثة

00:02:51.020 --> 00:02:53.564
وأربعة، متطابقة.

00:02:53.564 --> 00:02:57.294
تعد مجموعة بيانات اللعبة هذه صغيرة بما بقدر كافٍ
حتى نتمكن من العد بشكل مرئي.

00:02:57.294 --> 00:02:58.652
بالنسبة لمجموعة البيانات الأكبر،

00:02:58.652 --> 00:03:02.620
يمكنك استخدام الدالة المكررة لمعرفة الصفوف
المكررة.

00:03:02.620 --> 00:03:07.194
بشكل افتراضي، يؤدي هذا إلى التكرار كصحيح باستثناء
المثيل الأول.

00:03:07.194 --> 00:03:12.129
ويعد الصف مكررًا فقط إذا كانت القيم في جميع الأعمدة
متطابقة.

00:03:12.129 --> 00:03:15.924
يمكنك تغيير كل من هذه مع معلمات مختلفة.

00:03:15.925 --> 00:03:17.760
بالنسبة لمجموعة البيانات الأكبر،

00:03:17.759 --> 00:03:19.739
من المحتمل أن تكون أكثر فائدة للحصول على

00:03:19.740 --> 00:03:22.450
عدد التكرارات في مجموعة البيانات مثل هذا.

00:03:22.449 --> 00:03:27.179
لإسقاط التكرارات، يمكننا استخدام دالة تكرار pandas'
drop.

00:03:27.180 --> 00:03:29.969
مرة أخرى، يتعين علينا استخدام المعلمة inplace أو
تعيين

00:03:29.969 --> 00:03:33.444
الإخراج إلى إطار البيانات الأصلية عند استخدام هذه
الدالة.

00:03:33.444 --> 00:03:35.219
يمكنك أن ترى، لقد أسقطنا الصف الرابع،

00:03:35.219 --> 00:03:37.520
الصف الذي تم وضع علامة عليه كمكرر.

00:03:37.520 --> 00:03:41.844
الآن، كان هذا وضعًا بسيطًا حيث كان الصف بأكمله
متطابقًا.

00:03:41.844 --> 00:03:46.090
يمكنك تخيل سيناريوهات بيانات متكررة أكثر تعقيدًا
بعض الشيء.

00:03:46.090 --> 00:03:50.430
على سبيل المثال، لنفترض أن لدينا بيانات حول المرضى
من المستشفى.

00:03:50.430 --> 00:03:53.939
ما الذي يحدث عندما تصادف صفين باستخدام نفس معرف

00:03:53.939 --> 00:03:59.099
المريض ولكن بيانات مختلفة عن نتائج الفحص الطبي؟ هل
تجمعها؟

00:03:59.099 --> 00:04:01.489
هل تحافظ فقط على الأخير؟

00:04:01.489 --> 00:04:05.034
هذا هو الوضع الذي يجب أن تحقق فيه أكثر.

00:04:05.034 --> 00:04:07.719
بالنسبة لهذا السيناريو، من المرجح أن تحدد

00:04:07.719 --> 00:04:11.544
التكرارات فقط استنادًا إلى العمود الذي يسجل معرف
المريض.

00:04:11.544 --> 00:04:18.298
يمكنك استخدام معلمة فرعية في الدوال المكررة ودوال
الإسقاط المكرر لإجراء ذلك.

00:04:18.298 --> 00:04:22.259
أخيرًا، دعونا نتناول المشكلة الأخيرة، وهي أنواع
البيانات غير الصحيحة.

00:04:22.259 --> 00:04:27.224
أنواع البيانات غير الصحيحة هي أيضا مشكلة كثيرًا ما
يواجهها محللو البيانات.

00:04:27.225 --> 00:04:32.210
في هذه الحالة، يتم تمثيل الطوابع الزمنية كسلاسل
بدلاً من datetimes.

00:04:32.209 --> 00:04:36.805
هذه ليست مشكلة كبيرة ولكن datetimes أكثر ملاءمة
للعمل معها.

00:04:36.805 --> 00:04:41.040
إذا كنت ترغب في استخراج معلومات محددة منها أو تصفيتها
بسهولة أكبر.

00:04:41.040 --> 00:04:48.015
دعونا نستخدم دالةto_datetime من pandas لتحويل هذا
العمود إلى datetime.

00:04:48.014 --> 00:04:52.129
الآن، يمكننا أن نرى أن الطابع الزمني يتم تمثيله في
صورة datetime.

00:04:52.129 --> 00:04:56.675
بالمناسبة، حتى إذا قمت بحفظ هذا إلى ملف CSV بعد
إجراء هذا التغيير،

00:04:56.675 --> 00:05:00.975
فستستمر قراءته كسلسلة بشكل افتراضي في المرة التالية
التي تقوم فيها بفتحه.

00:05:00.975 --> 00:05:02.990
يجب عليك تحويلها مرة أخرى بعد فتح

00:05:02.990 --> 00:05:08.439
ملف CSV أو استخدام معلمات مثل parsedates في دالة
readCSV.

00:05:08.439 --> 00:05:13.050
على الرغم من ذلك، إذا تم تنسيق السلاسل التي يجب أن
تحللها بشكل غير معتاد،

00:05:13.050 --> 00:05:18.000
فإن دالة to_datetime توفر خيارات أكثر من المعلمات
في readCSV.

