WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.784
我们先来讲数据收集

00:00:01.784 --> 00:00:05.304
收集数据的方法有很多

00:00:05.304 --> 00:00:06.899
在这里你已经下载了一些可用文件

00:00:06.900 --> 00:00:09.660
收集好了数据

00:00:09.660 --> 00:00:15.160
但在其它时候 你可能需要从 API 处获取数据 或从网页中抓取数据

00:00:15.160 --> 00:00:16.859
许多公司可能本身就有数据库

00:00:16.859 --> 00:00:21.369
你能从中调出数据来解决问题

00:00:21.370 --> 00:00:25.420
你往往还需要把多种不同格式的数据整合到一起

00:00:25.420 --> 00:00:28.335
如果你觉得有些术语听着很陌生 那也没关系

00:00:28.335 --> 00:00:30.870
在数据整理课上我们会进一步解释它们

00:00:30.870 --> 00:00:34.164
详见讲师注释中的链接

00:00:34.164 --> 00:00:37.859
数据整理课程有关数据收集的部分挺不错的

00:00:37.859 --> 00:00:41.700
如果你想进一步了解如何从各渠道获取数据的话 可以看一看

00:00:41.700 --> 00:00:47.240
你的文件格式为 CSV 也就是逗号分隔值的意思

00:00:47.240 --> 00:00:49.950
CSV 文件就是文本文件

00:00:49.950 --> 00:00:53.135
从结构来看 它和电子表格类似 都是表结构

00:00:53.134 --> 00:00:56.534
但如果你在电子表格里见过 IF 语句或其它函数

00:00:56.534 --> 00:00:58.859
你就知道 这些在 CSV 里是不可能出现的

00:00:58.859 --> 00:01:00.964
CSV 仅存储原始数据

00:01:00.965 --> 00:01:05.945
另外 你可以使用代码 很轻易地手动处理 CSV 的内容

00:01:05.944 --> 00:01:08.894
不像其它文件 如 XLSX

00:01:08.894 --> 00:01:12.089
也就是微软 Excel 用的文件格式

00:01:12.090 --> 00:01:15.290
我们来看看你手头的一个文件 有关癌症数据的

00:01:15.290 --> 00:01:18.180
在 Google 表格中 文件就像这样

00:01:18.180 --> 00:01:19.860
每一行记录着肿瘤每次活检的结果

00:01:19.859 --> 00:01:22.965
每一列则记录着不同的信息

00:01:22.965 --> 00:01:25.094
如 ID、诊断、

00:01:25.094 --> 00:01:28.709
半径、质地、面积以及光滑程度

00:01:28.709 --> 00:01:32.125
如果你在纯文本编辑器中打开文件 就会是这样

00:01:32.125 --> 00:01:34.605
文本编辑器是一种程序 如 Notepad、

00:01:34.605 --> 00:01:38.549
Sublime 或 Atom 等 它能如实呈现文件的内容

00:01:38.549 --> 00:01:42.909
如你所见 文件的实际内容很简单

00:01:42.909 --> 00:01:48.479
电子表格的第一行就是 CSV 的第一行

00:01:48.480 --> 00:01:53.700
第二行就是 CSV 的第二行 以此类推

00:01:53.700 --> 00:01:57.210
每一行你都能看到第一个单元格后跟着一个逗号

00:01:57.209 --> 00:01:58.754
之后是第二个单元格

00:01:58.754 --> 00:02:01.469
再之后又是一个逗号 以此类推

00:02:01.469 --> 00:02:05.549
这样的文件结构使得 Python 等编程语言能够很轻易地处理 CSV 文件

00:02:05.549 --> 00:02:10.000
Pandas 等程序包也具备一些特定函数 能从 CSV 处加载数据

