WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.035
这是我们的假想项目 拥有不同的分支

00:00:04.035 --> 00:00:08.429
假设我们要将 master 和 sidebar 分支合并 (merge) 起来

00:00:08.429 --> 00:00:10.904
当合并发生时 它会进行提交

00:00:10.904 --> 00:00:13.769
由于 HEAD 指向 master 分支

00:00:13.769 --> 00:00:17.820
合并提交将被放置在 master 分支上 它将向前移动

00:00:17.820 --> 00:00:21.350
让我们将 sidebar 合并到 master

00:00:21.350 --> 00:00:26.005
请注意 合并提交连接两个不同的较早提交

00:00:26.004 --> 00:00:27.960
这不会影响 sidebar 分支

00:00:27.960 --> 00:00:30.630
我们可以重新切换到它 仍然对其进行提交

00:00:30.629 --> 00:00:33.625
没有问题 让我们再切换到 master 分支

00:00:33.625 --> 00:00:38.835
假设我们有一个 social-links 分支 比 master 分支靠前一点

00:00:38.835 --> 00:00:43.085
master 分支中尚不包含 social-links 提交

00:00:43.085 --> 00:00:45.719
如果我们想将这些提交纳入 master 分支

00:00:45.719 --> 00:00:48.975
就需要将 social-links 分支并入 master 分支

00:00:48.975 --> 00:00:51.120
由于 HEAD 指向 master 分支

00:00:51.119 --> 00:00:53.909
进行合并后 master 分支将会移动

00:00:53.909 --> 00:00:57.254
而且 由于 social-links 分支比 master 靠前

00:00:57.255 --> 00:01:00.929
GIT 会做一个所谓的“快进合并”

00:01:00.929 --> 00:01:04.334
此外 这些彩色线条的顺序在这里并不重要

00:01:04.334 --> 00:01:07.619
我们可以将红线移动到顶端 且不会造成任何影响

00:01:07.620 --> 00:01:10.010
这些线条只是为了连接提交而已

