WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:04.290
هذا هو الدرس الذي ستتعلمون فيه أخيرًا كيف تنفذون
تثبيتات خاصة جدًا بنا.

00:00:04.290 --> 00:00:06.374
هل يثير ذلك حماستكم؟ فأنا متحمس.

00:00:06.373 --> 00:00:10.974
لقد وضعنا أساسات تعليم أمر git init بغرض إنشاء مستودع
جديد،

00:00:10.974 --> 00:00:14.309
وأمر git clone لنسخ مستودع موجود،

00:00:14.310 --> 00:00:17.054
وأمر git log لمراجعة التثبيتات الموجودة،

00:00:17.054 --> 00:00:21.644
وجميع أوامر حالة git الهامة بغرض رؤية حالة
المستودع.

00:00:21.644 --> 00:00:25.245
كملاحظة جانبية: تذكَّروا أن تكون لديكم ورقة تحميل
تكون فيها جميع العناصر في متناول اليد

00:00:25.245 --> 00:00:29.550
أثناء هذا الدرس، فسوف نستخدم كل عنصر تقريبًا بهذه
الورقة.

00:00:29.550 --> 00:00:31.859
إذن لدينا هذه الأشياء كأساس للعمل،

00:00:31.859 --> 00:00:34.798
وسوف نبني عليها في هذا الدرس باستخدام الأوامر git
add

00:00:34.798 --> 00:00:37.213
git commit وgit diff.

00:00:37.213 --> 00:00:42.104
باستخدام git add سوف تضيفون الملفات من دليل العمل
إلى فهرس الترحيل.

00:00:42.104 --> 00:00:45.089
باستخدام git commit سوف تلتقطون الملفات من دليل
الترحيل وتحفظونها

00:00:45.090 --> 00:00:48.515
في المستودع الذي ينفذ التثبيت في الواقع.

00:00:48.515 --> 00:00:51.000
الأمر git diff لطيف حقًا، وسوف يبدو مألوفًا جدًا

00:00:51.000 --> 00:00:54.500
حقًا فقد رأينا مخرجاته من قبل بالفعل.

00:00:54.500 --> 00:00:58.655
يعرض git diff الاختلاف بين نسختين من ملف واحد،

00:00:58.655 --> 00:01:00.719
وتبدو مخرجاته كمخرجات

00:01:00.719 --> 00:01:04.379
الأمر git log-p الذي استخدمناه في الدرس السابق.

00:01:04.379 --> 00:01:07.989
لذا لدينا أمران جديدان وأمر سوف نجده مألوفًا جدًا.

00:01:07.989 --> 00:01:10.979
الآن، وقبل أن نتمكن من استخدام أوامر commit أو diff،
علينا

00:01:10.980 --> 00:01:14.020
أن نتعلم كيفية استخدام git add. إذن دعونا نقتحم هذا
الدرس.

