WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.960
So visual assessment is really simple.

00:00:02.960 --> 00:00:07.549
It's just looking at your dataset in its entirety in whatever program you like to use.

00:00:07.549 --> 00:00:09.254
For example, in Pandas here.

00:00:09.255 --> 00:00:11.395
So we've already gathered the data here.

00:00:11.394 --> 00:00:14.039
We've imported the Pandas library and read the CSV files into

00:00:14.039 --> 00:00:17.399
these data frames: patients, treatments, adverse reactions.

00:00:17.399 --> 00:00:19.179
And now we can visually assess.

00:00:19.179 --> 00:00:22.579
We can just look through each table.

00:00:28.719 --> 00:00:34.195
But because Pandas collapses rows here and scrolling in a Jupyter Notebook

00:00:34.195 --> 00:00:38.174
is finicky as I'm frustratingly displaying here,

00:00:38.174 --> 00:00:43.289
I tend to prefer to open files in a spreadsheet application like Google sheets or Excel.

00:00:43.289 --> 00:00:50.504
Here's Google sheets. Patients.CSV, treatments.CSV and adverse_reactions.CSV.

00:00:50.505 --> 00:00:52.920
But some datasets are so large that,

00:00:52.920 --> 00:00:55.335
spreadsheet programs crash when trying to open them,

00:00:55.335 --> 00:00:58.844
so your hand is forced into using something like Pandas sometimes.

00:00:58.844 --> 00:01:01.604
And again, we can just scroll through here and look for stuff.

00:01:01.604 --> 00:01:05.033
We can look for both quality and tidiness issues.

00:01:05.033 --> 00:01:08.674
So you could start by looking for things like number of columns,

00:01:08.674 --> 00:01:10.034
what the column headers are,

00:01:10.034 --> 00:01:11.439
how many rows there are,

00:01:11.439 --> 00:01:13.289
what each row represents,

00:01:13.290 --> 00:01:14.865
what other types of values in the cells,

00:01:14.864 --> 00:01:16.170
like data types, integers,

00:01:16.170 --> 00:01:17.765
strings, floating point, et cetera.

00:01:17.765 --> 00:01:20.445
But that isn't that efficient in visual assessment.

00:01:20.444 --> 00:01:23.089
That's best done using programmatic assessment.

00:01:23.090 --> 00:01:25.275
So what is visual assessment good for?

00:01:25.275 --> 00:01:27.660
Visual assessment is great for getting acquainted with

00:01:27.659 --> 00:01:30.768
the dataset and just trying to understand what it's all about,

00:01:30.768 --> 00:01:32.875
like acquiring a mental picture of it.

00:01:32.875 --> 00:01:37.049
Also, a lot of the time assessing is driven by the problem you want to solve,

00:01:37.049 --> 00:01:41.144
like checking the values in the columns and rows you plan on using in your analysis.

00:01:41.144 --> 00:01:43.829
Like hba1c_change for example.

00:01:43.829 --> 00:01:46.814
This can be effective in both visual assessment and programmatic.

00:01:46.814 --> 00:01:50.039
Non-directed visual assessment can be useful too.

00:01:50.040 --> 00:01:53.175
Just scrolling aimlessly and stumbling upon issues,

00:01:53.174 --> 00:01:56.879
then dialing in on something once you have more of a clue of what issue you've spotted.

00:01:56.879 --> 00:02:00.939
At that point you can use more pinpointed assessments whether visual or programmatic.

00:02:00.939 --> 00:02:04.164
So let's go back to the first thing that visual assessment was good for,

00:02:04.164 --> 00:02:06.730
getting acquainted with the meaning of the dataset.

00:02:06.730 --> 00:02:09.939
So let's do that now. You'll look through the patients treatments and

00:02:09.939 --> 00:02:14.159
adverse reactions table and really start to understand what each column represents.

