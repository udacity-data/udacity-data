WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:03.120
حسنًا، كان أول تقييم برمجي .value_counts في

00:00:03.120 --> 00:00:06.265
عمود العنوان واللقب في جدول المرضى.

00:00:06.264 --> 00:00:08.744
تشبه أعداد القيمة دالة رسم المدرج التكراري

00:00:08.744 --> 00:00:11.969
التي ترجع عدد كل قيمة فريدة في هذا العمود.

00:00:11.970 --> 00:00:17.995
هناك ستة أسماء عائلة لـ Doe وستة عناوين بهذا العنوان
123 Main Street.

00:00:17.995 --> 00:00:22.365
لقد أدركت وجود تكرارات يمكننا التحقق منها باستخدام
.duplicated.

00:00:22.364 --> 00:00:26.864
إذ أنها ترجع سلسلة منطقية نقوم بفهرسة المرضى فيها.

00:00:26.864 --> 00:00:31.799
أجل، يوجد عدة أشخاص باسم John Doe الذي يعيش في نفس
العنوان 123 Main Street New York،

00:00:31.800 --> 00:00:34.215
New York، الرمز البريدي 12345.

00:00:34.215 --> 00:00:36.180
ويوجد أكثر من ذلك، johndoe@email.com.

00:00:36.179 --> 00:00:39.009
نتج ذلك من البيانات الافتراضية المكررة.

00:00:39.009 --> 00:00:40.504
حسنًا، كيف حدث هذا.

00:00:40.505 --> 00:00:43.170
ربما يحدث ذلك بسبب بعض أعمال تحويل النظام.

00:00:43.170 --> 00:00:46.440
على سبيل المثال، لنفترض ما إذا كانت الشركة

00:00:46.439 --> 00:00:51.479
التي تحتوي على قاعدة البيانات هذه قد تحولت من مزود
برامج إلى آخر لتسجيل سجلات المرضى الخاصة بها.

00:00:51.479 --> 00:00:53.339
عند التحويل من نظام إلى آخر،

00:00:53.340 --> 00:00:59.250
غالبًا ما ستفقدون البيانات وتصبح بيانات John Doe
الافتراضية هذه أو بيانات تالفة حتى.

00:00:59.250 --> 00:01:01.185
هذه مشكلة شائعة جدًا في بيانات الرعاية الصحية،

00:01:01.185 --> 00:01:03.539
لا سيما أن الرعاية الصحية تُعرف بأنها

00:01:03.539 --> 00:01:06.185
ليست الأكثر تحديثًا من حيث التكنولوجيا.

00:01:06.185 --> 00:01:09.295
حسنًا ما هو البعد المناسب لجودة البيانات لذلك.

00:01:09.295 --> 00:01:11.159
هذه مشكلة التحقق.

00:01:11.159 --> 00:01:13.170
تذكر أن التحقق يعني عدم التطابق

00:01:13.170 --> 00:01:17.435
مع مخطط محدد وهذا المخطط هو مخطط العالم الواقعي هذه
المرة.

00:01:17.435 --> 00:01:19.799
من المستبعد جدًا،

00:01:19.799 --> 00:01:22.358
بل من المستحيل أن يكون هناك ستة أشخاص

00:01:22.358 --> 00:01:26.339
باسم John Doe يعيشون جميعًا في هذا العنوان 123 Main
Street in New York،

00:01:26.340 --> 00:01:27.784
New York بالبريد الإلكتروني نفسه.

00:01:27.784 --> 00:01:29.790
لا يمكن أن يحدث مثل هذا الأمر.

00:01:29.790 --> 00:01:33.135
لذا، في حين أن هذا الجدول أو قاعدة البيانات يقبل
هذه السجلات،

00:01:33.135 --> 00:01:35.890
فإنه لا ينطبق على مخطط العالم الواقعي.

00:01:35.890 --> 00:01:40.013
ربما لا يكون John Doe موجودًا، وفي الواقع ربما لا
يكون موجودًا.

00:01:40.013 --> 00:01:43.324
حسنًا لنوثق ذلك.

00:01:43.325 --> 00:01:49.540
سيكون من المهم تنظيف ذلك لأننا لن نرغب في إدخال
بيانات تالفة في مجموعة البيانات.

00:01:49.540 --> 00:01:53.035
قد يعني هذا إزالة هذه السجلات أو العثور على السجلات
التي فقدت،

00:01:53.034 --> 00:01:54.399
ولكننا سنتعامل معها لاحقًا.

00:01:54.400 --> 00:01:57.835
أما الآن سنقوم بتقييم الملاحظات وندونها فقط.

00:01:57.834 --> 00:01:59.890
في الواقع، هناك مشكلة أخرى في جودة البيانات تم الكشف
عنها

00:01:59.890 --> 00:02:04.525
بهذه الطريقة المكررة هنا وهي وجود سجل واحد مسيء هو
سجل Jake Jacobson.

00:02:04.525 --> 00:02:07.120
سترى أن هذا التكرار يحتوي بالفعل على

00:02:07.120 --> 00:02:09.969
عنوان يتكرر بدلًا من هذا السجل هنا،

00:02:09.969 --> 00:02:12.724
أو هذين العنوانين اللذين يوجد بهما إدخالات NaN.

00:02:12.724 --> 00:02:16.060
يعني ذلك أن هناك شخصان في جدول المرضى هذا لهما نفس
العنوان،

00:02:16.060 --> 00:02:18.180
648 Old Dear Lane.

00:02:18.180 --> 00:02:19.775
أتذكر حقًا أنني رأيت

00:02:19.775 --> 00:02:23.145
Jacobson في وقت سابق في التقييم البصري. لنقم بالتمرير
لأعلى مرة أخرى.

00:02:23.145 --> 00:02:25.505
حسنًا، هذا هو Jacob Jacobson،

00:02:25.504 --> 00:02:28.884
648 Old Dear Lane ويوجد أيضًا Jake Jacobson،

00:02:28.884 --> 00:02:31.679
وهو السجل الذي رأيناه في النتائج المكررة أدناه.

00:02:31.680 --> 00:02:34.905
حسنًا، يبدو أنه يوجد سجلان لشخص واحد.

00:02:34.905 --> 00:02:39.235
تم إنشاء هذا السجل الإضافي ومعرِّف المريض الإضافي
بسبب استخدام هذا اللقب.

00:02:39.235 --> 00:02:43.000
في الأساس عاد Jake Jacobson مرتين وسجل الشخص المسؤول
عن إنشاء

00:02:43.000 --> 00:02:45.430
هذه السجلات الخاصة بالمريض Jake مرة أخرى دون قصد

00:02:45.430 --> 00:02:48.140
لأنهم لم يدركوا أنه موجود بالفعل في قاعدة
البيانات.

00:02:48.139 --> 00:02:52.000
استخدام الألقاب هذه الذي ينشئ تكرارًا هو مشكلة مشهورة
جدًا

00:02:52.000 --> 00:02:54.189
في بيانات الرعاية الصحية، وهي مشكلة

00:02:54.189 --> 00:02:57.645
تكلف شركات الرعاية الصحية والمستشفيات الكثير من
المال كل عام.

00:02:57.645 --> 00:02:59.230
تجدون رابطًا مفيدًا يوضح ذلك في الملاحظات أسفل

00:02:59.229 --> 00:03:01.280
هذا الفيديو إذا أردتم معرفة المزيد.

00:03:01.280 --> 00:03:04.245
لذا إنها مشكلة التحقق حاليًا.

00:03:04.245 --> 00:03:07.205
على الرغم من أنه من السهل جدًا الارتباك لأنها مشكلة
تناسق.

00:03:07.205 --> 00:03:09.985
التناسق هو طريقتان للإشارة إلى الشيء نفسه،

00:03:09.985 --> 00:03:11.705
Jake وJacob Jacobson.

00:03:11.705 --> 00:03:14.485
وإذا كان ذلك صالحًا في مخطط الجدول المحدد،

00:03:14.485 --> 00:03:16.750
فلا يوجد معرف مريض مكرر، بمعنى

00:03:16.750 --> 00:03:18.409
أن معرف Jake Jacobson هو 30،

00:03:18.409 --> 00:03:20.949
بينما معرف Jacob هو 25.

00:03:20.949 --> 00:03:24.329
ويكون ذلك غير صالح في مخطط العالم الواقعي.

00:03:24.330 --> 00:03:27.435
فلا يشير ذلك إلى شخصين، إنما إلى شخص واحد.

00:03:27.435 --> 00:03:30.620
يوجد سجلان في جدول المرضى في حين ينبغي أن يكون هناك
سجل واحد.

00:03:30.620 --> 00:03:32.557
عند حذف أحد التكرارات،

00:03:32.557 --> 00:03:33.789
إذا حذفتم التكرار الخطأ،

00:03:33.789 --> 00:03:37.500
فسننشئ مشكلة تناسق بين عدة جداول.

00:03:37.500 --> 00:03:41.020
على سبيل المثال، إذا كان Jacob Jacobson موجودًا في
جدول العلاجات أيضًا

00:03:41.020 --> 00:03:45.130
في حين أن Jake Jacobson يكون في جدول المرضى فقط
ونحذف سجل Jacob Jacobson،

00:03:45.129 --> 00:03:48.519
فسيكون هذا تمثيلًا غير متناسق عبر الجداول،

00:03:48.520 --> 00:03:51.850
بينما لا يزال هناك سجل واحد لكل شخص واحد فقط،

00:03:51.849 --> 00:03:53.569
لذا يكون ذلك صالحًا ولكن غير متناسق.

00:03:53.569 --> 00:03:55.319
ومع ذلك، لا نتطرق إلى ذلك الآن.

00:03:55.319 --> 00:03:57.459
نتطرق الآن إلى طريقتين للإشارة إلى

00:03:57.460 --> 00:04:00.349
سجلين عندما ينبغي وجود سجل واحد فقط.

00:04:00.349 --> 00:04:02.344
هذا الجزء الأخير هو الجزء غير الصالح.

00:04:02.344 --> 00:04:05.465
يوجد حقًا عدد قليل آخر من المرض الذين تم تكرارهم
بألقاب.

00:04:05.465 --> 00:04:07.150
Sandy Taylor وSandra Taylor،

00:04:07.150 --> 00:04:09.594
تعيش في 2476 Fulton Street.

00:04:09.594 --> 00:04:14.283
ويوجد أيضًا Pat وPatrick Gersten اللذان يعيشان في
2778 North Avenue.

00:04:14.283 --> 00:04:18.029
وكالعادة نقوم بتوثيق ذلك.

00:04:20.160 --> 00:04:24.355
حسنًا، لننتقل إلى التقييم البرمجي التالي

00:04:24.355 --> 00:04:27.009
في عمود الوزن في جدول المرضى.

00:04:27.009 --> 00:04:30.089
أدنى قيمة هي 48.8 رطلًا.

00:04:30.089 --> 00:04:33.304
ويبدو ذلك غير ممكن للإنسان الحي،

00:04:33.305 --> 00:04:37.199
لذا فإنه بالتأكيد غير دقيق، وربما ليس صالحًا.

00:04:37.199 --> 00:04:39.459
لكن في الواقع، إذا فكرنا أكثر،

00:04:39.459 --> 00:04:41.774
فسنرى أنه حقًا لا يرجع إلى تلك الأمور.

00:04:41.774 --> 00:04:44.544
إنها في الواقع تكمن في مشكلة تناسق.

00:04:44.545 --> 00:04:47.035
48.8 تكون بالكيلو جرام وليس بالرطل،

00:04:47.035 --> 00:04:49.510
وهذا الأمر يمكن التحقق منه عن طريق توثيق إدخالات
الطول

00:04:49.509 --> 00:04:53.324
ومؤشر كتلة الجسم للمريض الذي يكون اسم عائلته
Zaitseva.

00:04:53.324 --> 00:04:58.435
لذا إن 2.20462 هو عامل تحويل بين الكيلوجرام والرطل

00:04:58.435 --> 00:05:04.524
و703 مضروبًا في الوزن بالرطل مقسومًا على الطول المربع
هو صيغة حساب مؤشر كتلة الجسم.

00:05:04.524 --> 00:05:07.524
بتحويل 48.8 كيلو جرامًا إلى الأرطال،

00:05:07.524 --> 00:05:10.060
فإن هذا ينتج مؤشر كتلة جسم حوالي 19.1،

00:05:10.060 --> 00:05:12.939
وهو ما إذا تحققنا من أن مؤشر كتلة الجسم الفعلي في
مجموعة البيانات

00:05:12.939 --> 00:05:16.175
هي نفس القيمة السابقة تمامًا أو قريبة منها قبل
التقريب.

00:05:16.175 --> 00:05:19.220
إذًا إن 48.8 قيمة صحيحة حقًا،

00:05:19.220 --> 00:05:21.215
إنما المشكلة تكمن في الوحدات.

00:05:21.214 --> 00:05:23.560
إنها مشكلة تناسق حقًا.

00:05:23.560 --> 00:05:25.899
ونتج هذا عن سوء فهم بسيط

00:05:25.899 --> 00:05:28.894
أو مراقبة بسيطة من قِبل أي شخص كان يدخل هذه
البيانات.

00:05:28.894 --> 00:05:31.914
مرة أخرى، عملية التنظيف مهمة جدًا لأننا نحتاج إلى
الإبلاغ عن متوسط المقاييس،

00:05:31.915 --> 00:05:33.580
مثل الوزن والطول وغير ذلك،

00:05:33.579 --> 00:05:35.969
من حيث كل ذراع معالجة للتجربة الإكلينيكية.

00:05:35.970 --> 00:05:40.095
Auralin وNovodra وهناك بعض الوثائق لهذا.

00:05:40.095 --> 00:05:43.515
حسنًا، نتطرق الآن إلى التقييم البرمجي الأخير،

00:05:43.514 --> 00:05:48.680
أساليب .isnull في أعمدة Auralin وNovodra في جدول
العلاجات.

00:05:48.680 --> 00:05:50.824
هذا الجزء الصغير من الكود يوجد في أقواس sum.

00:05:50.824 --> 00:05:53.750
يرجع ذلك سلسلة منطقية

00:05:53.750 --> 00:05:57.000
تكون صحيحة أو خطأ اعتمادًا على ما إذا كان كل إدخال
يحتوي على قيمة فارغة أم لا.

00:05:57.000 --> 00:05:59.670
يمكن جمع السلسلة المنطقية كوحدة كاملة.

00:05:59.670 --> 00:06:01.530
القيمة واحد صحيحة، والقيمة صفر خطأ.

00:06:01.529 --> 00:06:03.469
لذا تشير هذه النتيجة إلى وجود

00:06:03.470 --> 00:06:07.285
إدخالات فارغة بقيمة صفر في كلٍّ من عمودي Auralin
وNovodra.

00:06:07.285 --> 00:06:09.185
لكن لا يجب أن يكون هذا الأمر كذلك، أليس كذلك؟

00:06:09.185 --> 00:06:11.449
إذا مررنا إلى الأعلى إلى التقييم البصري للعلاج،

00:06:11.449 --> 00:06:15.769
يجب أن تكون هذه الإدخالات التي تحتوي على الشرطات
خالية أو ممثلة بذلك على الأقل.

00:06:15.769 --> 00:06:18.555
يكشف ذلك عن خطأ شائع في مجموعات البيانات المتعددة،

00:06:18.555 --> 00:06:20.095
وليس في مجموعات بيانات الرعاية الصحية فقط.

00:06:20.095 --> 00:06:22.385
سوء تمثيل القيم المفقودة مشكلة أخرى،

00:06:22.384 --> 00:06:25.250
مثل شرطة أو شرطة مائلة أو NaN

00:06:25.250 --> 00:06:27.670
أو لا شيء، على سبيل المثال، النص غير موجود.

00:06:27.670 --> 00:06:30.335
إذا مررتم إلى الأسفل إلى التقييم البرمجي،

00:06:30.334 --> 00:06:33.649
فإن أعمدة Auralin وNovodra هي كائنات أو سلاسل.

00:06:33.649 --> 00:06:37.669
ولا يتم فهم هذه الشرطات على أنها قيم فارغة أو عدم
وجود قيم.

00:06:37.670 --> 00:06:40.475
لماذا يكون ذلك مهمًا لإجراء عملية التوثيق والتنظيف
فيما بعد؟

00:06:40.475 --> 00:06:43.879
تتبع الحسابات في تطبيقات جدول البيانات وPandas

00:06:43.879 --> 00:06:48.259
طريقة معينة تعتمد على كيفية تمثيل هذه القيم
الخالية.

00:06:48.259 --> 00:06:49.579
ففي Pandas على سبيل المثال،

00:06:49.579 --> 00:06:52.664
نظرًا لأن كل عمود أو سلسلة لا يمكن أن يحتوي إلا على
نوع بيانات واحد فقط،

00:06:52.665 --> 00:06:55.010
فإننا لن نتمكن من تحويل أعمدة الجرعة هذه

00:06:55.009 --> 00:06:58.805
إلى نوع بيانات رقمي لإجراء حسابات الانحراف المعياري
والمتوسط،

00:06:58.805 --> 00:07:01.790
والتي سنحتاج إلى الإبلاغ عنها في نتائج التجارب
الإكلينيكية.

00:07:01.790 --> 00:07:03.160
لكن القيم الخالية مهمة أيضًا.

00:07:03.160 --> 00:07:06.275
مرة أخرى، إذا كنتم تعملون في تطبيق ما مثل Google
Sheets أو تطبيق جدول البيانات.

00:07:06.274 --> 00:07:09.799
تسمح تطبيقات جدول البيانات بإدخال عدة أنواع بيانات
في عمود واحد،

00:07:09.800 --> 00:07:14.090
مثل مسموح بذلك 40-50 شرطة شرطة شرطة 60.

00:07:14.089 --> 00:07:18.349
في هذه الخلية وهذه وذلك، 40-50-60 لا تزال تعامل
على

00:07:18.350 --> 00:07:23.360
أنها أعداد صحيحة بينما تُعالج هذه الخلايا التي تحتوي
على شرطة شرطة شرطة على أنها متغيرات نصية.

00:07:23.360 --> 00:07:24.830
هذه مهم جدًا لأنكم إذا أردتم

00:07:24.829 --> 00:07:26.779
حساب الانحراف المعياري لهذا العمود،

00:07:26.779 --> 00:07:30.419
هذا العمود مثلًا، دالة STDEVA.

00:07:30.420 --> 00:07:33.319
إنها تحسب الانحراف المعياري لكنها تعيّن القيم
النصية

00:07:33.319 --> 00:07:36.526
التي تُعرف أيضًا باسم شرطة شرطة شرطة على صفر.

00:07:36.526 --> 00:07:39.639
إذا كانت هذه قيم مفقودة، فستحصلون على حساب مختلف،

00:07:39.639 --> 00:07:42.627
والذي سأريكم إياه هنا في الواقع.

00:07:42.627 --> 00:07:45.779
حسنًا، إن التمثيل الصحيح للقيم الخالية أمر مهم.

00:07:45.779 --> 00:07:51.042
حسنًا لنوثق ذلك.

00:07:51.043 --> 00:07:58.519
إنها مشكلة تحقق لأن القيم الخالية يجب أن تكون خالية
وليست نصًا

