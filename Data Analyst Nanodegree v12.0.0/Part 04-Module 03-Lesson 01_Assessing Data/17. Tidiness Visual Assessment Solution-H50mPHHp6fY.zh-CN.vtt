WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.870
这些 Auralin 列和 Novodra 列只违反了整洁度的第一条规则

00:00:03.870 --> 00:00:07.599
即 每个变量构成一个列

00:00:07.599 --> 00:00:11.751
这里有三个变量: 治疗、Auralin 或 Novodra

00:00:11.752 --> 00:00:14.655
起始剂量 (例如 这里 41 个单位)

00:00:14.654 --> 00:00:15.989
和结束剂量

00:00:15.990 --> 00:00:18.030
例如 这里 48 个单位

00:00:18.030 --> 00:00:20.970
由于这里有三个变量 应该分为三列

00:00:20.969 --> 00:00:25.035
目前有两列且两列均包含两个变量

00:00:25.035 --> 00:00:29.190
Auralin 列包含 Auralin 患者的起始剂量和结束剂量

00:00:29.190 --> 00:00:31.109
Novodra 列包含接受 Novodra 治疗的患者

00:00:31.109 --> 00:00:34.109
的起始剂量和结束剂量

00:00:34.109 --> 00:00:36.734
如果这两列都包含两个变量

00:00:36.734 --> 00:00:38.280
即起始剂量和结束剂量

00:00:38.280 --> 00:00:40.560
缺少的第三个变量在哪儿呢？

00:00:40.560 --> 00:00:42.335
我们说过这里有三个变量 对吧？

00:00:42.335 --> 00:00:43.770
第三个变量

00:00:43.770 --> 00:00:46.565
即 治疗 隐藏在这里的列标题中

00:00:46.564 --> 00:00:50.834
按照 Hadley Wickham 的观点 这实际上是最常见的一个整洁度问题

00:00:50.835 --> 00:00:53.939
列标题是值 不是变量名称

00:00:53.939 --> 00:00:57.924
Auralin 和 Novodra 是我们对治疗变量给定的值

00:00:57.924 --> 00:01:01.019
这个数据集的排列未做好规划

00:01:01.020 --> 00:01:05.010
也未意识到数据整洁的好处

00:01:05.010 --> 00:01:07.710
最终结果应该是这样

00:01:07.709 --> 00:01:09.559
我们在这里将它放大点儿吧

00:01:09.560 --> 00:01:13.079
第一位患者 Veronika Jindrova 接受了 Auralin 胰岛素治疗

00:01:13.079 --> 00:01:17.390
起始剂量为 41 个单位 结束剂量为 48 个单位

00:01:17.390 --> 00:01:19.515
Auralin 41 48

00:01:19.515 --> 00:01:22.245
Elliot Richardson 接受了 Novodra 治疗

00:01:22.245 --> 00:01:23.820
起始剂量为 40 个单位

00:01:23.819 --> 00:01:28.289
结束剂量为 45 个单位 Novodra 40 45

00:01:28.290 --> 00:01:32.550
三个单独的变量分别在三个单独的列中

00:01:32.549 --> 00:01:34.739
治疗、起始剂量、结束剂量

00:01:34.739 --> 00:01:36.629
在 Pandas 的下一课中 你将学习

00:01:36.629 --> 00:01:38.804
如何使用 Melt 函数和 Split 方法编程

00:01:38.805 --> 00:01:43.210
将左侧两列转换成右侧三列

00:01:43.209 --> 00:01:45.509
特别是 Melt 函数 真的很方便

00:01:45.510 --> 00:01:49.550
但如果你以前从未见过该函数 则可能会觉得困惑

00:01:49.549 --> 00:01:51.189
下一课将为你解惑

00:01:51.189 --> 00:01:55.299
我们来记录第二个整洁问题

00:01:57.319 --> 00:02:01.000
好了 这就是我们的观察情况

