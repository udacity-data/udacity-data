WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:03.509
دعونا نستخدم التقييم البرمجي للبحث عن بعض مشكلات
الجودة.

00:00:03.509 --> 00:00:06.134
بعد التعرف جيدًا على البيانات عن طريق التقييم
البصري،

00:00:06.134 --> 00:00:07.859
على الفور أحب أن استخدم

00:00:07.860 --> 00:00:11.250
طريقة dot_info على كل إطار بيانات موجود في دفتر
الملاحظات،

00:00:11.250 --> 00:00:13.789
ما لم أكن أبحث عن شيء محدد.

00:00:13.789 --> 00:00:16.214
لذا نستخدم dot_info على أطر بيانات المرضى

00:00:16.214 --> 00:00:19.804
والعلاجات وردود الفعل العكسية.

00:00:19.804 --> 00:00:22.660
لديكم صفحة المستند الخاصة بطريقة dot_info.

00:00:22.660 --> 00:00:25.210
فهي تسترجع ملخص موجز لكل إطار بيانات

00:00:25.210 --> 00:00:27.940
إذًا، لدينا عدد الإدخالات وعدد الأعمدة،

00:00:27.940 --> 00:00:30.420
503 و14 على التوالي.

00:00:30.420 --> 00:00:32.645
ولدينا أيضًا نوع البيانات لكل عمود،

00:00:32.645 --> 00:00:35.260
في الذاكرة المستخدمة لإطار البيانات بأكمله.

00:00:35.259 --> 00:00:38.109
وبالفعل تم اكتشاف مشكلتين في جودة البيانات،

00:00:38.109 --> 00:00:40.075
بمجرد النظر إلى ملخص المريض هذا.

00:00:40.075 --> 00:00:43.480
كل عمود، باستثناء العنوان في أعمدة جهات الاتصال،

00:00:43.479 --> 00:00:47.140
يحتوي على 503 إدخال، بينما تحتوى أعمدة العنوان
والمدينة

00:00:47.140 --> 00:00:51.240
والولاية والرمز البريدي والبلد وجهة الاتصال على
491.

00:00:51.240 --> 00:00:53.770
هذا يشير إلى وجود بعض البيانات المفقودة هنا،

00:00:53.770 --> 00:00:56.745
التي يمكننا تحديدها بهذا الكود هنا.

00:00:56.744 --> 00:00:59.439
يسترجع ['address'].isnull للمرضى

00:00:59.439 --> 00:01:03.625
مصفوفة القيم المنطقية لنفس حجم إطار البيانات لدينا
503،

00:01:03.625 --> 00:01:08.935
مع صح أو خطأ سواء كان هذا الصف خاليًا لعمود العنوان
أم لا.

00:01:08.935 --> 00:01:10.390
وخلال فهرسة القيم المنطقية،

00:01:10.390 --> 00:01:14.689
يسترجع هذا كل الصفوف الخالية لتلك الأعمدة القليلة
هنا،

00:01:14.689 --> 00:01:16.730
وكل هذه NaNs دليل لدينا.

00:01:16.730 --> 00:01:18.570
NaNs عبارة عن قيم مفقودة.

00:01:18.569 --> 00:01:20.719
إذًا، هذه مشكلة الإنجاز.

00:01:20.719 --> 00:01:22.135
كيف حدث هذا؟

00:01:22.135 --> 00:01:24.280
ربما كان خطأ بسيط في إدخال البيانات مرة أخرى

00:01:24.280 --> 00:01:26.349
ونسى الشخص المسؤول عن كتابة

00:01:26.349 --> 00:01:28.155
معلومات هذا المريض أن يكتب

00:01:28.155 --> 00:01:31.435
المعلومات الديموغرافية لهؤلاء المرضى.

00:01:31.435 --> 00:01:34.795
أو ربما خطأ تلف قاعدة البيانات،

00:01:34.795 --> 00:01:40.147
نوع من الخطأ في نقل الملفات مما أدى إلى عرض هذه
الإدخالات كقيمة خالية.

00:01:40.147 --> 00:01:42.310
من الممكن أن يكون هناك أسباب مختلفة تتسبب في حدوث
ذلك،

00:01:42.310 --> 00:01:45.835
ولكن خلاصة القول أنه ليس لدينا معلومات ديموغرافية
ونحن بحاجة إليها،

00:01:45.834 --> 00:01:48.250
وخاصة إذا أردنا الاتصال بهؤلاء المرضى في وقت لاحق

00:01:48.250 --> 00:01:51.159
بأخبار جيدة عن الفحص أو أخبار سيئة محتملة.

00:01:51.159 --> 00:01:52.329
النقطة هنا أننا نريد مسح هذا.

00:01:52.329 --> 00:01:54.640
لذا، لست متأكدًا إذا كان هذا ممكنًا حاليًا.

00:01:54.640 --> 00:01:56.680
سنتعامل مع هذا لاحقًا في الدرس الرابع.

00:01:56.680 --> 00:01:59.035
ولكن لنوثق هذا الآن.

00:01:59.034 --> 00:02:03.069
هناك مشكلة أخرى في جودة البيانات واضحة من خلال طريقة
.info هذه،

00:02:03.069 --> 00:02:05.324
وتتعلق بأنواع البيانات هنا.

00:02:05.325 --> 00:02:08.689
لذا، دعونا نطلع على نوع بيانات كل عمود ونرى ما إذا
كانت مناسبة أم لا.

00:02:08.689 --> 00:02:11.544
إذًا، معرّف المريض عدد صحيح. هذا مناسب.

00:02:11.544 --> 00:02:14.754
إذًا الأعمدة الستة التالية من نوع بيانات الكائن.

00:02:14.754 --> 00:02:18.534
هذه هي الطريقة التي تمثل بها Pandas السلاسل. إذًا
فكروا في النص.

00:02:18.534 --> 00:02:22.104
عينوا الجنس وفقًا لهذه المجموعة من البيانات سواء
ذكر أم أنثى.

00:02:22.104 --> 00:02:26.939
لذا من الأنسب تمثيلها كنوع البيانات المصنّفة،

00:02:26.939 --> 00:02:29.520
الموجودة.

00:02:29.520 --> 00:02:30.945
إذًا نوع بيانات الاسم المحدد واللقب

00:02:30.944 --> 00:02:34.129
والعنوان والمدينة جيد ككائنات،

00:02:34.129 --> 00:02:37.590
ولكن سأرجح أن نوع بيانات عمود الولاية هو بالفعل
بيانات مصنفة أيضًا.

00:02:37.590 --> 00:02:39.990
والآن نعاني منها في عمود الرمز البريدي،

00:02:39.990 --> 00:02:44.055
الذي حدد مسبقًا بأنه ينطوي على مشكلة. إنه رقم عشري
الآن.

00:02:44.055 --> 00:02:48.135
هذا غير صالح، أتتذكرون، لأن الرمز البريدي يجب أن
يكون عبارة عن سلاسل،

00:02:48.134 --> 00:02:52.530
وليس أعداد عشرية أو أعداد صحيحة لأنكم لن تقوموا
بإجراء العمليات الحسابية على الرموز البريدية.

00:02:52.530 --> 00:02:54.599
مثل ضرب الرموز البريدية، على سبيل المثال.

00:02:54.599 --> 00:02:56.685
إذًا البلد عبارة عن كائن، هذا جيد،

00:02:56.685 --> 00:02:58.719
جهة الاتصال عبارة عن كائن، هذا جيد،

00:02:58.719 --> 00:03:02.462
على الرغم من أن عمود جهات الاتصال به مشاكل خاصة
بالنطاق مع وجود متغيرين في هذا العمود،

00:03:02.462 --> 00:03:06.354
رقم الهاتف والبريد الإلكتروني، إلا أن كلاهما متغيرات
كائنات في حد ذاتهما

00:03:06.354 --> 00:03:08.174
هذا جيد فيما يتعلق بأنواع البيانات.

00:03:08.175 --> 00:03:10.210
تاريخ الميلاد هو كائن.

00:03:10.210 --> 00:03:13.344
يجب أن يكون نوع بيانات عمود تاريخ الميلاد وقت
وتاريخ.

00:03:13.344 --> 00:03:16.354
بعد ذلك الوزن كعدد عشري والطول كعدد صحيح، هذا أمر
جيد.

00:03:16.354 --> 00:03:19.004
من الجيد أن يُقرب الطول إلى أقرب عدد صحيح،

00:03:19.004 --> 00:03:21.715
وبعد ذلك مؤشر كتلة الجسم كرقم عشري، هذا جيد أيضًا.

00:03:21.715 --> 00:03:25.425
إذًا، يوجد أربعة أنواع من البيانات الخاطئة هنا:
الجنس المحدد

00:03:25.425 --> 00:03:27.870
والولاية والرمز البريدي وتاريخ الميلاد.

00:03:27.870 --> 00:03:30.599
إذًا، لماذا تكون أنواع البيانات مهمة ليتم تغيرها؟

00:03:30.599 --> 00:03:33.090
السبب الرئيسي في Pandas، هو لأن هناك

00:03:33.090 --> 00:03:37.080
عمليات حسابية خاصة يمكنكم إجراؤها بالإضافة إلى ملخصات
لأنواع البيانات المصنفة

00:03:37.080 --> 00:03:40.050
والرقمية وحتى الوقت والتاريخ.

00:03:40.050 --> 00:03:43.540
إذا صنفت هذه البيانات تصنيفًا خاطئًا، لن يمكنكم
إجراء العمليات الحسابية أو إعداد الملخصات.

00:03:43.539 --> 00:03:47.439
لذا على سبيل المثال، تاريخ الميلاد الذي يجب أن يكون
نوع بياناته وقت وتاريخ.

00:03:47.439 --> 00:03:50.329
إذا ظل نوع بيانات تاريخ الميلاد كائن بدلًا من الوقت
والتاريخ،

00:03:50.330 --> 00:03:54.150
لا يمكننا الاستفادة من التسلسل الزمني أو وظائف الوقت
والتاريخ في Pandas،

00:03:54.150 --> 00:03:56.805
التي تعتبر كثيرة ولكن البسيطة منها

00:03:56.805 --> 00:04:00.810
ستحسب العمر من تاريخ ميلاد معين، على سبيل المثال.

00:04:00.810 --> 00:04:03.735
إذًا، كل هذه الأنواع الخاطئة للتاريخ هي مشاكل
تحقق.

00:04:03.735 --> 00:04:07.860
فهي لا تتطابق مع المخطط المحدد لما يجب أن يكون عليه
هذا الجدول.

00:04:07.860 --> 00:04:10.450
في الواقع، هناك اثنان إضافيان في جدول العلاجات
أيضًا.

00:04:10.449 --> 00:04:14.744
هذه أعمدة Auralin وNovodra وهي الجرعة المبدئية
والجرعة النهائية، أتتذكرون.

00:04:14.745 --> 00:04:17.105
لذا في الواقع يجب أن يكونا عددًا صحيحًا في
النهاية،

00:04:17.105 --> 00:04:18.430
ولكن سنتعامل مع ذلك في وقت لاحق.

00:04:18.430 --> 00:04:22.030
ولكن لنوثق هذه المشكلات الآن.

00:04:26.540 --> 00:04:31.135
لذا، إذا قمنا بالتمرير لأعلى وصولًا إلى التقييمات
البصرية التي أجريناها،

00:04:31.134 --> 00:04:33.969
يمكننا أن نرى بعضًا من مشكلات نوع البيانات هذه
بوضوح.

00:04:33.970 --> 00:04:35.635
مثل مشكلة الرموز البريدية، على سبيل المثال.

00:04:35.634 --> 00:04:37.860
من الواضح أن هذا رقم عشري في حين أنه يجب أن يكون
سلسلة.

00:04:37.860 --> 00:04:40.210
ولكن الأنواع الأخرى ليست بهذا الوضوح، مثل تاريخ
الميلاد.

00:04:40.209 --> 00:04:43.089
ليس من الواضح أن نوع البيانات هذا ليس وقت وتاريخ.

00:04:43.089 --> 00:04:46.514
الأمر نفسه مع الجنس المحدد من حيث كونها بيانات مصنّفة
لمجموعة البيانات هذه.

00:04:46.514 --> 00:04:49.569
وهذا أحد المجالات التي يكون فيها التقييم البرمجي
أمرًا حيويًا.

00:04:49.569 --> 00:04:52.175
إذًا، كيف يمكن أن تحدث كل هذه الأنواع الخاطئة من
البيانات؟

00:04:52.175 --> 00:04:55.615
أساسًا، البرامج ليست مثالية في التعرف على أنواع
البيانات.

00:04:55.615 --> 00:04:58.060
إذا كانت البيانات في مجموعة البيانات هذه قد سُجلت
في الأصل

00:04:58.060 --> 00:05:00.685
في تطبيق جدول البيانات وفقًا لحدسي،

00:05:00.685 --> 00:05:04.495
ومن ثم قمت بتصديرها من تطبيق جدول البيانات واستيرادها
إلى Pandas لاحقًا،

00:05:04.495 --> 00:05:06.730
فهذا هو المكان الذي قد تنشأ منه بعض الأخطاء.

00:05:06.730 --> 00:05:09.110
إذًا هذا هو جدول المرضى في Google sheets.

00:05:09.110 --> 00:05:13.735
في الواقع يبدو عمود الرمز البريدي لا بأس به في
الأوراق فمن حيث الأعداد العشرية مقارنة مع الأعداد
العشرية.

00:05:13.735 --> 00:05:15.465
لا يوجد علامات عشرية هنا.

00:05:15.464 --> 00:05:18.134
ولكن Pandas تختار هذا بصورة غير دقيقة باعتباره رقم
عشري.

00:05:18.134 --> 00:05:19.795
متى تستوردون بيانات إلى Pandas،

00:05:19.795 --> 00:05:21.425
كونوا حذرين بشأن نوع بياناتكم.

00:05:21.425 --> 00:05:23.699
فهي عادة لا تكون صحيحة في المرة الأولى.

00:05:23.699 --> 00:05:26.949
.describe عبارة عن تقييم برمجي آخر مفيد وسهل
الاستخدام،

00:05:26.949 --> 00:05:29.584
وعادة ما أفضل القيام به مباشرة بعد طريقة info.

00:05:29.584 --> 00:05:34.180
المذكور ينشئ إحصاءات وصفية لأنواع البيانات الرقمية
في أطر البيانات.

00:05:34.180 --> 00:05:36.625
ولدينا بعض المرضى والعلاجات.

00:05:36.625 --> 00:05:40.314
إذًا لدينا العدد والمتوسط والانحراف المعياري والحد
الأدنى،

00:05:40.314 --> 00:05:41.800
ومن ثم الكتلة، %25

00:05:41.800 --> 00:05:44.725
و%50 و75% وأقصى قيمة.

00:05:44.725 --> 00:05:48.350
هذه الإحصاءات ليست مفيدة بنفس الدرجة بالنسبة للمريض
والرمز البريدي.

00:05:48.350 --> 00:05:51.325
تذكروا أن نوع الرمز البريدي في الواقع لا يجب أن يكون
بيانات رقمية.

00:05:51.324 --> 00:05:55.834
ويجوز القول إن معرّف المريض في الواقع ينبغي أن يكون
سلسلة بدلًا من عدد صحيح.

00:05:55.834 --> 00:05:57.370
لكن هذا قابل للنقاش.

00:05:57.370 --> 00:05:59.660
فهي مفيدة للوزن والطول ومؤشر كتلة الجسم.

00:05:59.660 --> 00:06:03.206
لنلقِ نظرة على وصف ناتج جدول العلاجات.

00:06:03.206 --> 00:06:07.235
hba1c_start, hba1c_end, وhba1c_change.

00:06:07.235 --> 00:06:10.525
تذكروا أن هذا القياس يحدد فعالية الأنسولين لدينا.

00:06:10.524 --> 00:06:12.879
فيما يتعلق بالتحكم في سكر الدم،

00:06:12.879 --> 00:06:16.930
يكون hba1c_change وخاصة بمقدار حوالي 0.4 نجاحًا.

00:06:16.930 --> 00:06:22.209
لذا نسبة 0.9 ، ذلك يتطلب بعض المعرفة بالمجال، لكن
0.9 نسبة هائلة.

00:06:22.209 --> 00:06:25.164
هذا تغيير كبير حقًا وغير قابل للتصديق إلى حد ما،

00:06:25.165 --> 00:06:28.590
وخاصة بالنظر إلى أن 75 بالمائة عند 0.92.

00:06:28.589 --> 00:06:31.164
هذا يشير إلى انحراف هائل.

00:06:31.165 --> 00:06:34.975
الفجوة بين 25 و50 هي 0.04 فقط

00:06:34.975 --> 00:06:39.285
بينما تقارب 0.6 بين 50 و75.

00:06:39.285 --> 00:06:41.950
إذا قمنا بالتمرير لأعلى وصولًا إلى التقييم البصري
لجدول العلاجات،

00:06:41.949 --> 00:06:44.675
سنرى على الفور أن هذه hba1c_change

00:06:44.675 --> 00:06:47.316
لمدخل 0.97 هذا الذي يخص Elliot Richardson،

00:06:47.315 --> 00:06:49.519
فهي ببساطة محسوبة بطريقة خاطئة.

00:06:49.519 --> 00:06:53.299
7.56 ناقص 7.09 ليست.0.97

00:06:53.300 --> 00:06:55.254
إنها 0.47 بالفعل.

00:06:55.254 --> 00:06:57.490
هذه مشكلة الدقة.

00:06:57.490 --> 00:06:59.254
إذًا، كيف حدث هذا؟

00:06:59.254 --> 00:07:02.350
لدي حدس أن أيا كان موظف الرعاية الصحية،

00:07:02.350 --> 00:07:05.620
ربما الطبيب الذي سجل هذه hba1c_change،

00:07:05.620 --> 00:07:08.735
لديه الرقم أربعة يشبه الرقم تسعة.

00:07:08.735 --> 00:07:12.040
الأطباء مشهورون بخطهم السيء.

00:07:12.040 --> 00:07:15.310
هذه مشكلة سيئة ولكن هذا يحدث في بعض الأحيان،

00:07:15.310 --> 00:07:18.339
وخاصة إذا تم استخدام برنامج التعرف البصري على
الأحرف

00:07:18.339 --> 00:07:21.489
في نقل السجلات الورقية إلى سجلات إلكترونية.

00:07:21.490 --> 00:07:23.189
عملية التنظيف أمر بالغ الأهمية هنا لأن

00:07:23.189 --> 00:07:27.660
hba1c_change هي المقياس الرئيسي لتجربتنا الإكلينيكية
بأكملها.

00:07:27.660 --> 00:07:30.430
يتوقف النجاح والفشل التقديري للأنسولين عن طريق
الفم

00:07:30.430 --> 00:07:32.915
على هذا المتغير.

00:07:32.915 --> 00:07:40.720
إذًا، دعونا نوثق هذا الأمر.

00:07:40.720 --> 00:07:46.900
لذا دعونا نتناول مشكلة جودة أخرى باستخدام التقييم
البرمجي.

00:07:46.899 --> 00:07:50.239
.sample هي طريقة دقيقة وأحب استخدامها.

00:07:50.240 --> 00:07:54.699
تسترجع هذه الطريقة عينة عشوائية من خمسة سجلات من
الجدول في هذه الحالة.

00:07:54.699 --> 00:07:57.594
وإذا كنت تفحص هذا العمود غير المرتب الخاص بجهات
الاتصال،

00:07:57.595 --> 00:07:59.320
الذي يحتوي على رقم الهاتف والبريد الإلكتروني،

00:07:59.319 --> 00:08:02.589
سترون أن هناك تمثيلات متعددة لرقم الهاتف.

00:08:02.589 --> 00:08:04.314
هذا يحتوي على ثلاثة أرقام، رمز المنطقة

00:08:04.314 --> 00:08:05.769
ثم –، ثم ثلاثة،

00:08:05.769 --> 00:08:07.174
ثم –، ثم أربعة،

00:08:07.175 --> 00:08:10.960
بينما هذا بالأسفل هنا لديه رمز البلد ثم مسافة،

00:08:10.959 --> 00:08:12.639
ثم رمز المنطقة، ثم مسافة،

00:08:12.639 --> 00:08:15.550
ثم ثلاثة أرقام، ثم مسافة، ثم أربعة أرقام.

00:08:15.550 --> 00:08:17.560
هذا بالتأكيد خطأ في إدخال البيانات،

00:08:17.560 --> 00:08:19.569
وتنظيفها ليس أمرًا مهمًا.

00:08:19.569 --> 00:08:22.689
لكن ربما شخص ما ينظر إلى مجموعة البيانات لاحقًا هذه
لا يعرف

00:08:22.689 --> 00:08:26.410
رمز البلد وأنتم وفرتم لهم بضع دقائق للبحث عنها
لاحقًا.

00:08:26.410 --> 00:08:27.580
دعونا ننظف هذا على أي حال،

00:08:27.579 --> 00:08:30.719
وسنجعل عملية المسح أسهل عن طريق توثيق هذا بشكل
أفضل.

00:08:30.720 --> 00:08:34.120
هذه مشكلة التناسق مرة أخرى.

