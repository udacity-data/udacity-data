WEBVTT
Kind: captions
Language: zh-CN

00:00:02.720 --> 00:00:06.330
想象一下 你运行一个热门的搜索引擎 

00:00:06.330 --> 00:00:09.830
并且你已经调查了你的用户 了解他们在哪里浏览 

00:00:09.830 --> 00:00:12.939
你收集了785条回应 

00:00:12.939 --> 00:00:15.899
我已将它们汇总到一个国家列表中 

00:00:15.900 --> 00:00:19.179
全世界有785个国家 

00:00:19.179 --> 00:00:22.644
这意味着国家/地区列表中有重复的条目 

00:00:22.644 --> 00:00:26.879
将列表切片来查看前几个元素就可以确认这一点 

00:00:26.879 --> 00:00:30.079
删除重复项以生成用户浏览的

00:00:30.079 --> 00:00:33.769
所有国家/地区的列表将非常有用 

00:00:33.770 --> 00:00:37.040
是的 Python 中的集合就是这么做的 

00:00:37.039 --> 00:00:41.879
集合是包含唯一元素的无序数据容器 

00:00:41.880 --> 00:00:45.330
我们可以从这样的列表中创建一个集合 

00:00:45.329 --> 00:00:47.634
集合将删除重复项 

00:00:47.634 --> 00:00:50.254
Print 函数可打印出

00:00:50.255 --> 00:00:53.245
这196个国家/地区的唯一值 

00:00:53.244 --> 00:00:57.414
集合支持类似于列表的内置运算符 

00:00:57.414 --> 00:00:59.865
India 在这个集合中

00:00:59.865 --> 00:01:04.275
你可以在不使用 append 方法的情况下给集合添加元素

00:01:04.275 --> 00:01:05.665
就像我们在列表中操作的那样

00:01:05.665 --> 00:01:08.450
相反的 集合有 add 方法 

00:01:08.450 --> 00:01:10.674
在这里 我们增加了 Italy

00:01:10.674 --> 00:01:14.250
集合也有像列表一样的 pop 方法 

00:01:14.250 --> 00:01:16.469
当你从集合中弹出元素时

00:01:16.469 --> 00:01:18.724
一个随机的元素被删除 

00:01:18.724 --> 00:01:21.544
请记住 与列表不同的是 

00:01:21.545 --> 00:01:24.935
集合是无序的 所以没有“最后一个元素

00:01:24.935 --> 00:01:30.405
还有一些其他集合可以实现的操作 比如说数据集合

00:01:30.405 --> 00:01:33.545
像 union intersection 这样的方法

00:01:33.545 --> 00:01:36.829
区别在于 与其他数据容器相比

00:01:36.829 --> 00:01:40.760
在集合中这些操作非常容易

