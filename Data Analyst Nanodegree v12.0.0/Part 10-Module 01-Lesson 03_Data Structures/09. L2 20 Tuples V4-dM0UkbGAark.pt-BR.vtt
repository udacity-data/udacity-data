WEBVTT
Kind: captions
Language: pt-BR

00:00:00.580 --> 00:00:02.715
ESTRUTURAS DE DADOS
E OPERADORES TUPLAS

00:00:02.748 --> 00:00:07.499
O Python fornece
outro contêiner útil: tuplas.

00:00:07.532 --> 00:00:11.462
As tuplas são usadas para armazenar
informações relacionadas.

00:00:11.495 --> 00:00:14.559
Uma tupla é uma estrutura de dados,
no Python,

00:00:14.592 --> 00:00:18.022
que é uma sequência de elementos
ordenada imutável.

00:00:18.055 --> 00:00:22.176
Observe este exemplo
com latitude e longitude.

00:00:22.856 --> 00:00:24.784
As tuplas são parecidas
com as listas

00:00:24.817 --> 00:00:27.678
e armazenam uma coleção
ordenada de objetos,

00:00:27.711 --> 00:00:30.319
que podem ser acessados
a partir dos índices.

00:00:30.352 --> 00:00:34.646
Por exemplo, a localização 0
e a localização 1.

00:00:34.679 --> 00:00:38.472
Diferente das listas,
as tuplas são imutáveis.

00:00:38.505 --> 00:00:41.694
Não podemos adicionar
ou remover itens das tuplas,

00:00:41.727 --> 00:00:43.895
nem mudá-los de lugar.

00:00:43.928 --> 00:00:45.271
Por que usamos tuplas,

00:00:45.304 --> 00:00:48.159
se são como as listas
e têm menos recursos?

00:00:48.192 --> 00:00:51.199
As tuplas são úteis
quando temos dois ou mais valores

00:00:51.232 --> 00:00:55.079
que são tão próximos
que sempre serão usados juntos -

00:00:55.112 --> 00:00:58.327
como as coordenadas
de latitude e de longitude.

00:00:58.360 --> 00:01:02.058
As tuplas também podem ser usadas
para atribuir múltiplas variáveis

00:01:02.091 --> 00:01:03.738
de forma compacta.

00:01:03.771 --> 00:01:06.896
Perceba que os valores atribuídos
às dimensões tuplas

00:01:06.929 --> 00:01:11.035
não estão entre parênteses,
como nos exemplos anteriores.

00:01:11.068 --> 00:01:14.107
Os parênteses são opcionais
ao criar as tuplas,

00:01:14.140 --> 00:01:17.155
e os programadores frequentemente
omitem os parênteses

00:01:17.188 --> 00:01:19.533
quando eles não ajudam
a esclarecer o código.

00:01:19.566 --> 00:01:22.306
Na segunda linha,
três variáveis são atribuídas

00:01:22.339 --> 00:01:24.714
ao conteúdo
das dimensões tuplas.

00:01:24.747 --> 00:01:27.480
Isso é chamado
de "desempacotamento de tupla".

00:01:27.513 --> 00:01:31.581
Podemos usá-lo para atribuir
informações de uma tupla

00:01:31.614 --> 00:01:33.368
para múltiplas variáveis

00:01:33.401 --> 00:01:36.265
sem precisar acessá-las
uma a uma

00:01:36.298 --> 00:01:39.144
e para criar instruções
de atribuição múltipla.

00:01:39.177 --> 00:01:43.559
Neste exemplo, se não precisarmos
usar as dimensões diretamente,

00:01:43.592 --> 00:01:45.790
poderemos resumir
as duas linhas de código

00:01:45.823 --> 00:01:49.799
em uma linha única que atribui
três variáveis de uma vez.

