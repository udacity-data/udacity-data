WEBVTT
Kind: captions
Language: zh-CN

00:00:03.049 --> 00:00:07.649
除了从列表中访问单个元素外 

00:00:07.650 --> 00:00:12.585
我们可以使用 Python 的切片表示法来访问列表的子序列 

00:00:12.585 --> 00:00:19.225
切片 意味着使用索引来切分对象的部分 如字符串或列表 

00:00:19.225 --> 00:00:21.810
举一个可以帮助你很好理解的例子 

00:00:21.809 --> 00:00:25.184
再次考虑这个月份列表 

00:00:25.184 --> 00:00:30.399
我们可以从这个月份列表中切出一年中的第三季度 

00:00:30.399 --> 00:00:33.054
冒号左侧的索引 

00:00:33.054 --> 00:00:35.670
6 是切片开始的位置 

00:00:35.670 --> 00:00:39.550
切片到第二个索引 9 

00:00:39.549 --> 00:00:42.859
请注意 6 是七月的索引 

00:00:42.859 --> 00:00:45.619
9是十月的索引

00:00:45.619 --> 00:00:48.094
切片范围的下限是包含的 

00:00:48.094 --> 00:00:50.839
但上限是不包含

00:00:50.840 --> 00:00:55.845
有几个切片快捷方式可以简化常见的一些情况 

00:00:55.844 --> 00:01:00.979
如果你想创建一个从原始列表的开头开始的切片 

00:01:00.979 --> 00:01:03.924
你可以省略这样的起始索引 

00:01:03.924 --> 00:01:09.405
或者如果你想创建一个截断在原始列表末尾的切片 

00:01:09.405 --> 00:01:12.400
你可以像这样省略末尾索引 

00:01:12.400 --> 00:01:17.040
List是一个类似string、float和int的类型 

00:01:17.040 --> 00:01:18.870
在我们见过的类型中 

00:01:18.870 --> 00:01:21.740
列表与字符串最相似 

00:01:21.739 --> 00:01:26.854
两种类型都支持len函数 索引和切片 

00:01:26.855 --> 00:01:31.890
在这里 你可以看到字符串的长度是字符数 

00:01:31.890 --> 00:01:35.875
列表的长度也是它所包含的元素 

00:01:35.875 --> 00:01:38.870
两者都支持零索引 

00:01:38.870 --> 00:01:41.960
以及根据此处显示的索引进行切片 

00:01:41.959 --> 00:01:47.354
它们都支持的还有成员运算符 in 和 not in 

00:01:47.355 --> 00:01:53.240
In 评估左侧的对象是否包含在右侧的对象中 

00:01:53.239 --> 00:01:55.969
not in 评估左侧的对象

00:01:55.969 --> 00:01:59.969
是否包含在右侧的对象中 

00:01:59.969 --> 00:02:05.795
在这里 我们可以检查她的字符串是否在这个字符串中 就在这里 

00:02:05.795 --> 00:02:11.080
但是 周日不在我们的名单中 因为它只保留了几个月 

