WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.240
前面 当我们创建一个包含不可变的对象时 

00:00:05.240 --> 00:00:09.009
不可变的对象中的值将会存储到内存中 

00:00:09.009 --> 00:00:12.599
在这里 我们来创建一个值为 Jim 的变量 name 

00:00:12.599 --> 00:00:15.559
然后把 name 赋值给另一个称为 student 的变量 

00:00:15.560 --> 00:00:19.144
于是有 值 Jim 被赋值给变量 student 

00:00:19.144 --> 00:00:22.890
因此 当我们将变量 name 的值更新为 Tim时 

00:00:22.890 --> 00:00:26.469
这个值的更改不会影响到变量 student 中的值 

00:00:26.469 --> 00:00:30.410
列表（List）不同于字符串（string） 因为它是值可更改的 

00:00:30.410 --> 00:00:37.215
在这里 我们创建一个列表 scores 并将此列表分配给变量 grades 

00:00:37.215 --> 00:00:40.425
B C A D B A

00:00:40.424 --> 00:00:42.354
此列表拥有这6个元素 

00:00:42.354 --> 00:00:48.769
当我们更改或改变列表 scores 使得第四个等级值 B 更改成 D 

00:00:48.770 --> 00:00:52.345
这将同时影响 scores 和 grades 这两个变量 

00:00:52.344 --> 00:00:57.524
其中 scores 和 grades 两个变量同时指向同一个列表 

00:00:57.524 --> 00:01:01.780
而且这两个变量都能获得并更改这个列表的值 

00:01:01.780 --> 00:01:07.924
由此可见 变量包含可变对象和包含不可变对象 对于这两种变量的行为是非常不同的 

00:01:07.924 --> 00:01:10.399
而且 有时甚至可能会令人惊讶 

00:01:10.400 --> 00:01:14.650
于是 在实验中 你最好使用打印功能并仔细检查你的工作和代码

00:01:14.650 --> 00:01:19.520
这样才可以确保你的程序正确地跟踪他们的数据 

00:01:19.519 --> 00:01:22.069
当你在使用列表（list）这个数据结构的时候 

00:01:22.069 --> 00:01:25.109
有一些你应该熟悉的非常有用的函数 

00:01:25.109 --> 00:01:28.959
函数 len 返回列表（list）中的元素个数 

00:01:28.959 --> 00:01:32.469
函数 max 返回列表（list）中值最大的元素 

00:01:32.469 --> 00:01:38.545
如何确定最大元素这取决于列表中的对象类型 

00:01:38.545 --> 00:01:43.125
数字列表中的最大元素是最大数字 

00:01:43.125 --> 00:01:46.939
字符串列表中最大元素是

00:01:46.939 --> 00:01:51.274
按字母表顺序的最后一个字母 

00:01:51.275 --> 00:01:54.395
这是 python 语言对关于列表 list 的一个特点 

00:01:54.394 --> 00:01:57.420
而对于 R 语言 则是在字母表中的最大的字母 

00:01:57.420 --> 00:02:00.329
换句话说 大于 B 

00:02:00.329 --> 00:02:02.474
A B 和 A 

00:02:02.474 --> 00:02:05.569
得到这样的结果是因为函数 max 

00:02:05.569 --> 00:02:09.430
取决于内部的“大于”比较器 

00:02:09.430 --> 00:02:14.605
“大于”比较器可能会用于定义很多非数字的类型 

00:02:14.604 --> 00:02:18.125
如果你在处理一些可以用于互相比较的对象时 

00:02:18.125 --> 00:02:21.159
那么 对于该对象的列表 你就可以使用函数 max 

00:02:21.159 --> 00:02:25.055
关于字符串 标准的比较时按字母表进行的 

00:02:25.055 --> 00:02:29.885
因此 字符串列表的最大值是出现在字母表上的最后元素 

00:02:29.884 --> 00:02:35.454
尽管你能够创建包含不同类型的元素的列表 比如
40
00:02:35,455 --&gt; 00:02:39,050
数字和文本 但是函数 max 是不支持

00:02:39.050 --> 00:02:42.930
那些包含不可比较的不同类型的列表的 

00:02:42.930 --> 00:02:47.284
否则 你将会看到程序会因混淆数据类型而断开 

00:02:47.284 --> 00:02:52.689
函数 min 是函数 max 的相反操作 然后返回列表中的最小元素 

00:02:52.689 --> 00:02:56.240
函数 sorted 返回一个对该列表排完序的列表的复制列表

00:02:56.240 --> 00:03:00.495
返回的列表从小到大排好序 并且不会影响原先的列表 

00:03:00.495 --> 00:03:03.235
这里举个例子 对于名为 sizes 的列表 

00:03:03.235 --> 00:03:05.200
它的顺序是升序 

00:03:05.199 --> 00:03:08.089
你可以通过添加可选的参数 "reverse=True"

00:03:08.090 --> 00:03:11.194
让它变成从大到小排序

00:03:11.194 --> 00:03:13.759
于是 现在这个列表的顺序便是降序了 

