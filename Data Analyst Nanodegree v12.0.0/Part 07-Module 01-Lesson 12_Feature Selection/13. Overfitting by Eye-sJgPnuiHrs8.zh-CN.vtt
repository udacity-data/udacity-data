WEBVTT
Kind: captions
Language: zh-CN

00:00:00.380 --> 00:00:04.030
我将细致为你演示过拟合给回归造成的后果

00:00:04.030 --> 00:00:06.920
以便你明确了解过拟合效果很差的原因

00:00:06.920 --> 00:00:09.060
假设这是我的输入数据

00:00:09.060 --> 00:00:12.370
我的最佳拟合线可能是这样的

00:00:12.370 --> 00:00:16.160
但设想一下

00:00:16.160 --> 00:00:17.480
因为我使用的模型和特征的缘故

00:00:17.480 --> 00:00:22.600
我的回归结果可能不完全是线性的

00:00:22.600 --> 00:00:25.300
例如 我可以将其与看上去

00:00:26.360 --> 00:00:28.980
略带曲度的线拟合

00:00:28.980 --> 00:00:31.910
在本例中 事实上是没有必要使用曲线的

00:00:31.910 --> 00:00:34.890
因为直线可以完美拟合

00:00:34.890 --> 00:00:38.730
但计算机可能会将曲线用作可行的解决方案

00:00:38.730 --> 00:00:42.380
接受曲线后 如果我使用过多特征使曲线变得过于复杂

00:00:42.380 --> 00:00:45.780
那么实际结果是这样的

00:00:45.780 --> 00:00:50.010
你可以想象 设法尽可能降低

00:00:50.010 --> 00:00:53.950
训练集方差之和的计算机

00:00:53.950 --> 00:00:56.260
真正需要的可能是这样的函数

00:00:56.260 --> 00:00:59.470
因为这非常接近所有训练点

00:00:59.470 --> 00:01:02.920
但是 如果我从同一个总体中抽取另一个样本

00:01:02.920 --> 00:01:04.540
会出现什么情况呢

00:01:04.540 --> 00:01:07.830
假设 我另外收集到了一些与我已经收集的数据点

00:01:07.830 --> 00:01:09.395
一致的数据点

00:01:09.395 --> 00:01:13.130
你可以想到 这条波形线在预测

00:01:13.130 --> 00:01:15.880
这些红色数据点的趋势方面

00:01:15.880 --> 00:01:17.820
效果确实不如原来的直线效果好

00:01:17.820 --> 00:01:20.750
这条波形线将成为我使用过多特征的

00:01:20.750 --> 00:01:21.890
典型案例

00:01:21.890 --> 00:01:25.070
这是方差很高的解决方案 泛化效果不好

