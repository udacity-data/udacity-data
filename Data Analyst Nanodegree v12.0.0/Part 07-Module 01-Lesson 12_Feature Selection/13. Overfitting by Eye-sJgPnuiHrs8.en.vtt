WEBVTT
Kind: captions
Language: en

00:00:00.380 --> 00:00:04.030
So let me just show you concretely what a regression looks like

00:00:04.030 --> 00:00:06.920
when it's overfitting so you know exactly why it's so bad.

00:00:06.920 --> 00:00:09.060
Suppose that this is my input data.

00:00:09.060 --> 00:00:12.370
My best fit line might look something like this.

00:00:12.370 --> 00:00:16.160
But let's suppose that because of the, the model that I'm using and

00:00:16.160 --> 00:00:17.480
the features that I'm using,

00:00:17.480 --> 00:00:22.600
I have the possibility also of doing a regression that's a little bit nonlinear.

00:00:22.600 --> 00:00:25.300
So for example, I could fit it with something maybe that looks like that

00:00:26.360 --> 00:00:28.980
where there's a little bit of curvature to the line.

00:00:28.980 --> 00:00:31.910
And having a curved line is probably not necessary in this case.

00:00:31.910 --> 00:00:34.890
You saw that the straight line fit it perfectly well, but now it's

00:00:34.890 --> 00:00:38.730
something that the computer sort of has available to it as a possible solution.

00:00:38.730 --> 00:00:42.380
Once the curvature is allowed, and if I let it get too complex by using too

00:00:42.380 --> 00:00:45.780
many features, I can actually get something that looks like this.

00:00:45.780 --> 00:00:50.010
So you could imagine how a computer that's trying to find a function that,

00:00:50.010 --> 00:00:53.950
that minimizes the sum over the squared errors on the training set

00:00:53.950 --> 00:00:56.260
might actually really prefer a function that looks like this,

00:00:56.260 --> 00:00:59.470
because it gets very close to all of the training points.

00:00:59.470 --> 00:01:02.920
However, you could imagine that if I took another sample from sort of

00:01:02.920 --> 00:01:04.540
the same population.

00:01:04.540 --> 00:01:07.830
So I just collect some more data points that are consistent with the ones that

00:01:07.830 --> 00:01:09.395
I've already collected.

00:01:09.395 --> 00:01:13.130
Then you can imagine that this wiggly line is actually going to do a worse job

00:01:13.130 --> 00:01:15.880
of predicting the trend in these red data points than my

00:01:15.880 --> 00:01:17.820
original straight line does.

00:01:17.820 --> 00:01:20.750
So this wiggly line is going to be a classic case of where I've used too

00:01:20.750 --> 00:01:21.890
many features.

00:01:21.890 --> 00:01:25.070
It's a very high variance solution, and it's not going to generalize well.

