WEBVTT
Kind: captions
Language: zh-CN

00:00:00.520 --> 00:00:05.050
能非常有效地采用正则化的一个地方 就是回归

00:00:05.050 --> 00:00:06.840
正则化是自动处理模型中使用的

00:00:06.840 --> 00:00:11.020
额外特征的方式

00:00:11.020 --> 00:00:13.340
现在让我更具体地说一说

00:00:13.340 --> 00:00:17.140
有一种正则化回归称为 Lasso 回归

00:00:17.140 --> 00:00:19.560
这是 Lasso 回归的大致公式

00:00:20.630 --> 00:00:22.350
一般的线性回归

00:00:22.350 --> 00:00:27.640
是要最大程度地降低拟合中的平方误差

00:00:27.640 --> 00:00:30.840
我想要缩短拟合与任何指定数据点

00:00:30.840 --> 00:00:35.210
之间的距离或者是距离的平方

00:00:35.210 --> 00:00:39.740
而 Lasso 回归也要减小平方误差

00:00:39.740 --> 00:00:42.890
但是 除了最大化减小平方误差以外

00:00:42.890 --> 00:00:45.720
它还要最大化减少使用的特征数量

00:00:45.720 --> 00:00:49.390
所以 这里我要添加第二项

00:00:49.390 --> 00:00:53.570
我设了一个惩罚参数

00:00:53.570 --> 00:00:58.040
这个术语描述的就是使用的特征数量

00:00:58.040 --> 00:01:00.200
这就是这个公式的结果

00:01:00.200 --> 00:01:05.030
我进行拟合时 我会考虑拟合造成的误差

00:01:05.030 --> 00:01:09.060
以及使用的特征数

00:01:09.060 --> 00:01:11.390
然后我来对比两个不同的

00:01:11.390 --> 00:01:12.890
含有不同数量特征的拟合

00:01:13.930 --> 00:01:16.150
特征数更多的这个

00:01:16.150 --> 00:01:19.300
一般会有更小的平方误差

00:01:19.300 --> 00:01:22.640
因为它能更精确地拟合这些点

00:01:22.640 --> 00:01:25.400
但是使用额外的特征我受到了惩罚

00:01:25.400 --> 00:01:29.300
而在第二项中 设有惩罚参数

00:01:29.300 --> 00:01:31.130
以及我使用额外特征

00:01:31.130 --> 00:01:33.880
得到的回归系数

00:01:33.880 --> 00:01:36.660
也就是说 由于精确度

00:01:36.660 --> 00:01:38.740
我得到的回归的适当拟合的好处

00:01:38.740 --> 00:01:43.630
必须比我回归中使用额外特征

00:01:43.630 --> 00:01:47.730
形成的损失更大

00:01:49.220 --> 00:01:52.820
所以这个以数学的方式 精确地规定了

00:01:52.820 --> 00:01:58.910
更少的误差与使用更少特征的更简单的拟合之间的平衡

00:01:58.910 --> 00:02:01.040
所以 Lasso 回归

00:02:01.040 --> 00:02:04.970
就是自动地考虑惩罚参数

00:02:04.970 --> 00:02:08.780
这样 它就能帮助你指出

00:02:08.780 --> 00:02:12.040
哪些特征对你的回归有最重要的影响

00:02:12.040 --> 00:02:15.010
在它发现这些特征后 它就能减少

00:02:15.010 --> 00:02:19.500
或完全删除用处不大的特征的系数

