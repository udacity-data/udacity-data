WEBVTT
Kind: captions
Language: en

00:00:00.410 --> 00:00:03.160
Before we move on from this coding example I want to show you just

00:00:03.160 --> 00:00:07.270
a couple more things that help make your regression as useful as it can be.

00:00:07.270 --> 00:00:09.300
The first thing is you might want to be able to make a prediction with it.

00:00:09.300 --> 00:00:12.070
And of course this is something that shouldn't be that difficult.

00:00:12.070 --> 00:00:14.930
For that you can just call the prediction function on your regression.

00:00:14.930 --> 00:00:18.730
But here's one little catch, it's going to be expecting a list of values.

00:00:18.730 --> 00:00:23.150
So even if you only have one value that you want to be predicting.

00:00:23.150 --> 00:00:25.160
You still need to put it in a list.

00:00:25.160 --> 00:00:27.340
You might also be wondering what the coefficients and

00:00:27.340 --> 00:00:29.730
the intercept of the regression are.

00:00:29.730 --> 00:00:32.482
And you can access these using reg.coef and

00:00:32.482 --> 00:00:35.510
reg.intercept_ like you can see here.

00:00:35.510 --> 00:00:36.840
Don't forget this little underscore here.

00:00:36.840 --> 00:00:38.970
Otherwise it won't know what you're talking about.

00:00:38.970 --> 00:00:43.420
Just remember the slope we expected to be pretty close to 6.25.

00:00:43.420 --> 00:00:44.860
But maybe not exact.

00:00:44.860 --> 00:00:46.970
And the intercept should be close to zero, but

00:00:46.970 --> 00:00:49.020
again, we wouldn't expect it to be exactly right,

00:00:49.020 --> 00:00:51.590
because there's a little bit of noise in our, in our training data.

00:00:51.590 --> 00:00:54.780
There are a few more lines here about the r squared score.

00:00:54.780 --> 00:00:56.510
Let me come back to that in just a second.

00:00:56.510 --> 00:00:59.120
But I want to show you what the prediction, the coefficients, and

00:00:59.120 --> 00:01:01.330
the intercept are right away.

00:01:01.330 --> 00:01:03.900
So these three lines are the ones we were just talking about.

00:01:03.900 --> 00:01:06.470
I can predict my net worth, based on the regression.

00:01:06.470 --> 00:01:09.250
It's about 160, based on my age.

00:01:09.250 --> 00:01:11.760
We can also print out the slope and the intercepts.

00:01:11.760 --> 00:01:14.090
Remember we thought the slope would be about 6.25.

00:01:14.090 --> 00:01:15.970
It's close, but not exact.

00:01:15.970 --> 00:01:18.760
Similarly for the intercept, it's not quite zero.

00:01:18.760 --> 00:01:21.680
In the next few videos we're going to talk a lot about the types of errors that

00:01:21.680 --> 00:01:23.560
you can get on regressions.

00:01:23.560 --> 00:01:25.470
Because they're fundamentally different from the types of

00:01:25.470 --> 00:01:26.830
errors that you get in classification.

00:01:26.830 --> 00:01:28.730
And where we're eventually going,

00:01:28.730 --> 00:01:31.560
is we're going to be computing something called the r squared.

00:01:31.560 --> 00:01:34.630
Now, the next few lines give you some output about the performance of

00:01:34.630 --> 00:01:35.760
your regression.

00:01:35.760 --> 00:01:39.080
So one way you can evaluate a regression, that we'll be talking about

00:01:39.080 --> 00:01:42.660
much more in the videos to come is a metric called the R squared.

00:01:42.660 --> 00:01:45.690
There's also the sum of the errors, we'll be talking about all of these.

00:01:45.690 --> 00:01:47.200
But let me show you just what it looks like now.

00:01:47.200 --> 00:01:50.690
So you have some reason to understand why it's important.

00:01:50.690 --> 00:01:53.500
The way that you access these performance metrics is using

00:01:53.500 --> 00:01:56.500
something called the score function performed on your regression.

00:01:56.500 --> 00:01:59.560
And you always want to be looking at the score on your testing data.

00:01:59.560 --> 00:02:02.820
Because of course you're fitting your regression using your training data.

00:02:02.820 --> 00:02:05.680
So if there's any over fitting going on that'll show up in

00:02:05.680 --> 00:02:08.740
having a lower score when you look at your testing data.

