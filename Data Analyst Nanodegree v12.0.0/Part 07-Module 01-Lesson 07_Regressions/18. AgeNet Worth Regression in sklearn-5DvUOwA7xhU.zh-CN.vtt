WEBVTT
Kind: captions
Language: zh-CN

00:00:00.700 --> 00:00:05.280
你已经参加了关于 sklearn 回归的文档速成课程

00:00:05.280 --> 00:00:09.390
让我们把它应用到年龄净资产问题上

00:00:09.390 --> 00:00:11.220
这样你就会明白它是如何起作用的

00:00:11.220 --> 00:00:12.890
我将教你如何来完成

00:00:12.890 --> 00:00:16.870
我创建了一个净资产和年龄的数据集并把它

00:00:16.870 --> 00:00:21.500
分拆成训练集和测试集 就像我们在监督分类法中那样

00:00:21.500 --> 00:00:22.940
在这里我标出了训练数据

00:00:23.960 --> 00:00:26.770
你可以清楚地看到数据中有普遍的趋势

00:00:26.770 --> 00:00:29.450
随着年龄的增长 你的净资产也随之增加

00:00:29.450 --> 00:00:32.280
但我也在数据中加入了一点噪声

00:00:32.280 --> 00:00:33.800
这样就不是完美的关系了

00:00:33.800 --> 00:00:36.110
这样处理就更逼真

00:00:36.110 --> 00:00:39.280
然而 生成数据的方法是采用的等式

00:00:39.280 --> 00:00:41.860
就是 Sebastian 在先前的视频中使用的等式

00:00:41.860 --> 00:00:43.120
因此我从年龄开始

00:00:43.120 --> 00:00:47.380
用6.25的系数计算净资产

00:00:47.380 --> 00:00:50.600
我们在进行回归时得到的答案

00:00:50.600 --> 00:00:53.080
就是拟合时的系数 应该非常接近6.25

00:00:53.080 --> 00:00:56.810
由于我加入了噪声 6.25并不完全准确

00:00:56.810 --> 00:00:58.570
这只是训练数据

00:00:58.570 --> 00:01:01.710
就是完成回归后应得到的系数

00:01:01.710 --> 00:01:04.989
在散点图中 我有训练数据 也有测试数据

00:01:04.989 --> 00:01:09.860
测试数据标成红色 这样可以区分点

00:01:09.860 --> 00:01:13.140
用蓝色的点 拟合我标在这里的一条线

00:01:13.140 --> 00:01:14.980
这就是回归的结果

00:01:14.980 --> 00:01:18.340
当我覆盖在这些点上时 立即看见

00:01:18.340 --> 00:01:20.540
似乎很好地抓住了数据中的趋势

00:01:20.540 --> 00:01:23.940
再用这条线预测年龄在

00:01:23.940 --> 00:01:26.200
20至65岁间任何人的净资产

00:01:26.200 --> 00:01:28.520
这就是我的最终目的

00:01:28.520 --> 00:01:31.700
让我给你们看给你们的设置代码

00:01:31.700 --> 00:01:35.040
在测试中 我会让你们填空

00:01:35.040 --> 00:01:37.890
进行测试时 这就是将看到的样子

00:01:37.890 --> 00:01:41.530
我用你即将使用的年龄和净资产

00:01:41.530 --> 00:01:43.230
创建了训练数据和测试数据

00:01:44.720 --> 00:01:46.810
回归的主要内容其实就在

00:01:46.810 --> 00:01:48.920
studentReg 函数中

00:01:48.920 --> 00:01:52.230
我将把你带到那边去一会儿 你将知道它看上去是什么样子

00:01:52.230 --> 00:01:55.370
但你需要做的事是返回拟合回归

00:01:55.370 --> 00:01:58.200
然后将代码标在这里

00:01:58.200 --> 00:02:02.370
我在这里放入测试年龄并用拟合回归

00:02:02.370 --> 00:02:04.400
所做的预测

00:02:04.400 --> 00:02:07.220
我会得到你所看见的线条

00:02:07.220 --> 00:02:09.400
对了 studentReg 在做什么？

00:02:09.400 --> 00:02:13.640
重要的是我知道我正向它发送训练数据

00:02:13.640 --> 00:02:14.568
和净资产数据

00:02:14.568 --> 00:02:17.480
这里想让你做几件事

00:02:17.480 --> 00:02:20.590
第一是导入 sklearn 回归模块

00:02:20.590 --> 00:02:23.000
以便创建并训练自己的回归

00:02:23.000 --> 00:02:25.792
你要把你的回归结果命名为 reg

00:02:25.792 --> 00:02:27.580
因为你最终返回的对象名称为 reg

00:02:27.580 --> 00:02:29.890
所以返回语句会寻找一个名为 reg 的东西

00:02:29.890 --> 00:02:31.430
这就是你的作业和测试

00:02:31.430 --> 00:02:31.930
试试看

