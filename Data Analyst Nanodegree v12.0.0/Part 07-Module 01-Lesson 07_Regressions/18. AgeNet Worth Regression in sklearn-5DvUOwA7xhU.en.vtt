WEBVTT
Kind: captions
Language: en

00:00:00.700 --> 00:00:05.280
Now that you've had a, a quick crash course in the regressions documentation for

00:00:05.280 --> 00:00:09.390
sklearn, let's deploy it on our ages net worths problem so

00:00:09.390 --> 00:00:11.220
you can really see how it works.

00:00:11.220 --> 00:00:12.890
Here's how I'm going to have you do this.

00:00:12.890 --> 00:00:16.870
I've created a data set of net worths and ages, and I've split it

00:00:16.870 --> 00:00:21.500
into training and testing sets, just like we do in supervised classification.

00:00:21.500 --> 00:00:22.940
I've plotted the training data here.

00:00:23.960 --> 00:00:26.770
So you can see that there's definitely a general trend in the data,

00:00:26.770 --> 00:00:29.450
where as you get older, your net worth goes up.

00:00:29.450 --> 00:00:32.280
But I've also added a little bit of noise to the data, so

00:00:32.280 --> 00:00:33.800
that it's not a perfect relationship.

00:00:33.800 --> 00:00:36.110
It's a little bit more true to life in that respect.

00:00:36.110 --> 00:00:39.280
However, the way that I generated the data was using the equation that

00:00:39.280 --> 00:00:41.860
Sebastian was using in the previous few videos.

00:00:41.860 --> 00:00:43.120
So I start with an age and

00:00:43.120 --> 00:00:47.380
then I calculate a net worth using the coefficient of 6.25.

00:00:47.380 --> 00:00:50.600
So the answer that we get out when we perform our regression when we fit it

00:00:50.600 --> 00:00:53.080
should give us a coefficient that's pretty close to 6.25,

00:00:53.080 --> 00:00:56.810
although not exactly because of this noise that I've mixed in here.

00:00:56.810 --> 00:00:58.570
So this is the training data and

00:00:58.570 --> 00:01:01.710
this is what you should get once you've performed your regression.

00:01:01.710 --> 00:01:04.989
In this scatter plot, I now have the training data, but I also have the testing

00:01:04.989 --> 00:01:09.860
data, which I've colored in red so that you can distinguish the points.

00:01:09.860 --> 00:01:13.140
Using the blue points, I fit a line, which I've drawn in here.

00:01:13.140 --> 00:01:14.980
This is the result of the regression.

00:01:14.980 --> 00:01:18.340
Then when I overlay on these points, you can immediately see that it seems to

00:01:18.340 --> 00:01:20.540
be capturing the trend in the data pretty well.

00:01:20.540 --> 00:01:23.940
Also using this line, I can use it to predict the net worth of anyone with

00:01:23.940 --> 00:01:26.200
an age between 20 and 65 or so.

00:01:26.200 --> 00:01:28.520
So this is what we're going for in the end.

00:01:28.520 --> 00:01:31.700
Let me show you a little bit of the setup code that I've given you and

00:01:31.700 --> 00:01:35.040
in the quiz, I'll have you fill in the blanks.

00:01:35.040 --> 00:01:37.890
So when you get into the quiz, here's what it's going to look like.

00:01:37.890 --> 00:01:41.530
I create training and testing data for you with the ages and

00:01:41.530 --> 00:01:43.230
the net worths that you're going to be using.

00:01:44.720 --> 00:01:46.810
And then the meat of the regression is actually going to

00:01:46.810 --> 00:01:48.920
be in this studentReg function.

00:01:48.920 --> 00:01:52.230
I'll take you over there in just a second so you'll know what it will look like.

00:01:52.230 --> 00:01:55.370
But what you need to do with this is return a fitted regression,

00:01:55.370 --> 00:01:58.200
which then I'm going to be using in this plotting code down here.

00:01:58.200 --> 00:02:02.370
So I put in my testing ages and then the predictions that I make for

00:02:02.370 --> 00:02:04.400
my testing ages using my fitted regression,

00:02:04.400 --> 00:02:07.220
and that's going to give me the line that you see.

00:02:07.220 --> 00:02:09.400
So okay, what is studentReg doing?

00:02:09.400 --> 00:02:13.640
Well, the first thing is I know that I'm sending it the training ages data and

00:02:13.640 --> 00:02:14.568
net worths data.

00:02:14.568 --> 00:02:17.480
And what I want you to do here are a few things.

00:02:17.480 --> 00:02:20.590
The first is importing the sklearn regression module, and

00:02:20.590 --> 00:02:23.000
then you want to create and train your regression.

00:02:23.000 --> 00:02:25.792
You want to name your regression reg because you're going to be

00:02:25.792 --> 00:02:27.580
returning an object named reg.

00:02:27.580 --> 00:02:29.890
So, it will be looking for something with that name.

00:02:29.890 --> 00:02:31.430
So that's the assignment and the quiz.

00:02:31.430 --> 00:02:31.930
Give it a shot.

