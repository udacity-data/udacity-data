WEBVTT
Kind: captions
Language: en

00:00:00.470 --> 00:00:03.370
Now that I've explained r-squared to you, question you might be

00:00:03.370 --> 00:00:07.240
asking is this is all well and good Katie but how do I get this information?

00:00:07.240 --> 00:00:10.150
You haven't given me an equation for it or anything like that.

00:00:10.150 --> 00:00:13.810
And what I want to do instead of giving you a big mathematical equation,

00:00:13.810 --> 00:00:17.220
which I don't find that interesting and you could look up on your own.

00:00:17.220 --> 00:00:19.730
I want to show you how to get this information out of scikit-learn.

00:00:19.730 --> 00:00:22.910
This is the code we were looking at a few videos ago when we were building our

00:00:22.910 --> 00:00:24.500
net worth predictor.

00:00:24.500 --> 00:00:28.740
Now, I filled in these lines that are importing the linear progression and

00:00:28.740 --> 00:00:30.130
making some predictions.

00:00:30.130 --> 00:00:33.510
Another thing that happened was I printed some information to the screen,

00:00:33.510 --> 00:00:34.540
you may remember.

00:00:34.540 --> 00:00:36.430
Two of these things I explained to you already.

00:00:36.430 --> 00:00:38.170
The slope and the intercept.

00:00:38.170 --> 00:00:40.690
I access that information by looking for the coefficients and

00:00:40.690 --> 00:00:42.100
the intercept of the regression.

00:00:42.100 --> 00:00:45.670
These are just lines of code that I found in an example online.

00:00:45.670 --> 00:00:47.700
But one thing I did promise you we would come back to,

00:00:47.700 --> 00:00:50.730
and now we are, is this r-squared score that I was printing out.

00:00:50.730 --> 00:00:56.310
And the way access that, is through the reg.score quantity.

00:00:56.310 --> 00:00:59.980
This is kind of similar to how we computed the accuracy in

00:00:59.980 --> 00:01:01.140
our supervised classifier.

00:01:01.140 --> 00:01:05.590
So what we do is we pass the ages, which are the features in this case,

00:01:05.590 --> 00:01:06.680
the input, and

00:01:06.680 --> 00:01:10.440
the net_worths, which are the outputs, the things we're trying to predict.

00:01:10.440 --> 00:01:14.030
And then since the regression has already been fit, up here,

00:01:14.030 --> 00:01:17.470
it knows what it thinks the relationship between these two quantities are.

00:01:17.470 --> 00:01:20.550
So this is all the information that it needs to compute an r-squared score.

00:01:20.550 --> 00:01:22.070
And then, I can just print it out.

00:01:22.070 --> 00:01:26.030
So let me take you over here and show you again what that looks like.

00:01:26.030 --> 00:01:27.740
I have the same output as I had before,

00:01:27.740 --> 00:01:31.000
this might look a little bit familiar so I'm predicting my own net worth.

00:01:31.000 --> 00:01:32.610
I have my slope, my intercept.

00:01:32.610 --> 00:01:35.180
But now you understand the importance of the r-squared score.

00:01:35.180 --> 00:01:40.090
So my r-squared score is about point eight six which is actually really good.

00:01:40.090 --> 00:01:45.450
I'm predicting, I'm doing about 85% of what the best I could doing is.

00:01:45.450 --> 00:01:47.750
I would say 86% is close to one.

00:01:47.750 --> 00:01:53.690
It can be a little bit of an art to translate between an r-squared numerically,

00:01:53.690 --> 00:01:55.150
and saying whether it's a good fit or not.

00:01:55.150 --> 00:01:58.250
And this is something you'll get some intuition for

00:01:58.250 --> 00:02:00.830
overtime, as you play with things.

00:02:00.830 --> 00:02:06.920
I would certainly say that .857 is a good r-squared.

00:02:06.920 --> 00:02:10.970
We're doing a good job of capturing the relationship between the age and

00:02:10.970 --> 00:02:12.810
the net worth of people here.

00:02:12.810 --> 00:02:15.660
I've also seen higher r-squareds in my life.

00:02:15.660 --> 00:02:18.518
So it's possible that there still could be variables out there.

00:02:18.518 --> 00:02:23.440
For example, features that if we were able to incorporate the information from

00:02:23.440 --> 00:02:27.420
additional features we would be better able to predict a person's net worth.

00:02:27.420 --> 00:02:30.290
So in other words, if we were able to use more than one feature,

00:02:30.290 --> 00:02:32.510
sometimes we can push up this r squared even further.

00:02:32.510 --> 00:02:36.410
On the other hand, there are sometimes really complicated problems where it's

00:02:36.410 --> 00:02:40.330
almost impossible to get an r squared that would be anywhere near this high.

00:02:40.330 --> 00:02:43.390
So sometimes, in Political Science for example they're trying to

00:02:43.390 --> 00:02:46.530
run a regression that will predict whether a country will go to war.

